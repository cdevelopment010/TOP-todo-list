(()=>{"use strict";var e={151:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([e.id,'*{margin:0;padding:0;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}.container{min-height:100vh;display:grid;grid-template-columns:1fr 4fr;grid-template-rows:.5fr 4fr;grid-template-areas:"nav header" "nav content"}.container header{grid-area:header}.container header h1{text-align:center}.container .navigation{font-size:2rem;height:100%;background-color:#3f3e49;color:#fff;grid-area:nav;padding:1.5rem;align-self:center;display:flex;flex-direction:column;gap:25px}.container .content{grid-area:content;display:grid;justify-items:center;gap:2rem;grid-template-rows:max-content 1fr}.container .content>div{width:90%}.container ul{display:flex;flex-direction:column;gap:10px}.container li{list-style-type:none;cursor:pointer;position:relative;margin-left:1rem}.container li:hover:before{position:absolute;content:"//";font-weight:bold;left:-1rem;top:0}.container .active{font-weight:bold}.container .active:before{position:absolute;content:"//";font-weight:bold;left:-1rem;top:0}.item-container{display:grid;grid-template-columns:1fr 3fr 1fr;padding:1rem;margin-bottom:1rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25)}.single-item-display{padding:2rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);width:80%;margin:1rem auto;display:grid;grid-template-areas:"title . date" "priority . . " "desc desc desc" "checklist . . " "notes . . " "btns btns btns";gap:20px}.single-item-display .title{grid-area:title}.single-item-display .date{grid-area:date}.single-item-display .priority{grid-area:priority}.single-item-display .desc{grid-area:desc}.single-item-display .checklist{grid-area:checklist}.single-item-display .notes{grid-area:notes}.single-item-display .btn-group{grid-area:btns;justify-self:center;display:flex;gap:20px}',"",{version:3,sources:["webpack://./src/sass/main.scss","webpack://./src/sass/variables.scss"],names:[],mappings:"AAEA,EACI,QAAA,CACA,SAAA,CACA,0BAAA,CACA,6BAAA,CACA,qBAAA,CAGJ,WAEI,gBAAA,CACA,YAAA,CACA,6BAAA,CACA,2BAAA,CACA,8CAAA,CAGA,kBACI,gBAAA,CACA,qBACI,iBAAA,CAIR,uBACI,cAAA,CACA,WAAA,CACA,wBC7BQ,CD8BR,UC7BQ,CD8BR,aAAA,CACA,cAAA,CACA,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,QAAA,CAGJ,oBACI,iBAAA,CACA,YAAA,CACA,oBAAA,CACA,QAAA,CACA,kCAAA,CAEA,wBACI,SAAA,CAIR,cACI,YAAA,CACA,qBAAA,CACA,QAAA,CAGJ,cACI,oBAAA,CACA,cAAA,CACA,iBAAA,CACA,gBAAA,CAGI,2BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,UAAA,CACA,KAAA,CAMZ,mBACI,gBAAA,CACA,0BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,UAAA,CACA,KAAA,CASZ,gBACI,YAAA,CACA,iCAAA,CACA,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,uCAAA,CAGJ,qBACI,YAAA,CACA,kBAAA,CACA,uCAAA,CACA,SAAA,CACA,gBAAA,CAEA,YAAA,CACA,kHAAA,CAOA,QAAA,CAEA,4BACI,eAAA,CAGJ,2BACI,cAAA,CAGJ,+BACI,kBAAA,CAEJ,2BACI,cAAA,CAEJ,gCACI,mBAAA,CAEJ,4BACI,eAAA,CAEJ,gCACI,cAAA,CACA,mBAAA,CACA,YAAA,CACA,QAAA",sourcesContent:['@import \'./variables.scss\'; \n\n* {\n    margin: 0; \n    padding: 0; \n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box; \n    box-sizing: border-box;\n}\n\n.container {\n\n    min-height: 100vh; \n    display: grid; \n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 0.5fr 4fr;\n    grid-template-areas: "nav header"\n        "nav content"\n    ;\n    header {\n        grid-area: header;\n        h1 {\n            text-align: center;\n        }\n    }\n\n    .navigation {\n        font-size: 2rem;\n        height: 100%; \n        background-color:$primary-col-1; \n        color: $primary-col-2; \n        grid-area: nav;\n        padding: 1.5rem;\n        align-self: center;\n        display: flex; \n        flex-direction: column;\n        gap: 25px;\n    }\n\n    .content {\n        grid-area: content;\n        display: grid; \n        justify-items: center;\n        gap: 2rem;\n        grid-template-rows: max-content 1fr;\n\n        >div {\n            width: 90%;\n        }\n    }\n\n    ul {\n        display: flex; \n        flex-direction: column;\n        gap: 10px; \n    }\n\n    li {\n        list-style-type: none;\n        cursor: pointer;\n        position: relative;\n        margin-left: 1rem; \n\n        &:hover {\n            &:before {\n                position: absolute; \n                content: \'//\'; \n                font-weight: bold;\n                left: -1rem; \n                top: 0; \n\n            }\n        }\n    }\n\n    .active {\n        font-weight: bold;\n        &:before {\n            position: absolute; \n            content: \'//\'; \n            font-weight: bold;\n            left: -1rem; \n            top: 0; \n\n        }\n    }\n\n\n}\n\n\n.item-container {\n    display: grid; \n    grid-template-columns: 1fr 3fr 1fr;\n    padding: 1rem; \n    margin-bottom: 1rem; \n    border-radius: 10px;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n}\n\n.single-item-display {\n    padding: 2rem; \n    border-radius: 10px; \n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    width: 80%; \n    margin: 1rem auto;\n\n    display: grid;\n    grid-template-areas: "title . date"\n        "priority . . "\n        "desc desc desc"\n        "checklist . . "\n        "notes . . "\n        "btns btns btns"\n    ;\n    gap: 20px; \n\n    .title {\n        grid-area: title; \n    }\n\n    .date {\n        grid-area: date;\n\n    }\n    .priority {\n        grid-area: priority;\n    }\n    .desc {\n        grid-area: desc; \n    }\n    .checklist {\n        grid-area: checklist; \n    }\n    .notes {\n        grid-area: notes;\n    }\n    .btn-group {\n        grid-area: btns; \n        justify-self: center;\n        display: flex; \n        gap: 20px; \n    }\n    \n}',"$primary-col-1: rgb(63, 62, 73); \n$primary-col-2: rgb(255,255,255); "],sourceRoot:""}]);const A=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,a){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(o[c]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);r&&o[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */"),o=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(o).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},o=[],A=0;A<e.length;A++){var c=e[A],s=r.base?c[0]+r.base:c[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=t(l),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var u=i(m,r);r.byIndex=A,n.splice(A,0,{identifier:l,updater:u,references:1})}o.push(l)}return o}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var a=r(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<a.length;o++){var A=t(a[o]);n[A].references--}for(var c=r(e,i),s=0;s<a.length;s++){var d=t(a[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),r=t(795),i=t.n(r),a=t(569),o=t.n(a),A=t(565),c=t.n(A),s=t(216),d=t.n(s),l=t(589),p=t.n(l),m=t(151),u={};function C(e,n,t,r,i,a){return{title:e,description:n,date:t,priority:r,notes:i,checklist:a,complete:!1}}function g(){const e=document.createElement("nav"),n=document.createElement("ul"),t=document.createElement("li"),r=document.createElement("li"),i=document.createElement("li"),a=document.createElement("li"),o=document.createElement("ul"),A=document.createElement("button"),c=document.createElement("h2");return c.innerText="Projects",t.innerText="Home",t.className="active",t.addEventListener("click",(function(){b(this),f("home")})),r.innerText="Today",r.addEventListener("click",(function(){b(this),f("today")})),i.innerText="Week",i.addEventListener("click",(function(){b(this),f("week")})),a.innerText="Completed",a.addEventListener("click",(function(){b(this),f("completeTasks")})),n.append(t),n.append(r),n.append(i),n.append(a),o.append(c),A.innerText="add project",A.addEventListener("click",(()=>{let e=document.createElement("li");e.innerText="Project X",e.addEventListener("click",(function(){b(this),f(e.innerText)})),o.append(e)})),e.append(n),e.append(o),e.append(A),e}function f(e){console.log(`${e} has been clicked`)}function b(e){document.querySelectorAll("nav li").forEach((e=>{e.classList.remove("active")})),e.classList.add("active")}function h(e){const n=document.createElement("div");return e.forEach((e=>{const t=document.createElement("div"),r=document.createElement("h3"),i=document.createElement("span"),a=document.createElement("button");a.innerText="complete",a.classNam="complete-btn",r.innerText=e.title,i.innerText=e.date,a.addEventListener("click",(function(){!function(e){console.log("btn pressed"),e.complete=!0}(this)})),t.append(i),t.append(r),t.append(a),t.className="item-container",n.append(t)})),n}u.styleTagTransform=p(),u.setAttributes=c(),u.insert=o().bind(null,"head"),u.domAPI=i(),u.insertStyleElement=d(),n()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;const v=[C("randomTitle1","blah desc","date","1","",["item1","item2"]),C("randomTitle2","blah desc","date","1","",["item1","item2"]),C("randomTitle3","blah desc","date","1","",["item1","item2"]),C("randomTitle4","blah desc","date","1","",["item1","item2"])];C("randomTitle","blah desc","date","1","",["item1","item2"]),document.body.append(function(e){const n=document.createElement("div"),t=document.createElement("header"),r=document.createElement("h1"),i=new g,a=new function(){const e=document.createElement("div"),n=document.createElement("h2"),t=new h(v);return n.innerText="Home",e.append(n),e.append(t),e};return r.innerText="To Do List | The Odin Project",t.append(r),n.className="container",i.className="navigation",a.className="content",n.append(t),n.append(i),n.append(a),n}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UyxlQUFnQixZQUFhLE9BQVEsSUFBSSxHQUFJLENBQUMsUUFBUyxVQUNoRUEsRUFBUyxlQUFnQixZQUFhLE9BQVEsSUFBSSxHQUFJLENBQUMsUUFBUyxVQUNoRUEsRUFBUyxlQUFnQixZQUFhLE9BQVEsSUFBSSxHQUFJLENBQUMsUUFBUyxVQUNoRUEsRUFBUyxlQUFnQixZQUFhLE9BQVEsSUFBSSxHQUFJLENBQUMsUUFBUyxXQ0pqREEsRUFBUyxjQUFlLFlBQWEsT0FBUSxJQUFJLEdBQUksQ0FBQyxRQUFTLFVBR2xGaEQsU0FBU3dGLEtBQUtqQixPQ1JDLFNBQXFCa0IsR0FFaEMsTUFBTUMsRUFBTzFGLFNBQVNXLGNBQWMsT0FDOUJnRixFQUFTM0YsU0FBU1csY0FBYyxVQUNoQ3NDLEVBQVFqRCxTQUFTVyxjQUFjLE1BQy9CaUYsRUFBVSxJQUFJcEMsRUFDZHZILEVBQVUsSUZNTCxXQUVYLE1BQU0wSCxFQUFPM0QsU0FBU1csY0FBYyxPQUM5QnNDLEVBQVFqRCxTQUFTVyxjQUFjLE1BQy9Ca0YsRUFBWSxJQUFJZCxFQUFlUSxHQU9yQyxPQU5BdEMsRUFBTWlCLFVBQVksT0FJbEJQLEVBQUtZLE9BQU90QixHQUNaVSxFQUFLWSxPQUFPc0IsR0FDTGxDLEdFRFAsT0FkQVYsRUFBTWlCLFVBQVksZ0NBRWxCeUIsRUFBT3BCLE9BQU90QixHQUNkeUMsRUFBS3ZCLFVBQVksWUFHakJ5QixFQUFRekIsVUFBWSxhQUNwQmxJLEVBQVFrSSxVQUFZLFVBRXBCdUIsRUFBS25CLE9BQU9vQixHQUNaRCxFQUFLbkIsT0FBT3FCLEdBQ1pGLEVBQUtuQixPQUFPdEksR0FHTHlKLEVEZFVJLEsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL3Nhc3MvbWFpbi5zY3NzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9zYXNzL21haW4uc2Nzcz82YTE3Iiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvVG9Eb0l0ZW0uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9uYXZpZ2F0aW9uL25hdmlnYXRpb25ET00uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9yZW5kZXJQYWdlSXRlbS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL0hvbWUuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL0dlbmVyaWNQYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKnttYXJnaW46MDtwYWRkaW5nOjA7LW1vei1ib3gtc2l6aW5nOmJvcmRlci1ib3g7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fS5jb250YWluZXJ7bWluLWhlaWdodDoxMDB2aDtkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmciA0ZnI7Z3JpZC10ZW1wbGF0ZS1yb3dzOi41ZnIgNGZyO2dyaWQtdGVtcGxhdGUtYXJlYXM6XFxcIm5hdiBoZWFkZXJcXFwiIFxcXCJuYXYgY29udGVudFxcXCJ9LmNvbnRhaW5lciBoZWFkZXJ7Z3JpZC1hcmVhOmhlYWRlcn0uY29udGFpbmVyIGhlYWRlciBoMXt0ZXh0LWFsaWduOmNlbnRlcn0uY29udGFpbmVyIC5uYXZpZ2F0aW9ue2ZvbnQtc2l6ZToycmVtO2hlaWdodDoxMDAlO2JhY2tncm91bmQtY29sb3I6IzNmM2U0OTtjb2xvcjojZmZmO2dyaWQtYXJlYTpuYXY7cGFkZGluZzoxLjVyZW07YWxpZ24tc2VsZjpjZW50ZXI7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtnYXA6MjVweH0uY29udGFpbmVyIC5jb250ZW50e2dyaWQtYXJlYTpjb250ZW50O2Rpc3BsYXk6Z3JpZDtqdXN0aWZ5LWl0ZW1zOmNlbnRlcjtnYXA6MnJlbTtncmlkLXRlbXBsYXRlLXJvd3M6bWF4LWNvbnRlbnQgMWZyfS5jb250YWluZXIgLmNvbnRlbnQ+ZGl2e3dpZHRoOjkwJX0uY29udGFpbmVyIHVse2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47Z2FwOjEwcHh9LmNvbnRhaW5lciBsaXtsaXN0LXN0eWxlLXR5cGU6bm9uZTtjdXJzb3I6cG9pbnRlcjtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tbGVmdDoxcmVtfS5jb250YWluZXIgbGk6aG92ZXI6YmVmb3Jle3Bvc2l0aW9uOmFic29sdXRlO2NvbnRlbnQ6XFxcIi8vXFxcIjtmb250LXdlaWdodDpib2xkO2xlZnQ6LTFyZW07dG9wOjB9LmNvbnRhaW5lciAuYWN0aXZle2ZvbnQtd2VpZ2h0OmJvbGR9LmNvbnRhaW5lciAuYWN0aXZlOmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTtjb250ZW50OlxcXCIvL1xcXCI7Zm9udC13ZWlnaHQ6Ym9sZDtsZWZ0Oi0xcmVtO3RvcDowfS5pdGVtLWNvbnRhaW5lcntkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmciAzZnIgMWZyO3BhZGRpbmc6MXJlbTttYXJnaW4tYm90dG9tOjFyZW07Ym9yZGVyLXJhZGl1czoxMHB4O2JveC1zaGFkb3c6MCA1cHggMTBweCAwIHJnYmEoMCwwLDAsLjI1KX0uc2luZ2xlLWl0ZW0tZGlzcGxheXtwYWRkaW5nOjJyZW07Ym9yZGVyLXJhZGl1czoxMHB4O2JveC1zaGFkb3c6MCA1cHggMTBweCAwIHJnYmEoMCwwLDAsLjI1KTt3aWR0aDo4MCU7bWFyZ2luOjFyZW0gYXV0bztkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1hcmVhczpcXFwidGl0bGUgLiBkYXRlXFxcIiBcXFwicHJpb3JpdHkgLiAuIFxcXCIgXFxcImRlc2MgZGVzYyBkZXNjXFxcIiBcXFwiY2hlY2tsaXN0IC4gLiBcXFwiIFxcXCJub3RlcyAuIC4gXFxcIiBcXFwiYnRucyBidG5zIGJ0bnNcXFwiO2dhcDoyMHB4fS5zaW5nbGUtaXRlbS1kaXNwbGF5IC50aXRsZXtncmlkLWFyZWE6dGl0bGV9LnNpbmdsZS1pdGVtLWRpc3BsYXkgLmRhdGV7Z3JpZC1hcmVhOmRhdGV9LnNpbmdsZS1pdGVtLWRpc3BsYXkgLnByaW9yaXR5e2dyaWQtYXJlYTpwcmlvcml0eX0uc2luZ2xlLWl0ZW0tZGlzcGxheSAuZGVzY3tncmlkLWFyZWE6ZGVzY30uc2luZ2xlLWl0ZW0tZGlzcGxheSAuY2hlY2tsaXN0e2dyaWQtYXJlYTpjaGVja2xpc3R9LnNpbmdsZS1pdGVtLWRpc3BsYXkgLm5vdGVze2dyaWQtYXJlYTpub3Rlc30uc2luZ2xlLWl0ZW0tZGlzcGxheSAuYnRuLWdyb3Vwe2dyaWQtYXJlYTpidG5zO2p1c3RpZnktc2VsZjpjZW50ZXI7ZGlzcGxheTpmbGV4O2dhcDoyMHB4fVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zYXNzL21haW4uc2Nzc1wiLFwid2VicGFjazovLy4vc3JjL3Nhc3MvdmFyaWFibGVzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUEsRUFDSSxRQUFBLENBQ0EsU0FBQSxDQUNBLDBCQUFBLENBQ0EsNkJBQUEsQ0FDQSxxQkFBQSxDQUdKLFdBRUksZ0JBQUEsQ0FDQSxZQUFBLENBQ0EsNkJBQUEsQ0FDQSwyQkFBQSxDQUNBLDhDQUFBLENBR0Esa0JBQ0ksZ0JBQUEsQ0FDQSxxQkFDSSxpQkFBQSxDQUlSLHVCQUNJLGNBQUEsQ0FDQSxXQUFBLENBQ0Esd0JDN0JRLENEOEJSLFVDN0JRLENEOEJSLGFBQUEsQ0FDQSxjQUFBLENBQ0EsaUJBQUEsQ0FDQSxZQUFBLENBQ0EscUJBQUEsQ0FDQSxRQUFBLENBR0osb0JBQ0ksaUJBQUEsQ0FDQSxZQUFBLENBQ0Esb0JBQUEsQ0FDQSxRQUFBLENBQ0Esa0NBQUEsQ0FFQSx3QkFDSSxTQUFBLENBSVIsY0FDSSxZQUFBLENBQ0EscUJBQUEsQ0FDQSxRQUFBLENBR0osY0FDSSxvQkFBQSxDQUNBLGNBQUEsQ0FDQSxpQkFBQSxDQUNBLGdCQUFBLENBR0ksMkJBQ0ksaUJBQUEsQ0FDQSxZQUFBLENBQ0EsZ0JBQUEsQ0FDQSxVQUFBLENBQ0EsS0FBQSxDQU1aLG1CQUNJLGdCQUFBLENBQ0EsMEJBQ0ksaUJBQUEsQ0FDQSxZQUFBLENBQ0EsZ0JBQUEsQ0FDQSxVQUFBLENBQ0EsS0FBQSxDQVNaLGdCQUNJLFlBQUEsQ0FDQSxpQ0FBQSxDQUNBLFlBQUEsQ0FDQSxrQkFBQSxDQUNBLGtCQUFBLENBQ0EsdUNBQUEsQ0FHSixxQkFDSSxZQUFBLENBQ0Esa0JBQUEsQ0FDQSx1Q0FBQSxDQUNBLFNBQUEsQ0FDQSxnQkFBQSxDQUVBLFlBQUEsQ0FDQSxrSEFBQSxDQU9BLFFBQUEsQ0FFQSw0QkFDSSxlQUFBLENBR0osMkJBQ0ksY0FBQSxDQUdKLCtCQUNJLGtCQUFBLENBRUosMkJBQ0ksY0FBQSxDQUVKLGdDQUNJLG1CQUFBLENBRUosNEJBQ0ksZUFBQSxDQUVKLGdDQUNJLGNBQUEsQ0FDQSxtQkFBQSxDQUNBLFlBQUEsQ0FDQSxRQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgJy4vdmFyaWFibGVzLnNjc3MnOyBcXG5cXG4qIHtcXG4gICAgbWFyZ2luOiAwOyBcXG4gICAgcGFkZGluZzogMDsgXFxuICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94OyBcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLmNvbnRhaW5lciB7XFxuXFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoOyBcXG4gICAgZGlzcGxheTogZ3JpZDsgXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDRmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAwLjVmciA0ZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFxcXCJuYXYgaGVhZGVyXFxcIlxcbiAgICAgICAgXFxcIm5hdiBjb250ZW50XFxcIlxcbiAgICA7XFxuICAgIGhlYWRlciB7XFxuICAgICAgICBncmlkLWFyZWE6IGhlYWRlcjtcXG4gICAgICAgIGgxIHtcXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgLm5hdmlnYXRpb24ge1xcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xcbiAgICAgICAgaGVpZ2h0OiAxMDAlOyBcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6JHByaW1hcnktY29sLTE7IFxcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbC0yOyBcXG4gICAgICAgIGdyaWQtYXJlYTogbmF2O1xcbiAgICAgICAgcGFkZGluZzogMS41cmVtO1xcbiAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICAgICAgZGlzcGxheTogZmxleDsgXFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICAgICAgZ2FwOiAyNXB4O1xcbiAgICB9XFxuXFxuICAgIC5jb250ZW50IHtcXG4gICAgICAgIGdyaWQtYXJlYTogY29udGVudDtcXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7IFxcbiAgICAgICAganVzdGlmeS1pdGVtczogY2VudGVyO1xcbiAgICAgICAgZ2FwOiAycmVtO1xcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBtYXgtY29udGVudCAxZnI7XFxuXFxuICAgICAgICA+ZGl2IHtcXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIHVsIHtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IFxcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgICAgIGdhcDogMTBweDsgXFxuICAgIH1cXG5cXG4gICAgbGkge1xcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07IFxcblxcbiAgICAgICAgJjpob3ZlciB7XFxuICAgICAgICAgICAgJjpiZWZvcmUge1xcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IFxcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnLy8nOyBcXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgICAgICAgICAgICAgIGxlZnQ6IC0xcmVtOyBcXG4gICAgICAgICAgICAgICAgdG9wOiAwOyBcXG5cXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgLmFjdGl2ZSB7XFxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgICAgICY6YmVmb3JlIHtcXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IFxcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcvLyc7IFxcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICAgICAgICAgIGxlZnQ6IC0xcmVtOyBcXG4gICAgICAgICAgICB0b3A6IDA7IFxcblxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuXFxufVxcblxcblxcbi5pdGVtLWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7IFxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAzZnIgMWZyO1xcbiAgICBwYWRkaW5nOiAxcmVtOyBcXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTsgXFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIGJveC1zaGFkb3c6IDAgNXB4IDEwcHggMCByZ2JhKDAsMCwwLDAuMjUpO1xcbn1cXG5cXG4uc2luZ2xlLWl0ZW0tZGlzcGxheSB7XFxuICAgIHBhZGRpbmc6IDJyZW07IFxcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4OyBcXG4gICAgYm94LXNoYWRvdzogMCA1cHggMTBweCAwIHJnYmEoMCwwLDAsMC4yNSk7XFxuICAgIHdpZHRoOiA4MCU7IFxcbiAgICBtYXJnaW46IDFyZW0gYXV0bztcXG5cXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXFxcInRpdGxlIC4gZGF0ZVxcXCJcXG4gICAgICAgIFxcXCJwcmlvcml0eSAuIC4gXFxcIlxcbiAgICAgICAgXFxcImRlc2MgZGVzYyBkZXNjXFxcIlxcbiAgICAgICAgXFxcImNoZWNrbGlzdCAuIC4gXFxcIlxcbiAgICAgICAgXFxcIm5vdGVzIC4gLiBcXFwiXFxuICAgICAgICBcXFwiYnRucyBidG5zIGJ0bnNcXFwiXFxuICAgIDtcXG4gICAgZ2FwOiAyMHB4OyBcXG5cXG4gICAgLnRpdGxlIHtcXG4gICAgICAgIGdyaWQtYXJlYTogdGl0bGU7IFxcbiAgICB9XFxuXFxuICAgIC5kYXRlIHtcXG4gICAgICAgIGdyaWQtYXJlYTogZGF0ZTtcXG5cXG4gICAgfVxcbiAgICAucHJpb3JpdHkge1xcbiAgICAgICAgZ3JpZC1hcmVhOiBwcmlvcml0eTtcXG4gICAgfVxcbiAgICAuZGVzYyB7XFxuICAgICAgICBncmlkLWFyZWE6IGRlc2M7IFxcbiAgICB9XFxuICAgIC5jaGVja2xpc3Qge1xcbiAgICAgICAgZ3JpZC1hcmVhOiBjaGVja2xpc3Q7IFxcbiAgICB9XFxuICAgIC5ub3RlcyB7XFxuICAgICAgICBncmlkLWFyZWE6IG5vdGVzO1xcbiAgICB9XFxuICAgIC5idG4tZ3JvdXAge1xcbiAgICAgICAgZ3JpZC1hcmVhOiBidG5zOyBcXG4gICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xcbiAgICAgICAgZGlzcGxheTogZmxleDsgXFxuICAgICAgICBnYXA6IDIwcHg7IFxcbiAgICB9XFxuICAgIFxcbn1cIixcIiRwcmltYXJ5LWNvbC0xOiByZ2IoNjMsIDYyLCA3Myk7IFxcbiRwcmltYXJ5LWNvbC0yOiByZ2IoMjU1LDI1NSwyNTUpOyBcIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uc2Nzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uc2Nzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRvRG9JdGVtKHRpdGxlLCBkZXNjcmlwdGlvbiwgZGF0ZSwgcHJpb3JpdHksIG5vdGVzLCBjaGVja2xpc3QpIHtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHRpdGxlLFxuICAgICAgICBkZXNjcmlwdGlvbiwgXG4gICAgICAgIGRhdGUsIFxuICAgICAgICBwcmlvcml0eSwgXG4gICAgICAgIG5vdGVzLCBcbiAgICAgICAgY2hlY2tsaXN0LCBcbiAgICAgICAgY29tcGxldGU6IGZhbHNlXG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5hdmlnYXRpb25ET00oKSB7XG4gICAgY29uc3QgbmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbmF2Jyk7XG4gICAgY29uc3QgdWxTdGF0aWMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpIFxuICAgIGNvbnN0IGhvbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOyBcbiAgICBjb25zdCB0b2RheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgY29uc3Qgd2VlayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgY29uc3QgY29tcGxldGVUYXNrcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgY29uc3QgdWxQcm9qZWN0cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7IFxuICAgIGNvbnN0IGFkZEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOyBcbiAgICBjb25zdCBwcm9qZWN0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpOyBcblxuXG4gICAgcHJvamVjdFRpdGxlLmlubmVyVGV4dCA9ICdQcm9qZWN0cydcblxuICAgIC8vIHN0YXRpYyB1bCBcbiAgICBob21lLmlubmVyVGV4dCA9ICdIb21lJztcbiAgICBob21lLmNsYXNzTmFtZSA9ICdhY3RpdmUnOyAvL21ha2UgdGhpcyBkeW5hbWljXG4gICAgaG9tZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICBjbGVhckFjdGl2ZSh0aGlzKTsgXG4gICAgICAgIG5hdkl0ZW0oJ2hvbWUnKVxuICAgIH0pXG4gICAgdG9kYXkuaW5uZXJUZXh0ID0gJ1RvZGF5JztcbiAgICB0b2RheS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICBjbGVhckFjdGl2ZSh0aGlzKTsgXG4gICAgICAgIG5hdkl0ZW0oJ3RvZGF5JylcbiAgICB9KVxuICAgIHdlZWsuaW5uZXJUZXh0ID0gJ1dlZWsnO1xuICAgIHdlZWsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAgICAgY2xlYXJBY3RpdmUodGhpcyk7IFxuICAgICAgICBuYXZJdGVtKCd3ZWVrJylcbiAgICB9KVxuICAgIGNvbXBsZXRlVGFza3MuaW5uZXJUZXh0ID0gJ0NvbXBsZXRlZCc7XG4gICAgY29tcGxldGVUYXNrcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICBjbGVhckFjdGl2ZSh0aGlzKTsgXG4gICAgICAgIG5hdkl0ZW0oJ2NvbXBsZXRlVGFza3MnKVxuICAgIH0pXG5cblxuICAgIHVsU3RhdGljLmFwcGVuZChob21lKTtcbiAgICB1bFN0YXRpYy5hcHBlbmQodG9kYXkpO1xuICAgIHVsU3RhdGljLmFwcGVuZCh3ZWVrKTtcbiAgICB1bFN0YXRpYy5hcHBlbmQoY29tcGxldGVUYXNrcyk7XG5cblxuICAgIC8vIGR5bmFtaWMgcHJvamVjdHNcbiAgICAvL3dpbGwgbmVlZCB0byBsb29rIGZvciBsb2NhbCBzdG9yYWdlIGhlcmUgbGF0ZXJcblxuICAgIHVsUHJvamVjdHMuYXBwZW5kKHByb2plY3RUaXRsZSk7IFxuXG4gICAgYWRkQnRuLmlubmVyVGV4dCA9ICdhZGQgcHJvamVjdCc7XG4gICAgYWRkQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBsZXQgaXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7IFxuICAgICAgICBpdGVtLmlubmVyVGV4dCA9IGFkZEl0ZW0oKTsgXG4gICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNsZWFyQWN0aXZlKHRoaXMpOyBcbiAgICAgICAgICAgIG5hdkl0ZW0oaXRlbS5pbm5lclRleHQpOyBcbiAgICAgICAgfSlcbiAgICAgICAgdWxQcm9qZWN0cy5hcHBlbmQoaXRlbSk7IFxuICAgIH0pXG5cbiAgICBuYXYuYXBwZW5kKHVsU3RhdGljKVxuICAgIG5hdi5hcHBlbmQodWxQcm9qZWN0cyk7IFxuICAgIG5hdi5hcHBlbmQoYWRkQnRuKTtcbiAgICByZXR1cm4gbmF2OyBcbn1cblxuZnVuY3Rpb24gbmF2SXRlbShpdGVtKSB7XG4gICAgY29uc29sZS5sb2coYCR7aXRlbX0gaGFzIGJlZW4gY2xpY2tlZGApOyBcbn1cblxuZnVuY3Rpb24gYWRkSXRlbSgpIHtcbiAgICByZXR1cm4gJ1Byb2plY3QgWCc7XG59XG5cbmZ1bmN0aW9uIGNsZWFyQWN0aXZlKGl0ZW0pIHtcbiAgICBsZXQgbGlzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnbmF2IGxpJyk7IFxuICAgIGxpcy5mb3JFYWNoKGxpID0+IHtcbiAgICAgICAgbGkuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJylcbiAgICB9KTsgXG4gICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW5kZXJQYWdlSXRlbShpdGVtcykge1xuXG4gICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IFxuICAgIFxuICAgIC8vIG5lZWQgdG8gZG8gc29tZXRoaW5nIHRvIG9ubHkgc2hvdyB0YXNrcyB0byBkb1xuICAgIGl0ZW1zLmZvckVhY2goaXRlbT0+IHtcbiAgICAgICAgY29uc3QgaXRlbUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICAgICAgY29uc3QgaXRlbVRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTsgXG4gICAgICAgIGNvbnN0IGl0ZW1EYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOyBcbiAgICAgICAgY29uc3QgY29tcGxldGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTsgXG5cblxuICAgICAgICBjb21wbGV0ZS5pbm5lclRleHQgPSAnY29tcGxldGUnO1xuICAgICAgICBjb21wbGV0ZS5jbGFzc05hbSA9ICdjb21wbGV0ZS1idG4nOyBcbiAgICAgICAgaXRlbVRpdGxlLmlubmVyVGV4dCA9IGl0ZW0udGl0bGU7XG4gICAgICAgIGl0ZW1EYXRlLmlubmVyVGV4dCA9IGl0ZW0uZGF0ZTsgXG5cbiAgICAgICAgLy8gYnV0dG9uIGV2ZW50IGxpc3RlbmVyXG4gICAgICAgIGNvbXBsZXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb21wbGV0ZVRhc2sodGhpcyk7IFxuICAgICAgICB9KVxuXG5cbiAgICAgICAgaXRlbUNvbnRhaW5lci5hcHBlbmQoaXRlbURhdGUpO1xuICAgICAgICBpdGVtQ29udGFpbmVyLmFwcGVuZChpdGVtVGl0bGUpO1xuICAgICAgICBpdGVtQ29udGFpbmVyLmFwcGVuZChjb21wbGV0ZSk7XG5cblxuICAgICAgICBpdGVtQ29udGFpbmVyLmNsYXNzTmFtZSA9ICdpdGVtLWNvbnRhaW5lcidcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZChpdGVtQ29udGFpbmVyKTsgXG4gICAgfSlcblxuICAgIHJldHVybiBjb250YWluZXI7IFxufVxuXG5mdW5jdGlvbiBjb21wbGV0ZVRhc2soaXRlbSkge1xuICAgIGNvbnNvbGUubG9nKCdidG4gcHJlc3NlZCcpOyBcbiAgICByZXR1cm4gaXRlbS5jb21wbGV0ZSA9IHRydWU7XG59IiwiaW1wb3J0IHJlbmRlclBhZ2VJdGVtIGZyb20gXCIuL3JlbmRlclBhZ2VJdGVtXCI7XG5pbXBvcnQgVG9Eb0l0ZW0gZnJvbSBcIi4vVG9Eb0l0ZW1cIjsgLy8gZm9yIHRlc3RpbmcgcHVycG9zZXNcblxuXG4vLyBmb3IgdGVzdGluZyBwdXJwb3Nlc1xuXG5jb25zdCBpdGVtc1RlbXAgPSBbXG4gICAgVG9Eb0l0ZW0oJ3JhbmRvbVRpdGxlMScsICdibGFoIGRlc2MnLCAnZGF0ZScsICcxJywnJywgWydpdGVtMScsICdpdGVtMiddKSwgXG4gICAgVG9Eb0l0ZW0oJ3JhbmRvbVRpdGxlMicsICdibGFoIGRlc2MnLCAnZGF0ZScsICcxJywnJywgWydpdGVtMScsICdpdGVtMiddKSwgXG4gICAgVG9Eb0l0ZW0oJ3JhbmRvbVRpdGxlMycsICdibGFoIGRlc2MnLCAnZGF0ZScsICcxJywnJywgWydpdGVtMScsICdpdGVtMiddKSwgXG4gICAgVG9Eb0l0ZW0oJ3JhbmRvbVRpdGxlNCcsICdibGFoIGRlc2MnLCAnZGF0ZScsICcxJywnJywgWydpdGVtMScsICdpdGVtMiddKVxuXVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIb21lKCkge1xuXG4gICAgY29uc3QgaG9tZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7IFxuICAgIGNvbnN0IHBhZ2VJdGVtcyA9IG5ldyByZW5kZXJQYWdlSXRlbShpdGVtc1RlbXApOyBcbiAgICB0aXRsZS5pbm5lclRleHQgPSAnSG9tZSc7IFxuXG4gICAgXG5cbiAgICBob21lLmFwcGVuZCh0aXRsZSk7IFxuICAgIGhvbWUuYXBwZW5kKHBhZ2VJdGVtcyk7IFxuICAgIHJldHVybiBob21lOyBcbn1cblxuXG4iLCJpbXBvcnQgJy4vc2Fzcy9tYWluLnNjc3MnOyBcbmltcG9ydCBUb0RvSXRlbSBmcm9tICcuL1RvRG9JdGVtJzsnLi9Ub0RvSXRlbS5qcyc7IFxuaW1wb3J0IHJlbmRlclNpbmdsZUl0ZW0gZnJvbSAnLi9yZW5kZXJTaW5nbGVJdGVtJzsgXG5pbXBvcnQgR2VuZXJpY1BhZ2UgZnJvbSAnLi9HZW5lcmljUGFnZS5qcyc7IFxuaW1wb3J0IEhvbWUgZnJvbSAnLi9Ib21lJztcblxuY29uc3QgcmFuZG9tSXRlbSA9IFRvRG9JdGVtKCdyYW5kb21UaXRsZScsICdibGFoIGRlc2MnLCAnZGF0ZScsICcxJywnJywgWydpdGVtMScsICdpdGVtMiddKVxuXG4vLyBkb2N1bWVudC5ib2R5LmFwcGVuZChyZW5kZXJTaW5nbGVJdGVtKHJhbmRvbUl0ZW0pKTsgXG5kb2N1bWVudC5ib2R5LmFwcGVuZChHZW5lcmljUGFnZShIb21lKSk7XG5cblxuIiwiaW1wb3J0IE5hdmlnYXRpb25ET00gZnJvbSBcIi4vbmF2aWdhdGlvbi9uYXZpZ2F0aW9uRE9NXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHZW5lcmljUGFnZShwcm9qZWN0KSB7XG5cbiAgICBjb25zdCBwYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IFxuICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2hlYWRlcicpOyBcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7IFxuICAgIGNvbnN0IHNpZGViYXIgPSBuZXcgTmF2aWdhdGlvbkRPTSgpOyBcbiAgICBjb25zdCBjb250ZW50ID0gbmV3IHByb2plY3Q7IFxuXG4gICAgdGl0bGUuaW5uZXJUZXh0ID0gJ1RvIERvIExpc3QgfCBUaGUgT2RpbiBQcm9qZWN0J1xuXG4gICAgaGVhZGVyLmFwcGVuZCh0aXRsZSk7IFxuICAgIHBhZ2UuY2xhc3NOYW1lID0gJ2NvbnRhaW5lcic7IFxuXG5cbiAgICBzaWRlYmFyLmNsYXNzTmFtZSA9ICduYXZpZ2F0aW9uJzsgXG4gICAgY29udGVudC5jbGFzc05hbWUgPSAnY29udGVudCc7XG5cbiAgICBwYWdlLmFwcGVuZChoZWFkZXIpO1xuICAgIHBhZ2UuYXBwZW5kKHNpZGViYXIpOyBcbiAgICBwYWdlLmFwcGVuZChjb250ZW50KTsgXG5cblxuICAgIHJldHVybiBwYWdlOyBcbn0iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlRvRG9JdGVtIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImRhdGUiLCJwcmlvcml0eSIsIm5vdGVzIiwiY2hlY2tsaXN0IiwiY29tcGxldGUiLCJOYXZpZ2F0aW9uRE9NIiwibmF2IiwidWxTdGF0aWMiLCJob21lIiwidG9kYXkiLCJ3ZWVrIiwiY29tcGxldGVUYXNrcyIsInVsUHJvamVjdHMiLCJhZGRCdG4iLCJwcm9qZWN0VGl0bGUiLCJpbm5lclRleHQiLCJjbGFzc05hbWUiLCJhZGRFdmVudExpc3RlbmVyIiwiY2xlYXJBY3RpdmUiLCJuYXZJdGVtIiwiYXBwZW5kIiwiY29uc29sZSIsImxvZyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwibGkiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW5kZXJQYWdlSXRlbSIsIml0ZW1zIiwiY29udGFpbmVyIiwiaXRlbUNvbnRhaW5lciIsIml0ZW1UaXRsZSIsIml0ZW1EYXRlIiwiY2xhc3NOYW0iLCJjb21wbGV0ZVRhc2siLCJpdGVtc1RlbXAiLCJib2R5IiwicHJvamVjdCIsInBhZ2UiLCJoZWFkZXIiLCJzaWRlYmFyIiwicGFnZUl0ZW1zIiwiR2VuZXJpY1BhZ2UiXSwic291cmNlUm9vdCI6IiJ9