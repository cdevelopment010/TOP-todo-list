/*! For license information please see main.js.LICENSE.txt */
(()=>{var t={287:()=>{!function(){"use strict";function t(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function e(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?t(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}function a(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var a,r,i=[],o=!0,c=!1;try{for(n=n.call(t);!(o=(a=n.next()).done)&&(i.push(a.value),!e||i.length!==e);o=!0);}catch(t){c=!0,r=t}finally{try{o||null==n.return||n.return()}finally{if(c)throw r}}return i}}(t,e)||c(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t){return function(t){if(Array.isArray(t))return s(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||c(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function c(t,e){if(t){if("string"==typeof t)return s(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(t,e):void 0}}function s(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,a=new Array(e);n<e;n++)a[n]=t[n];return a}var l=function(){},f={},u={},m=null,d={mark:l,measure:l};try{"undefined"!=typeof window&&(f=window),"undefined"!=typeof document&&(u=document),"undefined"!=typeof MutationObserver&&(m=MutationObserver),"undefined"!=typeof performance&&(d=performance)}catch(t){}var p=(f.navigator||{}).userAgent,A=void 0===p?"":p,g=f,v=u,b=m,h=d,y=!!g.document,C=!!v.documentElement&&!!v.head&&"function"==typeof v.addEventListener&&"function"==typeof v.createElement,k=~A.indexOf("MSIE")||~A.indexOf("Trident/"),x="svg-inline--fa",w="data-fa-i2svg",E="data-fa-pseudo-element",O="data-prefix",S="data-icon",I="fontawesome-i2svg",B=["HTML","HEAD","STYLE","SCRIPT"],N=function(){try{return!0}catch(t){return!1}}(),j={fas:"solid","fa-solid":"solid",far:"regular","fa-regular":"regular",fal:"light","fa-light":"light",fat:"thin","fa-thin":"thin",fad:"duotone","fa-duotone":"duotone",fab:"brands","fa-brands":"brands",fak:"kit","fa-kit":"kit",fa:"solid"},T={solid:"fas",regular:"far",light:"fal",thin:"fat",duotone:"fad",brands:"fab",kit:"fak"},P={fab:"fa-brands",fad:"fa-duotone",fak:"fa-kit",fal:"fa-light",far:"fa-regular",fas:"fa-solid",fat:"fa-thin"},z={"fa-brands":"fab","fa-duotone":"fad","fa-kit":"fak","fa-light":"fal","fa-regular":"far","fa-solid":"fas","fa-thin":"fat"},M=/fa[srltdbk\-\ ]/,L="fa-layers-text",D=/Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Kit)?.*/i,_={900:"fas",400:"far",normal:"far",300:"fal",100:"fat"},Y=[1,2,3,4,5,6,7,8,9,10],R=Y.concat([11,12,13,14,15,16,17,18,19,20]),$=["class","data-prefix","data-icon","data-fa-transform","data-fa-mask"],q="duotone-group",J="primary",F="secondary",H=[].concat(o(Object.keys(T)),["2xs","xs","sm","lg","xl","2xl","beat","border","fade","beat-fade","bounce","flip-both","flip-horizontal","flip-vertical","flip","fw","inverse","layers-counter","layers-text","layers","li","pull-left","pull-right","pulse","rotate-180","rotate-270","rotate-90","rotate-by","shake","spin-pulse","spin-reverse","spin","stack-1x","stack-2x","stack","ul",q,"swap-opacity",J,F]).concat(Y.map((function(t){return"".concat(t,"x")}))).concat(R.map((function(t){return"w-".concat(t)}))),G=g.FontAwesomeConfig||{};v&&"function"==typeof v.querySelector&&[["data-family-prefix","familyPrefix"],["data-style-default","styleDefault"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]].forEach((function(t){var e=i(t,2),n=e[0],a=e[1],r=function(t){return""===t||"false"!==t&&("true"===t||t)}(function(t){var e=v.querySelector("script["+t+"]");if(e)return e.getAttribute(t)}(n));null!=r&&(G[a]=r)}));var U=e(e({},{familyPrefix:"fa",styleDefault:"solid",replacementClass:x,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0}),G);U.autoReplaceSvg||(U.observeMutations=!1);var W={};Object.keys(U).forEach((function(t){Object.defineProperty(W,t,{enumerable:!0,set:function(e){U[t]=e,K.forEach((function(t){return t(W)}))},get:function(){return U[t]}})})),g.FontAwesomeConfig=W;var K=[],Q=16,Z={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};function V(){for(var t=12,e="";t-- >0;)e+="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"[62*Math.random()|0];return e}function X(t){for(var e=[],n=(t||[]).length>>>0;n--;)e[n]=t[n];return e}function tt(t){return t.classList?X(t.classList):(t.getAttribute("class")||"").split(" ").filter((function(t){return t}))}function et(t){return"".concat(t).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function nt(t){return Object.keys(t||{}).reduce((function(e,n){return e+"".concat(n,": ").concat(t[n].trim(),";")}),"")}function at(t){return t.size!==Z.size||t.x!==Z.x||t.y!==Z.y||t.rotate!==Z.rotate||t.flipX||t.flipY}function rt(){var t="fa",e=x,n=W.familyPrefix,a=W.replacementClass,r=':host,:root{--fa-font-solid:normal 900 1em/1 "Font Awesome 6 Solid";--fa-font-regular:normal 400 1em/1 "Font Awesome 6 Regular";--fa-font-light:normal 300 1em/1 "Font Awesome 6 Light";--fa-font-thin:normal 100 1em/1 "Font Awesome 6 Thin";--fa-font-duotone:normal 900 1em/1 "Font Awesome 6 Duotone";--fa-font-brands:normal 400 1em/1 "Font Awesome 6 Brands"}svg:not(:host).svg-inline--fa,svg:not(:root).svg-inline--fa{overflow:visible;box-sizing:content-box}.svg-inline--fa{display:var(--fa-display,inline-block);height:1em;overflow:visible;vertical-align:-.125em}.svg-inline--fa.fa-2xs{vertical-align:.1em}.svg-inline--fa.fa-xs{vertical-align:0}.svg-inline--fa.fa-sm{vertical-align:-.0714285705em}.svg-inline--fa.fa-lg{vertical-align:-.2em}.svg-inline--fa.fa-xl{vertical-align:-.25em}.svg-inline--fa.fa-2xl{vertical-align:-.3125em}.svg-inline--fa.fa-pull-left{margin-right:var(--fa-pull-margin,.3em);width:auto}.svg-inline--fa.fa-pull-right{margin-left:var(--fa-pull-margin,.3em);width:auto}.svg-inline--fa.fa-li{width:var(--fa-li-width,2em);top:.25em}.svg-inline--fa.fa-fw{width:var(--fa-fw-width,1.25em)}.fa-layers svg.svg-inline--fa{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0}.fa-layers-counter,.fa-layers-text{display:inline-block;position:absolute;text-align:center}.fa-layers{display:inline-block;height:1em;position:relative;text-align:center;vertical-align:-.125em;width:1em}.fa-layers svg.svg-inline--fa{-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-text{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-transform-origin:center center;transform-origin:center center}.fa-layers-counter{background-color:var(--fa-counter-background-color,#ff253a);border-radius:var(--fa-counter-border-radius,1em);box-sizing:border-box;color:var(--fa-inverse,#fff);line-height:var(--fa-counter-line-height,1);max-width:var(--fa-counter-max-width,5em);min-width:var(--fa-counter-min-width,1.5em);overflow:hidden;padding:var(--fa-counter-padding,.25em .5em);right:var(--fa-right,0);text-overflow:ellipsis;top:var(--fa-top,0);-webkit-transform:scale(var(--fa-counter-scale,.25));transform:scale(var(--fa-counter-scale,.25));-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-bottom-right{bottom:var(--fa-bottom,0);right:var(--fa-right,0);top:auto;-webkit-transform:scale(var(--fa-layers-scale,.25));transform:scale(var(--fa-layers-scale,.25));-webkit-transform-origin:bottom right;transform-origin:bottom right}.fa-layers-bottom-left{bottom:var(--fa-bottom,0);left:var(--fa-left,0);right:auto;top:auto;-webkit-transform:scale(var(--fa-layers-scale,.25));transform:scale(var(--fa-layers-scale,.25));-webkit-transform-origin:bottom left;transform-origin:bottom left}.fa-layers-top-right{top:var(--fa-top,0);right:var(--fa-right,0);-webkit-transform:scale(var(--fa-layers-scale,.25));transform:scale(var(--fa-layers-scale,.25));-webkit-transform-origin:top right;transform-origin:top right}.fa-layers-top-left{left:var(--fa-left,0);right:auto;top:var(--fa-top,0);-webkit-transform:scale(var(--fa-layers-scale,.25));transform:scale(var(--fa-layers-scale,.25));-webkit-transform-origin:top left;transform-origin:top left}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-2xs{font-size:.625em;line-height:.1em;vertical-align:.225em}.fa-xs{font-size:.75em;line-height:.0833333337em;vertical-align:.125em}.fa-sm{font-size:.875em;line-height:.0714285718em;vertical-align:.0535714295em}.fa-lg{font-size:1.25em;line-height:.05em;vertical-align:-.075em}.fa-xl{font-size:1.5em;line-height:.0416666682em;vertical-align:-.125em}.fa-2xl{font-size:2em;line-height:.03125em;vertical-align:-.1875em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:var(--fa-li-margin,2.5em);padding-left:0}.fa-ul>li{position:relative}.fa-li{left:calc(var(--fa-li-width,2em) * -1);position:absolute;text-align:center;width:var(--fa-li-width,2em);line-height:inherit}.fa-border{border-color:var(--fa-border-color,#eee);border-radius:var(--fa-border-radius,.1em);border-style:var(--fa-border-style,solid);border-width:var(--fa-border-width,.08em);padding:var(--fa-border-padding,.2em .25em .15em)}.fa-pull-left{float:left;margin-right:var(--fa-pull-margin,.3em)}.fa-pull-right{float:right;margin-left:var(--fa-pull-margin,.3em)}.fa-beat{-webkit-animation-name:fa-beat;animation-name:fa-beat;-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,ease-in-out);animation-timing-function:var(--fa-animation-timing,ease-in-out)}.fa-bounce{-webkit-animation-name:fa-bounce;animation-name:fa-bounce;-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,cubic-bezier(.28,.84,.42,1));animation-timing-function:var(--fa-animation-timing,cubic-bezier(.28,.84,.42,1))}.fa-fade{-webkit-animation-name:fa-fade;animation-name:fa-fade;-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1));animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1))}.fa-beat-fade{-webkit-animation-name:fa-beat-fade;animation-name:fa-beat-fade;-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1));animation-timing-function:var(--fa-animation-timing,cubic-bezier(.4,0,.6,1))}.fa-flip{-webkit-animation-name:fa-flip;animation-name:fa-flip;-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,ease-in-out);animation-timing-function:var(--fa-animation-timing,ease-in-out)}.fa-shake{-webkit-animation-name:fa-shake;animation-name:fa-shake;-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,linear);animation-timing-function:var(--fa-animation-timing,linear)}.fa-spin{-webkit-animation-name:fa-spin;animation-name:fa-spin;-webkit-animation-delay:var(--fa-animation-delay,0);animation-delay:var(--fa-animation-delay,0);-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,2s);animation-duration:var(--fa-animation-duration,2s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,linear);animation-timing-function:var(--fa-animation-timing,linear)}.fa-spin-reverse{--fa-animation-direction:reverse}.fa-pulse,.fa-spin-pulse{-webkit-animation-name:fa-spin;animation-name:fa-spin;-webkit-animation-direction:var(--fa-animation-direction,normal);animation-direction:var(--fa-animation-direction,normal);-webkit-animation-duration:var(--fa-animation-duration,1s);animation-duration:var(--fa-animation-duration,1s);-webkit-animation-iteration-count:var(--fa-animation-iteration-count,infinite);animation-iteration-count:var(--fa-animation-iteration-count,infinite);-webkit-animation-timing-function:var(--fa-animation-timing,steps(8));animation-timing-function:var(--fa-animation-timing,steps(8))}@media (prefers-reduced-motion:reduce){.fa-beat,.fa-beat-fade,.fa-bounce,.fa-fade,.fa-flip,.fa-pulse,.fa-shake,.fa-spin,.fa-spin-pulse{-webkit-animation-delay:-1ms;animation-delay:-1ms;-webkit-animation-duration:1ms;animation-duration:1ms;-webkit-animation-iteration-count:1;animation-iteration-count:1;transition-delay:0s;transition-duration:0s}}@-webkit-keyframes fa-beat{0%,90%{-webkit-transform:scale(1);transform:scale(1)}45%{-webkit-transform:scale(var(--fa-beat-scale,1.25));transform:scale(var(--fa-beat-scale,1.25))}}@keyframes fa-beat{0%,90%{-webkit-transform:scale(1);transform:scale(1)}45%{-webkit-transform:scale(var(--fa-beat-scale,1.25));transform:scale(var(--fa-beat-scale,1.25))}}@-webkit-keyframes fa-bounce{0%{-webkit-transform:scale(1,1) translateY(0);transform:scale(1,1) translateY(0)}10%{-webkit-transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0);transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0)}30%{-webkit-transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em));transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em))}50%{-webkit-transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0);transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0)}57%{-webkit-transform:scale(1,1) translateY(var(--fa-bounce-rebound,-.125em));transform:scale(1,1) translateY(var(--fa-bounce-rebound,-.125em))}64%{-webkit-transform:scale(1,1) translateY(0);transform:scale(1,1) translateY(0)}100%{-webkit-transform:scale(1,1) translateY(0);transform:scale(1,1) translateY(0)}}@keyframes fa-bounce{0%{-webkit-transform:scale(1,1) translateY(0);transform:scale(1,1) translateY(0)}10%{-webkit-transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0);transform:scale(var(--fa-bounce-start-scale-x,1.1),var(--fa-bounce-start-scale-y,.9)) translateY(0)}30%{-webkit-transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em));transform:scale(var(--fa-bounce-jump-scale-x,.9),var(--fa-bounce-jump-scale-y,1.1)) translateY(var(--fa-bounce-height,-.5em))}50%{-webkit-transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0);transform:scale(var(--fa-bounce-land-scale-x,1.05),var(--fa-bounce-land-scale-y,.95)) translateY(0)}57%{-webkit-transform:scale(1,1) translateY(var(--fa-bounce-rebound,-.125em));transform:scale(1,1) translateY(var(--fa-bounce-rebound,-.125em))}64%{-webkit-transform:scale(1,1) translateY(0);transform:scale(1,1) translateY(0)}100%{-webkit-transform:scale(1,1) translateY(0);transform:scale(1,1) translateY(0)}}@-webkit-keyframes fa-fade{50%{opacity:var(--fa-fade-opacity,.4)}}@keyframes fa-fade{50%{opacity:var(--fa-fade-opacity,.4)}}@-webkit-keyframes fa-beat-fade{0%,100%{opacity:var(--fa-beat-fade-opacity,.4);-webkit-transform:scale(1);transform:scale(1)}50%{opacity:1;-webkit-transform:scale(var(--fa-beat-fade-scale,1.125));transform:scale(var(--fa-beat-fade-scale,1.125))}}@keyframes fa-beat-fade{0%,100%{opacity:var(--fa-beat-fade-opacity,.4);-webkit-transform:scale(1);transform:scale(1)}50%{opacity:1;-webkit-transform:scale(var(--fa-beat-fade-scale,1.125));transform:scale(var(--fa-beat-fade-scale,1.125))}}@-webkit-keyframes fa-flip{50%{-webkit-transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg));transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg))}}@keyframes fa-flip{50%{-webkit-transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg));transform:rotate3d(var(--fa-flip-x,0),var(--fa-flip-y,1),var(--fa-flip-z,0),var(--fa-flip-angle,-180deg))}}@-webkit-keyframes fa-shake{0%{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}4%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}24%,8%{-webkit-transform:rotate(-18deg);transform:rotate(-18deg)}12%,28%{-webkit-transform:rotate(18deg);transform:rotate(18deg)}16%{-webkit-transform:rotate(-22deg);transform:rotate(-22deg)}20%{-webkit-transform:rotate(22deg);transform:rotate(22deg)}32%{-webkit-transform:rotate(-12deg);transform:rotate(-12deg)}36%{-webkit-transform:rotate(12deg);transform:rotate(12deg)}100%,40%{-webkit-transform:rotate(0);transform:rotate(0)}}@keyframes fa-shake{0%{-webkit-transform:rotate(-15deg);transform:rotate(-15deg)}4%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}24%,8%{-webkit-transform:rotate(-18deg);transform:rotate(-18deg)}12%,28%{-webkit-transform:rotate(18deg);transform:rotate(18deg)}16%{-webkit-transform:rotate(-22deg);transform:rotate(-22deg)}20%{-webkit-transform:rotate(22deg);transform:rotate(22deg)}32%{-webkit-transform:rotate(-12deg);transform:rotate(-12deg)}36%{-webkit-transform:rotate(12deg);transform:rotate(12deg)}100%,40%{-webkit-transform:rotate(0);transform:rotate(0)}}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.fa-rotate-90{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-webkit-transform:scale(-1,1);transform:scale(-1,1)}.fa-flip-vertical{-webkit-transform:scale(1,-1);transform:scale(1,-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1,-1);transform:scale(-1,-1)}.fa-rotate-by{-webkit-transform:rotate(var(--fa-rotate-angle,none));transform:rotate(var(--fa-rotate-angle,none))}.fa-stack{display:inline-block;vertical-align:middle;height:2em;position:relative;width:2.5em}.fa-stack-1x,.fa-stack-2x{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;z-index:var(--fa-stack-z-index,auto)}.svg-inline--fa.fa-stack-1x{height:1em;width:1.25em}.svg-inline--fa.fa-stack-2x{height:2em;width:2.5em}.fa-inverse{color:var(--fa-inverse,#fff)}.fa-sr-only,.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.fa-sr-only-focusable:not(:focus),.sr-only-focusable:not(:focus){position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.svg-inline--fa .fa-primary{fill:var(--fa-primary-color,currentColor);opacity:var(--fa-primary-opacity,1)}.svg-inline--fa .fa-secondary{fill:var(--fa-secondary-color,currentColor);opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-primary{opacity:var(--fa-secondary-opacity,.4)}.svg-inline--fa.fa-swap-opacity .fa-secondary{opacity:var(--fa-primary-opacity,1)}.svg-inline--fa mask .fa-primary,.svg-inline--fa mask .fa-secondary{fill:#000}.fa-duotone.fa-inverse,.fad.fa-inverse{color:var(--fa-inverse,#fff)}';if(n!==t||a!==e){var i=new RegExp("\\.".concat(t,"\\-"),"g"),o=new RegExp("\\--".concat(t,"\\-"),"g"),c=new RegExp("\\.".concat(e),"g");r=r.replace(i,".".concat(n,"-")).replace(o,"--".concat(n,"-")).replace(c,".".concat(a))}return r}var it=!1;function ot(){W.autoAddCss&&!it&&(function(t){if(t&&C){var e=v.createElement("style");e.setAttribute("type","text/css"),e.innerHTML=t;for(var n=v.head.childNodes,a=null,r=n.length-1;r>-1;r--){var i=n[r],o=(i.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(o)>-1&&(a=i)}v.head.insertBefore(e,a)}}(rt()),it=!0)}var ct={mixout:function(){return{dom:{css:rt,insertCss:ot}}},hooks:function(){return{beforeDOMElementCreation:function(){ot()},beforeI2svg:function(){ot()}}}},st=g||{};st.___FONT_AWESOME___||(st.___FONT_AWESOME___={}),st.___FONT_AWESOME___.styles||(st.___FONT_AWESOME___.styles={}),st.___FONT_AWESOME___.hooks||(st.___FONT_AWESOME___.hooks={}),st.___FONT_AWESOME___.shims||(st.___FONT_AWESOME___.shims=[]);var lt=st.___FONT_AWESOME___,ft=[],ut=!1;function mt(t){C&&(ut?setTimeout(t,0):ft.push(t))}function dt(t){var e=t.tag,n=t.attributes,a=void 0===n?{}:n,r=t.children,i=void 0===r?[]:r;return"string"==typeof t?et(t):"<".concat(e," ").concat(function(t){return Object.keys(t||{}).reduce((function(e,n){return e+"".concat(n,'="').concat(et(t[n]),'" ')}),"").trim()}(a),">").concat(i.map(dt).join(""),"</").concat(e,">")}function pt(t,e,n){if(t&&t[e]&&t[e][n])return{prefix:e,iconName:n,icon:t[e][n]}}C&&((ut=(v.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(v.readyState))||v.addEventListener("DOMContentLoaded",(function t(){v.removeEventListener("DOMContentLoaded",t),ut=1,ft.map((function(t){return t()}))})));var At=function(t,e,n,a){var r,i,o,c=Object.keys(t),s=c.length,l=void 0!==a?function(t,e){return function(n,a,r,i){return t.call(e,n,a,r,i)}}(e,a):e;for(void 0===n?(r=1,o=t[c[0]]):(r=0,o=n);r<s;r++)o=l(o,t[i=c[r]],i,t);return o};function gt(t){var e=function(t){for(var e=[],n=0,a=t.length;n<a;){var r=t.charCodeAt(n++);if(r>=55296&&r<=56319&&n<a){var i=t.charCodeAt(n++);56320==(64512&i)?e.push(((1023&r)<<10)+(1023&i)+65536):(e.push(r),n--)}else e.push(r)}return e}(t);return 1===e.length?e[0].toString(16):null}function vt(t){return Object.keys(t).reduce((function(e,n){var a=t[n];return a.icon?e[a.iconName]=a.icon:e[n]=a,e}),{})}function bt(t,n){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=a.skipHooks,i=void 0!==r&&r,o=vt(n);"function"!=typeof lt.hooks.addPack||i?lt.styles[t]=e(e({},lt.styles[t]||{}),o):lt.hooks.addPack(t,vt(n)),"fas"===t&&bt("fa",n)}var ht=lt.styles,yt=lt.shims,Ct=Object.values(P),kt=null,xt={},wt={},Et={},Ot={},St={},It=Object.keys(j);function Bt(t,e){var n,a=e.split("-"),r=a[0],i=a.slice(1).join("-");return r!==t||""===i||(n=i,~H.indexOf(n))?null:i}var Nt,jt=function(){var t=function(t){return At(ht,(function(e,n,a){return e[a]=At(n,t,{}),e}),{})};xt=t((function(t,e,n){return e[3]&&(t[e[3]]=n),e[2]&&e[2].filter((function(t){return"number"==typeof t})).forEach((function(e){t[e.toString(16)]=n})),t})),wt=t((function(t,e,n){return t[n]=n,e[2]&&e[2].filter((function(t){return"string"==typeof t})).forEach((function(e){t[e]=n})),t})),St=t((function(t,e,n){var a=e[2];return t[n]=n,a.forEach((function(e){t[e]=n})),t}));var e="far"in ht||W.autoFetchSvg,n=At(yt,(function(t,n){var a=n[0],r=n[1],i=n[2];return"far"!==r||e||(r="fas"),"string"==typeof a&&(t.names[a]={prefix:r,iconName:i}),"number"==typeof a&&(t.unicodes[a.toString(16)]={prefix:r,iconName:i}),t}),{names:{},unicodes:{}});Et=n.names,Ot=n.unicodes,kt=Lt(W.styleDefault)};function Tt(t,e){return(xt[t]||{})[e]}function Pt(t,e){return(St[t]||{})[e]}function zt(t){return Et[t]||{prefix:null,iconName:null}}function Mt(){return kt}function Lt(t){var e=T[t]||T[j[t]],n=t in lt.styles?t:null;return e||n||null}function Dt(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.skipLookups,a=void 0!==n&&n,r=null,i=t.reduce((function(t,e){var n=Bt(W.familyPrefix,e);if(ht[e]?(e=Ct.includes(e)?z[e]:e,r=e,t.prefix=e):It.indexOf(e)>-1?(r=e,t.prefix=Lt(e)):n?t.iconName=n:e!==W.replacementClass&&t.rest.push(e),!a&&t.prefix&&t.iconName){var i="fa"===r?zt(t.iconName):{},o=Pt(t.prefix,t.iconName);i.prefix&&(r=null),t.iconName=i.iconName||o||t.iconName,t.prefix=i.prefix||t.prefix,"far"!==t.prefix||ht.far||!ht.fas||W.autoFetchSvg||(t.prefix="fas")}return t}),{prefix:null,iconName:null,rest:[]});return"fa"!==i.prefix&&"fa"!==r||(i.prefix=Mt()||"fas"),i}Nt=function(t){kt=Lt(t.styleDefault)},K.push(Nt),jt();var _t=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.definitions={}}var n,r;return n=t,r=[{key:"add",value:function(){for(var t=this,n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];var i=a.reduce(this._pullDefinitions,{});Object.keys(i).forEach((function(n){t.definitions[n]=e(e({},t.definitions[n]||{}),i[n]),bt(n,i[n]);var a=P[n];a&&bt(a,i[n]),jt()}))}},{key:"reset",value:function(){this.definitions={}}},{key:"_pullDefinitions",value:function(t,e){var n=e.prefix&&e.iconName&&e.icon?{0:e}:e;return Object.keys(n).map((function(e){var a=n[e],r=a.prefix,i=a.iconName,o=a.icon,c=o[2];t[r]||(t[r]={}),c.length>0&&c.forEach((function(e){"string"==typeof e&&(t[r][e]=o)})),t[r][i]=o})),t}}],r&&a(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}(),Yt=[],Rt={},$t={},qt=Object.keys($t);function Jt(t,e){for(var n=arguments.length,a=new Array(n>2?n-2:0),r=2;r<n;r++)a[r-2]=arguments[r];var i=Rt[t]||[];return i.forEach((function(t){e=t.apply(null,[e].concat(a))})),e}function Ft(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];var r=Rt[t]||[];r.forEach((function(t){t.apply(null,n)}))}function Ht(){var t=arguments[0],e=Array.prototype.slice.call(arguments,1);return $t[t]?$t[t].apply(null,e):void 0}function Gt(t){"fa"===t.prefix&&(t.prefix="fas");var e=t.iconName,n=t.prefix||Mt();if(e)return e=Pt(n,e)||e,pt(Ut.definitions,n,e)||pt(lt.styles,n,e)}var Ut=new _t,Wt={i2svg:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return C?(Ft("beforeI2svg",t),Ht("pseudoElements2svg",t),Ht("i2svg",t)):Promise.reject("Operation requires a DOM of some kind.")},watch:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.autoReplaceSvgRoot;!1===W.autoReplaceSvg&&(W.autoReplaceSvg=!0),W.observeMutations=!0,mt((function(){Qt({autoReplaceSvgRoot:e}),Ft("watch",t)}))}},Kt={noAuto:function(){W.autoReplaceSvg=!1,W.observeMutations=!1,Ft("noAuto")},config:W,dom:Wt,parse:{icon:function(t){if(null===t)return null;if("object"===n(t)&&t.prefix&&t.iconName)return{prefix:t.prefix,iconName:Pt(t.prefix,t.iconName)||t.iconName};if(Array.isArray(t)&&2===t.length){var e=0===t[1].indexOf("fa-")?t[1].slice(3):t[1],a=Lt(t[0]);return{prefix:a,iconName:Pt(a,e)||e}}if("string"==typeof t&&(t.indexOf("".concat(W.familyPrefix,"-"))>-1||t.match(M))){var r=Dt(t.split(" "),{skipLookups:!0});return{prefix:r.prefix||Mt(),iconName:Pt(r.prefix,r.iconName)||r.iconName}}if("string"==typeof t){var i=Mt();return{prefix:i,iconName:Pt(i,t)||t}}}},library:Ut,findIconDefinition:Gt,toHtml:dt},Qt=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.autoReplaceSvgRoot,n=void 0===e?v:e;(Object.keys(lt.styles).length>0||W.autoFetchSvg)&&C&&W.autoReplaceSvg&&Kt.dom.i2svg({node:n})};function Zt(t,e){return Object.defineProperty(t,"abstract",{get:e}),Object.defineProperty(t,"html",{get:function(){return t.abstract.map((function(t){return dt(t)}))}}),Object.defineProperty(t,"node",{get:function(){if(C){var e=v.createElement("div");return e.innerHTML=t.html,e.children}}}),t}function Vt(t){var n=t.icons,a=n.main,r=n.mask,i=t.prefix,o=t.iconName,c=t.transform,s=t.symbol,l=t.title,f=t.maskId,u=t.titleId,m=t.extra,d=t.watchable,p=void 0!==d&&d,A=r.found?r:a,g=A.width,v=A.height,b="fak"===i,h=[W.replacementClass,o?"".concat(W.familyPrefix,"-").concat(o):""].filter((function(t){return-1===m.classes.indexOf(t)})).filter((function(t){return""!==t||!!t})).concat(m.classes).join(" "),y={children:[],attributes:e(e({},m.attributes),{},{"data-prefix":i,"data-icon":o,class:h,role:m.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(g," ").concat(v)})},C=b&&!~m.classes.indexOf("fa-fw")?{width:"".concat(g/v*16*.0625,"em")}:{};p&&(y.attributes[w]=""),l&&(y.children.push({tag:"title",attributes:{id:y.attributes["aria-labelledby"]||"title-".concat(u||V())},children:[l]}),delete y.attributes.title);var k=e(e({},y),{},{prefix:i,iconName:o,main:a,mask:r,maskId:f,transform:c,symbol:s,styles:e(e({},C),m.styles)}),x=r.found&&a.found?Ht("generateAbstractMask",k)||{children:[],attributes:{}}:Ht("generateAbstractIcon",k)||{children:[],attributes:{}},E=x.children,O=x.attributes;return k.children=E,k.attributes=O,s?function(t){var n=t.prefix,a=t.iconName,r=t.children,i=t.attributes,o=t.symbol,c=!0===o?"".concat(n,"-").concat(W.familyPrefix,"-").concat(a):o;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:e(e({},i),{},{id:c}),children:r}]}]}(k):function(t){var n=t.children,a=t.main,r=t.mask,i=t.attributes,o=t.styles,c=t.transform;if(at(c)&&a.found&&!r.found){var s={x:a.width/a.height/2,y:.5};i.style=nt(e(e({},o),{},{"transform-origin":"".concat(s.x+c.x/16,"em ").concat(s.y+c.y/16,"em")}))}return[{tag:"svg",attributes:i,children:n}]}(k)}function Xt(t){var n=t.content,a=t.width,r=t.height,i=t.transform,o=t.title,c=t.extra,s=t.watchable,l=void 0!==s&&s,f=e(e(e({},c.attributes),o?{title:o}:{}),{},{class:c.classes.join(" ")});l&&(f[w]="");var u=e({},c.styles);at(i)&&(u.transform=function(t){var e=t.transform,n=t.width,a=void 0===n?16:n,r=t.height,i=void 0===r?16:r,o=t.startCentered,c=void 0!==o&&o,s="";return s+=c&&k?"translate(".concat(e.x/Q-a/2,"em, ").concat(e.y/Q-i/2,"em) "):c?"translate(calc(-50% + ".concat(e.x/Q,"em), calc(-50% + ").concat(e.y/Q,"em)) "):"translate(".concat(e.x/Q,"em, ").concat(e.y/Q,"em) "),(s+="scale(".concat(e.size/Q*(e.flipX?-1:1),", ").concat(e.size/Q*(e.flipY?-1:1),") "))+"rotate(".concat(e.rotate,"deg) ")}({transform:i,startCentered:!0,width:a,height:r}),u["-webkit-transform"]=u.transform);var m=nt(u);m.length>0&&(f.style=m);var d=[];return d.push({tag:"span",attributes:f,children:[n]}),o&&d.push({tag:"span",attributes:{class:"sr-only"},children:[o]}),d}function te(t){var n=t.content,a=t.title,r=t.extra,i=e(e(e({},r.attributes),a?{title:a}:{}),{},{class:r.classes.join(" ")}),o=nt(r.styles);o.length>0&&(i.style=o);var c=[];return c.push({tag:"span",attributes:i,children:[n]}),a&&c.push({tag:"span",attributes:{class:"sr-only"},children:[a]}),c}var ee=lt.styles;function ne(t){var e=t[0],n=t[1],a=i(t.slice(4),1)[0];return{found:!0,width:e,height:n,icon:Array.isArray(a)?{tag:"g",attributes:{class:"".concat(W.familyPrefix,"-").concat(q)},children:[{tag:"path",attributes:{class:"".concat(W.familyPrefix,"-").concat(F),fill:"currentColor",d:a[0]}},{tag:"path",attributes:{class:"".concat(W.familyPrefix,"-").concat(J),fill:"currentColor",d:a[1]}}]}:{tag:"path",attributes:{fill:"currentColor",d:a}}}}var ae={found:!1,width:512,height:512};function re(t,n){var a=n;return"fa"===n&&null!==W.styleDefault&&(n=Mt()),new Promise((function(r,i){if(Ht("missingIconAbstract"),"fa"===a){var o=zt(t)||{};t=o.iconName||t,n=o.prefix||n}if(t&&n&&ee[n]&&ee[n][t])return r(ne(ee[n][t]));!function(t,e){N||W.showMissingIcons||!t||console.error('Icon with name "'.concat(t,'" and prefix "').concat(e,'" is missing.'))}(t,n),r(e(e({},ae),{},{icon:W.showMissingIcons&&t&&Ht("missingIconAbstract")||{}}))}))}var ie=function(){},oe=W.measurePerformance&&h&&h.mark&&h.measure?h:{mark:ie,measure:ie},ce='FA "6.1.0"',se=function(t){return oe.mark("".concat(ce," ").concat(t," begins")),function(){return function(t){oe.mark("".concat(ce," ").concat(t," ends")),oe.measure("".concat(ce," ").concat(t),"".concat(ce," ").concat(t," begins"),"".concat(ce," ").concat(t," ends"))}(t)}},le=function(){};function fe(t){return"string"==typeof(t.getAttribute?t.getAttribute(w):null)}function ue(t){return v.createElementNS("http://www.w3.org/2000/svg",t)}function me(t){return v.createElement(t)}function de(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.ceFn,a=void 0===n?"svg"===t.tag?ue:me:n;if("string"==typeof t)return v.createTextNode(t);var r=a(t.tag);Object.keys(t.attributes||[]).forEach((function(e){r.setAttribute(e,t.attributes[e])}));var i=t.children||[];return i.forEach((function(t){r.appendChild(de(t,{ceFn:a}))})),r}var pe={replace:function(t){var e=t[0];if(e.parentNode)if(t[1].forEach((function(t){e.parentNode.insertBefore(de(t),e)})),null===e.getAttribute(w)&&W.keepOriginalSource){var n=v.createComment(function(t){var e=" ".concat(t.outerHTML," ");return"".concat(e,"Font Awesome fontawesome.com ")}(e));e.parentNode.replaceChild(n,e)}else e.remove()},nest:function(t){var e=t[0],n=t[1];if(~tt(e).indexOf(W.replacementClass))return pe.replace(t);var a=new RegExp("".concat(W.familyPrefix,"-.*"));if(delete n[0].attributes.id,n[0].attributes.class){var r=n[0].attributes.class.split(" ").reduce((function(t,e){return e===W.replacementClass||e.match(a)?t.toSvg.push(e):t.toNode.push(e),t}),{toNode:[],toSvg:[]});n[0].attributes.class=r.toSvg.join(" "),0===r.toNode.length?e.removeAttribute("class"):e.setAttribute("class",r.toNode.join(" "))}var i=n.map((function(t){return dt(t)})).join("\n");e.setAttribute(w,""),e.innerHTML=i}};function Ae(t){t()}function ge(t,e){var n="function"==typeof e?e:le;if(0===t.length)n();else{var a=Ae;"async"===W.mutateApproach&&(a=g.requestAnimationFrame||Ae),a((function(){var e=!0===W.autoReplaceSvg?pe.replace:pe[W.autoReplaceSvg]||pe.replace,a=se("mutate");t.map(e),a(),n()}))}}var ve=!1;function be(){ve=!0}function he(){ve=!1}var ye=null;function Ce(t){if(b&&W.observeMutations){var e=t.treeCallback,n=void 0===e?le:e,a=t.nodeCallback,r=void 0===a?le:a,i=t.pseudoElementsCallback,o=void 0===i?le:i,c=t.observeMutationsRoot,s=void 0===c?v:c;ye=new b((function(t){if(!ve){var e=Mt();X(t).forEach((function(t){if("childList"===t.type&&t.addedNodes.length>0&&!fe(t.addedNodes[0])&&(W.searchPseudoElements&&o(t.target),n(t.target)),"attributes"===t.type&&t.target.parentNode&&W.searchPseudoElements&&o(t.target.parentNode),"attributes"===t.type&&fe(t.target)&&~$.indexOf(t.attributeName))if("class"===t.attributeName&&function(t){var e=t.getAttribute?t.getAttribute(O):null,n=t.getAttribute?t.getAttribute(S):null;return e&&n}(t.target)){var a=Dt(tt(t.target)),i=a.prefix,c=a.iconName;t.target.setAttribute(O,i||e),c&&t.target.setAttribute(S,c)}else(s=t.target)&&s.classList&&s.classList.contains&&s.classList.contains(W.replacementClass)&&r(t.target);var s}))}})),C&&ye.observe(s,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}}function ke(t){var e=t.getAttribute("style"),n=[];return e&&(n=e.split(";").reduce((function(t,e){var n=e.split(":"),a=n[0],r=n.slice(1);return a&&r.length>0&&(t[a]=r.join(":").trim()),t}),{})),n}function xe(t){var e,n,a=t.getAttribute("data-prefix"),r=t.getAttribute("data-icon"),i=void 0!==t.innerText?t.innerText.trim():"",o=Dt(tt(t));return o.prefix||(o.prefix=Mt()),a&&r&&(o.prefix=a,o.iconName=r),o.iconName&&o.prefix||o.prefix&&i.length>0&&(o.iconName=(e=o.prefix,n=t.innerText,(wt[e]||{})[n]||Tt(o.prefix,gt(t.innerText)))),o}function we(t){var e=X(t.attributes).reduce((function(t,e){return"class"!==t.name&&"style"!==t.name&&(t[e.name]=e.value),t}),{}),n=t.getAttribute("title"),a=t.getAttribute("data-fa-title-id");return W.autoA11y&&(n?e["aria-labelledby"]="".concat(W.replacementClass,"-title-").concat(a||V()):(e["aria-hidden"]="true",e.focusable="false")),e}function Ee(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{styleParser:!0},a=xe(t),r=a.iconName,i=a.prefix,o=a.rest,c=we(t),s=Jt("parseNodeAttributes",{},t),l=n.styleParser?ke(t):[];return e({iconName:r,title:t.getAttribute("title"),titleId:t.getAttribute("data-fa-title-id"),prefix:i,transform:Z,mask:{iconName:null,prefix:null,rest:[]},maskId:null,symbol:!1,extra:{classes:o,styles:l,attributes:c}},s)}var Oe=lt.styles;function Se(t){var e="nest"===W.autoReplaceSvg?Ee(t,{styleParser:!1}):Ee(t);return~e.extra.classes.indexOf(L)?Ht("generateLayersText",t,e):Ht("generateSvgReplacementMutation",t,e)}function Ie(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!C)return Promise.resolve();var n=v.documentElement.classList,a=function(t){return n.add("".concat(I,"-").concat(t))},r=function(t){return n.remove("".concat(I,"-").concat(t))},i=W.autoFetchSvg?Object.keys(j):Object.keys(Oe),o=[".".concat(L,":not([").concat(w,"])")].concat(i.map((function(t){return".".concat(t,":not([").concat(w,"])")}))).join(", ");if(0===o.length)return Promise.resolve();var c=[];try{c=X(t.querySelectorAll(o))}catch(t){}if(!(c.length>0))return Promise.resolve();a("pending"),r("complete");var s=se("onTree"),l=c.reduce((function(t,e){try{var n=Se(e);n&&t.push(n)}catch(t){N||"MissingIcon"===t.name&&console.error(t)}return t}),[]);return new Promise((function(t,n){Promise.all(l).then((function(n){ge(n,(function(){a("active"),a("complete"),r("pending"),"function"==typeof e&&e(),s(),t()}))})).catch((function(t){s(),n(t)}))}))}function Be(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;Se(t).then((function(t){t&&ge([t],e)}))}var Ne=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=n.transform,r=void 0===a?Z:a,i=n.symbol,o=void 0!==i&&i,c=n.mask,s=void 0===c?null:c,l=n.maskId,f=void 0===l?null:l,u=n.title,m=void 0===u?null:u,d=n.titleId,p=void 0===d?null:d,A=n.classes,g=void 0===A?[]:A,v=n.attributes,b=void 0===v?{}:v,h=n.styles,y=void 0===h?{}:h;if(t){var C=t.prefix,k=t.iconName,x=t.icon;return Zt(e({type:"icon"},t),(function(){return Ft("beforeDOMElementCreation",{iconDefinition:t,params:n}),W.autoA11y&&(m?b["aria-labelledby"]="".concat(W.replacementClass,"-title-").concat(p||V()):(b["aria-hidden"]="true",b.focusable="false")),Vt({icons:{main:ne(x),mask:s?ne(s.icon):{found:!1,width:null,height:null,icon:{}}},prefix:C,iconName:k,transform:e(e({},Z),r),symbol:o,title:m,maskId:f,titleId:p,extra:{attributes:b,styles:y,classes:g}})}))}},je={mixout:function(){return{icon:(t=Ne,function(n){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=(n||{}).icon?n:Gt(n||{}),i=a.mask;return i&&(i=(i||{}).icon?i:Gt(i||{})),t(r,e(e({},a),{},{mask:i}))})};var t},hooks:function(){return{mutationObserverCallbacks:function(t){return t.treeCallback=Ie,t.nodeCallback=Be,t}}},provides:function(t){t.i2svg=function(t){var e=t.node,n=void 0===e?v:e,a=t.callback;return Ie(n,void 0===a?function(){}:a)},t.generateSvgReplacementMutation=function(t,e){var n=e.iconName,a=e.title,r=e.titleId,o=e.prefix,c=e.transform,s=e.symbol,l=e.mask,f=e.maskId,u=e.extra;return new Promise((function(e,m){Promise.all([re(n,o),l.iconName?re(l.iconName,l.prefix):Promise.resolve({found:!1,width:512,height:512,icon:{}})]).then((function(l){var m=i(l,2),d=m[0],p=m[1];e([t,Vt({icons:{main:d,mask:p},prefix:o,iconName:n,transform:c,symbol:s,maskId:f,title:a,titleId:r,extra:u,watchable:!0})])})).catch(m)}))},t.generateAbstractIcon=function(t){var e,n=t.children,a=t.attributes,r=t.main,i=t.transform,o=nt(t.styles);return o.length>0&&(a.style=o),at(i)&&(e=Ht("generateAbstractTransformGrouping",{main:r,transform:i,containerWidth:r.width,iconWidth:r.width})),n.push(e||r.icon),{children:n,attributes:a}}}},Te={mixout:function(){return{layer:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.classes,a=void 0===n?[]:n;return Zt({type:"layer"},(function(){Ft("beforeDOMElementCreation",{assembler:t,params:e});var n=[];return t((function(t){Array.isArray(t)?t.map((function(t){n=n.concat(t.abstract)})):n=n.concat(t.abstract)})),[{tag:"span",attributes:{class:["".concat(W.familyPrefix,"-layers")].concat(o(a)).join(" ")},children:n}]}))}}}},Pe={mixout:function(){return{counter:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.title,a=void 0===n?null:n,r=e.classes,i=void 0===r?[]:r,c=e.attributes,s=void 0===c?{}:c,l=e.styles,f=void 0===l?{}:l;return Zt({type:"counter",content:t},(function(){return Ft("beforeDOMElementCreation",{content:t,params:e}),te({content:t.toString(),title:a,extra:{attributes:s,styles:f,classes:["".concat(W.familyPrefix,"-layers-counter")].concat(o(i))}})}))}}}},ze={mixout:function(){return{text:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=n.transform,r=void 0===a?Z:a,i=n.title,c=void 0===i?null:i,s=n.classes,l=void 0===s?[]:s,f=n.attributes,u=void 0===f?{}:f,m=n.styles,d=void 0===m?{}:m;return Zt({type:"text",content:t},(function(){return Ft("beforeDOMElementCreation",{content:t,params:n}),Xt({content:t,transform:e(e({},Z),r),title:c,extra:{attributes:u,styles:d,classes:["".concat(W.familyPrefix,"-layers-text")].concat(o(l))}})}))}}},provides:function(t){t.generateLayersText=function(t,e){var n=e.title,a=e.transform,r=e.extra,i=null,o=null;if(k){var c=parseInt(getComputedStyle(t).fontSize,10),s=t.getBoundingClientRect();i=s.width/c,o=s.height/c}return W.autoA11y&&!n&&(r.attributes["aria-hidden"]="true"),Promise.resolve([t,Xt({content:t.innerHTML,width:i,height:o,transform:a,title:n,extra:r,watchable:!0})])}}},Me=new RegExp('"',"ug"),Le=[1105920,1112319];function De(t,n){var a="".concat("data-fa-pseudo-element-pending").concat(n.replace(":","-"));return new Promise((function(r,i){if(null!==t.getAttribute(a))return r();var o,c,s,l=X(t.children).filter((function(t){return t.getAttribute(E)===n}))[0],f=g.getComputedStyle(t,n),u=f.getPropertyValue("font-family").match(D),m=f.getPropertyValue("font-weight"),d=f.getPropertyValue("content");if(l&&!u)return t.removeChild(l),r();if(u&&"none"!==d&&""!==d){var p=f.getPropertyValue("content"),A=~["Solid","Regular","Light","Thin","Duotone","Brands","Kit"].indexOf(u[2])?T[u[2].toLowerCase()]:_[m],b=function(t){var e,n,a,r,i=t.replace(Me,""),o=(0,a=(e=i).length,(r=e.charCodeAt(0))>=55296&&r<=56319&&a>1&&(n=e.charCodeAt(1))>=56320&&n<=57343?1024*(r-55296)+n-56320+65536:r),c=o>=Le[0]&&o<=Le[1],s=2===i.length&&i[0]===i[1];return{value:gt(s?i[0]:i),isSecondary:c||s}}(p),h=b.value,y=b.isSecondary,C=u[0].startsWith("FontAwesome"),k=Tt(A,h),x=k;if(C){var w=(c=Ot[o=h],s=Tt("fas",o),c||(s?{prefix:"fas",iconName:s}:null)||{prefix:null,iconName:null});w.iconName&&w.prefix&&(k=w.iconName,A=w.prefix)}if(!k||y||l&&l.getAttribute(O)===A&&l.getAttribute(S)===x)r();else{t.setAttribute(a,x),l&&t.removeChild(l);var I={iconName:null,title:null,titleId:null,prefix:null,transform:Z,symbol:!1,mask:{iconName:null,prefix:null,rest:[]},maskId:null,extra:{classes:[],styles:{},attributes:{}}},B=I.extra;B.attributes[E]=n,re(k,A).then((function(i){var o=Vt(e(e({},I),{},{icons:{main:i,mask:{prefix:null,iconName:null,rest:[]}},prefix:A,iconName:x,extra:B,watchable:!0})),c=v.createElement("svg");"::before"===n?t.insertBefore(c,t.firstChild):t.appendChild(c),c.outerHTML=o.map((function(t){return dt(t)})).join("\n"),t.removeAttribute(a),r()})).catch(i)}}else r()}))}function _e(t){return Promise.all([De(t,"::before"),De(t,"::after")])}function Ye(t){return!(t.parentNode===document.head||~B.indexOf(t.tagName.toUpperCase())||t.getAttribute(E)||t.parentNode&&"svg"===t.parentNode.tagName)}function Re(t){if(C)return new Promise((function(e,n){var a=X(t.querySelectorAll("*")).filter(Ye).map(_e),r=se("searchPseudoElements");be(),Promise.all(a).then((function(){r(),he(),e()})).catch((function(){r(),he(),n()}))}))}var $e=!1,qe=function(t){return t.toLowerCase().split(" ").reduce((function(t,e){var n=e.toLowerCase().split("-"),a=n[0],r=n.slice(1).join("-");if(a&&"h"===r)return t.flipX=!0,t;if(a&&"v"===r)return t.flipY=!0,t;if(r=parseFloat(r),isNaN(r))return t;switch(a){case"grow":t.size=t.size+r;break;case"shrink":t.size=t.size-r;break;case"left":t.x=t.x-r;break;case"right":t.x=t.x+r;break;case"up":t.y=t.y-r;break;case"down":t.y=t.y+r;break;case"rotate":t.rotate=t.rotate+r}return t}),{size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0})},Je={mixout:function(){return{parse:{transform:function(t){return qe(t)}}}},hooks:function(){return{parseNodeAttributes:function(t,e){var n=e.getAttribute("data-fa-transform");return n&&(t.transform=qe(n)),t}}},provides:function(t){t.generateAbstractTransformGrouping=function(t){var n=t.main,a=t.transform,r=t.containerWidth,i=t.iconWidth,o={transform:"translate(".concat(r/2," 256)")},c="translate(".concat(32*a.x,", ").concat(32*a.y,") "),s="scale(".concat(a.size/16*(a.flipX?-1:1),", ").concat(a.size/16*(a.flipY?-1:1),") "),l="rotate(".concat(a.rotate," 0 0)"),f={outer:o,inner:{transform:"".concat(c," ").concat(s," ").concat(l)},path:{transform:"translate(".concat(i/2*-1," -256)")}};return{tag:"g",attributes:e({},f.outer),children:[{tag:"g",attributes:e({},f.inner),children:[{tag:n.icon.tag,children:n.icon.children,attributes:e(e({},n.icon.attributes),f.path)}]}]}}}},Fe={x:0,y:0,width:"100%",height:"100%"};function He(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return t.attributes&&(t.attributes.fill||e)&&(t.attributes.fill="black"),t}var Ge,Ue={hooks:function(){return{parseNodeAttributes:function(t,e){var n=e.getAttribute("data-fa-mask"),a=n?Dt(n.split(" ").map((function(t){return t.trim()}))):{prefix:null,iconName:null,rest:[]};return a.prefix||(a.prefix=Mt()),t.mask=a,t.maskId=e.getAttribute("data-fa-mask-id"),t}}},provides:function(t){t.generateAbstractMask=function(t){var n,a=t.children,r=t.attributes,i=t.main,o=t.mask,c=t.maskId,s=t.transform,l=i.width,f=i.icon,u=o.width,m=o.icon,d=function(t){var e=t.transform,n=t.iconWidth,a={transform:"translate(".concat(t.containerWidth/2," 256)")},r="translate(".concat(32*e.x,", ").concat(32*e.y,") "),i="scale(".concat(e.size/16*(e.flipX?-1:1),", ").concat(e.size/16*(e.flipY?-1:1),") "),o="rotate(".concat(e.rotate," 0 0)");return{outer:a,inner:{transform:"".concat(r," ").concat(i," ").concat(o)},path:{transform:"translate(".concat(n/2*-1," -256)")}}}({transform:s,containerWidth:u,iconWidth:l}),p={tag:"rect",attributes:e(e({},Fe),{},{fill:"white"})},A=f.children?{children:f.children.map(He)}:{},g={tag:"g",attributes:e({},d.inner),children:[He(e({tag:f.tag,attributes:e(e({},f.attributes),d.path)},A))]},v={tag:"g",attributes:e({},d.outer),children:[g]},b="mask-".concat(c||V()),h="clip-".concat(c||V()),y={tag:"mask",attributes:e(e({},Fe),{},{id:b,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"}),children:[p,v]},C={tag:"defs",children:[{tag:"clipPath",attributes:{id:h},children:(n=m,"g"===n.tag?n.children:[n])},y]};return a.push(C,{tag:"rect",attributes:e({fill:"currentColor","clip-path":"url(#".concat(h,")"),mask:"url(#".concat(b,")")},Fe)}),{children:a,attributes:r}}}},We={provides:function(t){var n=!1;g.matchMedia&&(n=g.matchMedia("(prefers-reduced-motion: reduce)").matches),t.missingIconAbstract=function(){var t=[],a={fill:"currentColor"},r={attributeType:"XML",repeatCount:"indefinite",dur:"2s"};t.push({tag:"path",attributes:e(e({},a),{},{d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"})});var i=e(e({},r),{},{attributeName:"opacity"}),o={tag:"circle",attributes:e(e({},a),{},{cx:"256",cy:"364",r:"28"}),children:[]};return n||o.children.push({tag:"animate",attributes:e(e({},r),{},{attributeName:"r",values:"28;14;28;28;14;28;"})},{tag:"animate",attributes:e(e({},i),{},{values:"1;0;1;1;0;1;"})}),t.push(o),t.push({tag:"path",attributes:e(e({},a),{},{opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"}),children:n?[]:[{tag:"animate",attributes:e(e({},i),{},{values:"1;0;0;0;0;1;"})}]}),n||t.push({tag:"path",attributes:e(e({},a),{},{opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"}),children:[{tag:"animate",attributes:e(e({},i),{},{values:"0;0;1;1;0;0;"})}]}),{tag:"g",attributes:{class:"missing"},children:t}}}};Ge={mixoutsTo:Kt}.mixoutsTo,Yt=[ct,je,Te,Pe,ze,{hooks:function(){return{mutationObserverCallbacks:function(t){return t.pseudoElementsCallback=Re,t}}},provides:function(t){t.pseudoElements2svg=function(t){var e=t.node,n=void 0===e?v:e;W.searchPseudoElements&&Re(n)}}},{mixout:function(){return{dom:{unwatch:function(){be(),$e=!0}}}},hooks:function(){return{bootstrap:function(){Ce(Jt("mutationObserverCallbacks",{}))},noAuto:function(){ye&&ye.disconnect()},watch:function(t){var e=t.observeMutationsRoot;$e?he():Ce(Jt("mutationObserverCallbacks",{observeMutationsRoot:e}))}}}},Je,Ue,We,{hooks:function(){return{parseNodeAttributes:function(t,e){var n=e.getAttribute("data-fa-symbol"),a=null!==n&&(""===n||n);return t.symbol=a,t}}}}],Rt={},Object.keys($t).forEach((function(t){-1===qt.indexOf(t)&&delete $t[t]})),Yt.forEach((function(t){var e=t.mixout?t.mixout():{};if(Object.keys(e).forEach((function(t){"function"==typeof e[t]&&(Ge[t]=e[t]),"object"===n(e[t])&&Object.keys(e[t]).forEach((function(n){Ge[t]||(Ge[t]={}),Ge[t][n]=e[t][n]}))})),t.hooks){var a=t.hooks();Object.keys(a).forEach((function(t){Rt[t]||(Rt[t]=[]),Rt[t].push(a[t])}))}t.provides&&t.provides($t)})),function(t){try{for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];t.apply(void 0,n)}catch(t){if(!N)throw t}}((function(t){y&&(g.FontAwesome||(g.FontAwesome=Kt),mt((function(){Qt(),Ft("bootstrap")}))),lt.hooks=e(e({},lt.hooks),{},{addPack:function(t,n){lt.styles[t]=e(e({},lt.styles[t]||{}),n),jt(),Qt()},addPacks:function(t){t.forEach((function(t){var n=i(t,2),a=n[0],r=n[1];lt.styles[a]=e(e({},lt.styles[a]||{}),r)})),jt(),Qt()},addShims:function(t){var e;(e=lt.shims).push.apply(e,o(t)),jt(),Qt()}})}))}()},151:(t,e,n)=>{"use strict";n.d(e,{Z:()=>c});var a=n(537),r=n.n(a),i=n(645),o=n.n(i)()(r());o.push([t.id,"@import url(https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,700;0,900;1,400&display=swap);"]),o.push([t.id,'*{margin:0;padding:0;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}body{font-family:"Poppins",sans-serif}.container{min-height:100vh;display:grid;grid-template-columns:1fr 4fr;grid-template-rows:.5fr 4fr;grid-template-areas:"nav header" "nav content"}.container header{grid-area:header}.container header h1{text-align:center}.container .navigation{font-size:2rem;height:100%;background-color:#3f3e49;color:#fff;grid-area:nav;padding:1.5rem;align-self:center;display:flex;flex-direction:column;gap:25px}.container .navigation button{border-radius:5px;border:1px solid transparent;cursor:pointer;text-transform:capitalize}.container .navigation button:hover{border:1px solid #000;font-weight:bold}.container .navigation .warning-btn{background-color:#c30;color:#fff;font-weight:bold;justify-self:flex-end;text-transform:uppercase}.container .navigation .warning-btn:hover{background-color:#e95827}.container .content{grid-area:content;display:grid;justify-items:center;gap:2rem;grid-template-rows:max-content 1fr}.container .content h2{font-size:2rem;text-transform:capitalize}.container .content>div{width:90%}.container ul{display:flex;flex-direction:column;gap:10px}.container li{list-style-type:none;cursor:pointer;position:relative;margin-left:1rem}.container li:hover::after{position:absolute;content:"";font-weight:bold;left:0%;top:100%;height:3px;width:100%;background-color:#fff}.container .active{font-weight:bold}.container .active::after{position:absolute;content:"";font-weight:bold;left:0%;top:100%;height:3px;width:100%;background-color:#fff}.add-item,#project-popup{position:absolute;top:1rem;left:1rem;right:1rem;bottom:1rem;background-color:#fff;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);padding:2rem;overflow-y:auto}.add-item form,#project-popup form{margin:1rem 0;display:grid;gap:20px}.add-item form label,#project-popup form label{display:grid}.add-item button,#project-popup button{margin:1rem 1rem 1rem 0}.add-item .closeBtn,.add-item .completeBtn,#project-popup .closeBtn,#project-popup .completeBtn{font-size:2rem;cursor:pointer}.add-item .completeBtn,#project-popup .completeBtn{color:#9ac84b}.add-item .completeBtn:hover,#project-popup .completeBtn:hover{color:#699222}.add-item .closeBtn,#project-popup .closeBtn{color:#c30}.add-item .closeBtn:hover,#project-popup .closeBtn:hover{color:#e95827}.new-item-btn i{font-size:2rem;color:#29db70;cursor:pointer}.new-item-btn i:hover{color:#179c4c}.navigation>.new-item-btn{align-self:flex-end}.item-container{display:grid;grid-template-columns:1fr 3fr .1fr .1fr .1fr;gap:10px;padding:1rem;margin-bottom:1rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);position:relative;overflow:hidden}.item-container h3{font-size:1.5rem}.item-container .color-bar{position:absolute;height:100%;left:0%;width:10px;background-color:green}.item-container .complete-btn{color:#9ac84b;font-size:1.5rem;cursor:pointer}.item-container .complete-btn:hover{color:#699222}.item-container .view-btn{color:#4b64c8;font-size:1.5rem;cursor:pointer}.item-container .view-btn:hover{color:#20399b}.item-container .edit-btn{color:#c89a4b;font-size:1.5rem;cursor:pointer}.item-container .edit-btn:hover{color:#a57727}.completed-task{background-color:rgba(63,62,73,.25);text-decoration:line-through}.btn-group{justify-self:center;display:flex;gap:20px}.single-item-display{padding:2rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);width:80%;margin:1rem auto;position:fixed;left:1rem;top:1rem;right:1rem;background-color:#fff;display:grid;gap:20px}.single-item-display .closeBtn,.single-item-display .completeBtn,.single-item-display .deleteBtn{font-size:2rem;cursor:pointer}.single-item-display .completeBtn{color:#9ac84b}.single-item-display .completeBtn:hover{color:#699222}.single-item-display .deleteBtn{color:#c30}.single-item-display .deleteBtn:hover{color:#e95827}.single-item-display .closeBtn{color:#4b64c8}.single-item-display .closeBtn:hover{color:#20399b;animation:spin .2s}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.overlay{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(63,62,73,.5);backdrop-filter:blur(5px)}.popup{display:flex;flex-direction:column;justify-content:center;position:fixed;top:20%;bottom:20%;left:20%;right:20%;z-index:1000;background-color:#fff;padding:60px}.popup h2{text-align:center}.popup p{margin:10px 0}.popup button{padding:5px 10px;border-radius:5px;border:1px solid transparent;cursor:pointer;background-color:#c89a4b;font-weight:bold;color:#fff}.popup button:hover{background-color:#a57727}',"",{version:3,sources:["webpack://./src/sass/main.scss","webpack://./src/sass/variables.scss"],names:[],mappings:"AAGA,EACI,QAAA,CACA,SAAA,CACA,0BAAA,CACA,6BAAA,CACA,qBAAA,CAGJ,KACI,gCAAA,CAGJ,WAEI,gBAAA,CACA,YAAA,CACA,6BAAA,CACA,2BAAA,CACA,8CAAA,CAGA,kBACI,gBAAA,CACA,qBACI,iBAAA,CAIR,uBACI,cAAA,CACA,WAAA,CACA,wBClCQ,CDmCR,UClCQ,CDmCR,aAAA,CACA,cAAA,CACA,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,QAAA,CAGA,8BACI,iBAAA,CACA,4BAAA,CACA,cAAA,CACA,yBAAA,CAEA,oCACI,qBAAA,CACA,gBAAA,CAKR,oCACI,qBCxDE,CDyDF,UAAA,CACA,gBAAA,CACA,qBAAA,CACA,wBAAA,CAEA,0CACI,wBC9DA,CDqEZ,oBACI,iBAAA,CACA,YAAA,CACA,oBAAA,CACA,QAAA,CACA,kCAAA,CAEA,uBACI,cAAA,CACA,yBAAA,CAGJ,wBACI,SAAA,CAIR,cACI,YAAA,CACA,qBAAA,CACA,QAAA,CAGJ,cACI,oBAAA,CACA,cAAA,CACA,iBAAA,CACA,gBAAA,CAGI,2BACI,iBAAA,CACA,UAAA,CACA,gBAAA,CACA,OAAA,CACA,QAAA,CACA,UAAA,CACA,UAAA,CACA,qBC7GA,CDmHZ,mBACI,gBAAA,CACA,0BACI,iBAAA,CACA,UAAA,CACA,gBAAA,CACA,OAAA,CACA,QAAA,CACA,UAAA,CACA,UAAA,CACA,qBC7HI,CDsIhB,yBACI,iBAAA,CACA,QAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,qBC5IY,CD6IZ,uCAAA,CACA,YAAA,CACA,eAAA,CAGA,mCACI,aAAA,CACA,YAAA,CACA,QAAA,CACA,+CACI,YAAA,CAIR,uCACI,uBAAA,CAGJ,gGACI,cAAA,CACA,cAAA,CAGJ,mDACI,aC9JO,CDgKP,+DACI,aChKK,CDoKb,6CACI,UC5KM,CD8KN,yDACI,aC9KI,CDqLZ,gBACI,cAAA,CACA,aCtLE,CDuLF,cAAA,CAEA,sBACI,aCzLA,CD8LZ,0BACI,mBAAA,CAGJ,gBACI,YAAA,CACA,4CAAA,CACA,QAAA,CACA,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,uCAAA,CACA,iBAAA,CACA,eAAA,CAEA,mBACI,gBAAA,CAGJ,2BACI,iBAAA,CACA,WAAA,CACA,OAAA,CACA,UAAA,CACA,sBAAA,CAGJ,8BACI,aCvNO,CDwNP,gBAAA,CACA,cAAA,CACA,oCACI,aC1NK,CD6Nb,0BACI,aCjOG,CDkOH,gBAAA,CACA,cAAA,CACA,gCACI,aCpOC,CDuOT,0BACI,aCrOG,CDsOH,gBAAA,CACA,cAAA,CACA,gCACI,aCxOC,CD8Ob,gBACI,mCAAA,CACA,4BAAA,CAGJ,WACI,mBAAA,CACA,YAAA,CACA,QAAA,CAGJ,qBACI,YAAA,CACA,kBAAA,CACA,uCAAA,CACA,SAAA,CACA,gBAAA,CACA,cAAA,CACA,SAAA,CACA,QAAA,CACA,UAAA,CACA,qBC7QY,CD8QZ,YAAA,CACA,QAAA,CAKA,iGACI,cAAA,CACA,cAAA,CAGJ,kCACI,aCnRO,CDqRP,wCACI,aCrRK,CDyRb,gCACI,UCjSM,CDmSN,sCACI,aCnSI,CDsSZ,+BACI,aCpSG,CDsSH,qCACI,aCtSC,CDuSD,kBAAA,CAKZ,gBACI,GACI,sBAAA,CAEJ,KACI,wBAAA,CAAA,CAKR,SACI,cAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CACA,4BAAA,CACA,yBAAA,CAGJ,OACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,cAAA,CACA,OAAA,CACA,UAAA,CACA,QAAA,CACA,SAAA,CACA,YAAA,CACA,qBChVY,CDiVZ,YAAA,CAEA,UACI,iBAAA,CAGJ,SACI,aAAA,CAGJ,cACI,gBAAA,CACA,iBAAA,CACA,4BAAA,CACA,cAAA,CACA,wBCvVG,CDwVH,gBAAA,CACA,UClWQ,CDoWR,oBACI,wBC3VC",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,700;0,900;1,400&display=swap');\n@import './variables.scss'; \n\n* {\n    margin: 0; \n    padding: 0; \n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box; \n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Poppins', sans-serif;\n}\n\n.container {\n\n    min-height: 100vh; \n    display: grid; \n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 0.5fr 4fr;\n    grid-template-areas: \"nav header\"\n        \"nav content\"\n    ;\n    header {\n        grid-area: header;\n        h1 {\n            text-align: center;\n        }\n    }\n\n    .navigation {\n        font-size: 2rem;\n        height: 100%; \n        background-color:$primary-col-1; \n        color: $primary-col-2; \n        grid-area: nav;\n        padding: 1.5rem;\n        align-self: center;\n        display: flex; \n        flex-direction: column;\n        gap: 25px;\n\n\n        button {\n            border-radius: 5px; \n            border: 1px solid transparent; \n            cursor: pointer;\n            text-transform: capitalize;\n\n            &:hover {\n                border: 1px solid black;\n                font-weight: bold;\n            }\n        }\n\n\n        .warning-btn {\n            background-color: $warning-col;\n            color: white; \n            font-weight: bold;  \n            justify-self: flex-end;\n            text-transform: uppercase;\n\n            &:hover {\n                background-color: $warning-col-2;\n            }\n        }\n    }\n\n    \n\n    .content {\n        grid-area: content;\n        display: grid; \n        justify-items: center;\n        gap: 2rem;\n        grid-template-rows: max-content 1fr;\n\n        h2 {\n            font-size: 2rem;\n            text-transform: capitalize;\n        }\n\n        >div {\n            width: 90%;\n        }\n    }\n\n    ul {\n        display: flex; \n        flex-direction: column;\n        gap: 10px; \n    }\n\n    li {\n        list-style-type: none;\n        cursor: pointer;\n        position: relative;\n        margin-left: 1rem; \n\n        &:hover {\n            &::after {\n                position: absolute; \n                content: ''; \n                font-weight: bold;\n                left: 0%; \n                top: 100%;\n                height: 3px; \n                width: 100%;  \n                background-color: $primary-col-2;\n\n            }\n        }\n    }\n\n    .active {\n        font-weight: bold;\n        &::after {\n            position: absolute; \n            content: ''; \n            font-weight: bold;\n            left: 0%; \n            top: 100%;\n            height: 3px; \n            width: 100%;  \n            background-color: $primary-col-2;\n\n        }\n    }\n\n\n}\n\n\n.add-item, #project-popup  {\n    position: absolute; \n    top: 1rem; \n    left: 1rem; \n    right: 1rem; \n    bottom: 1rem; \n    background-color: $primary-col-2;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    padding: 2rem;\n    overflow-y: auto;\n\n\n    form {\n        margin: 1rem 0;\n        display: grid; \n        gap: 20px; \n        label {\n            display: grid; \n        }\n    }\n\n    button {\n        margin: 1rem 1rem 1rem 0;\n    }\n\n    .closeBtn, .completeBtn {\n        font-size: 2rem;\n        cursor: pointer;\n    }\n    \n    .completeBtn {\n        color:$complete-col; \n\n        &:hover {\n            color: $complete-col-2\n        }\n    }\n\n    .closeBtn {\n        color: $warning-col; \n\n        &:hover {\n            color: $warning-col-2\n        }\n    }\n\n}\n\n.new-item-btn { \n    i {\n        font-size: 2rem;\n        color: $add-col;\n        cursor: pointer;\n\n        &:hover {\n            color: $add-col-2; \n        }\n    }\n}\n\n.navigation > .new-item-btn {\n    align-self: flex-end;\n}\n\n.item-container {\n    display: grid; \n    grid-template-columns: 1fr 3fr 0.1fr 0.1fr 0.1fr;\n    gap: 10px;\n    padding: 1rem; \n    margin-bottom: 1rem; \n    border-radius: 10px;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    position: relative;\n    overflow: hidden;\n\n    h3 {\n        font-size: 1.5rem;\n    }\n\n    .color-bar {\n        position: absolute; \n        height: 100%; \n        left: 0%; \n        width: 10px; \n        background-color: green;\n    }\n\n    .complete-btn {\n        color: $complete-col; \n        font-size: 1.5rem; \n        cursor: pointer;\n        &:hover {\n            color: $complete-col-2; \n        }\n    }\n    .view-btn {\n        color: $view-col; \n        font-size: 1.5rem; \n        cursor: pointer;\n        &:hover {\n            color: $view-col-2; \n        }\n    }\n    .edit-btn {\n        color: $edit-col; \n        font-size: 1.5rem; \n        cursor: pointer;\n        &:hover {\n            color: $edit-col-2; \n        }\n    }\n}\n\n\n.completed-task {\n    background-color: rgba($primary-col-1,0.25);\n    text-decoration: line-through;\n}\n\n.btn-group {\n    justify-self: center;\n    display: flex; \n    gap: 20px; \n}\n\n.single-item-display {\n    padding: 2rem; \n    border-radius: 10px; \n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    width: 80%; \n    margin: 1rem auto;\n    position: fixed; \n    left: 1rem;\n    top: 1rem;\n    right: 1rem;\n    background-color: $primary-col-2;\n    display: grid;\n    gap:20px; \n\n   \n    \n\n    .closeBtn, .completeBtn, .deleteBtn {\n        font-size: 2rem;\n        cursor: pointer;\n    }\n    \n    .completeBtn {\n        color:$complete-col; \n\n        &:hover {\n            color: $complete-col-2\n        }\n    }\n\n    .deleteBtn {\n        color: $warning-col; \n\n        &:hover {\n            color: $warning-col-2\n        }\n    }\n    .closeBtn {\n        color: $view-col; \n\n        &:hover {\n            color: $view-col-2;\n            animation: spin 0.2s;\n        }\n    }\n}\n\n@keyframes spin {\n    0% {\n        transform: rotate(0deg);\n    }\n    100%{\n        transform: rotate(360deg);\n    }\n    \n}\n\n.overlay {\n    position: fixed; \n    top: 0; \n    left: 0; \n    right: 0; \n    bottom: 0; \n    background: rgba($primary-col-1, 0.5);\n    backdrop-filter: blur(5px);\n}\n\n.popup {\n    display: flex; \n    flex-direction: column;\n    justify-content: center;\n    position: fixed; \n    top: 20%; \n    bottom: 20%; \n    left: 20%; \n    right: 20%; \n    z-index: 1000; \n    background-color: $primary-col-2; \n    padding: 60px; \n\n    h2 {\n        text-align: center;\n    }\n\n    p {\n        margin: 10px 0; \n    }\n\n    button {\n        padding: 5px 10px; \n        border-radius: 5px; \n        border: 1px solid transparent; \n        cursor: pointer;\n        background-color: $edit-col; \n        font-weight: bold; \n        color: $primary-col-2; \n\n        &:hover {\n            background-color: $edit-col-2;\n        }\n    }\n}","$primary-col-1: rgb(63, 62, 73); \n$primary-col-2: rgb(255,255,255); \n$warning-col: rgb(204, 51, 0); \n$warning-col-2: rgb(233, 88, 39); \n$add-col: rgb(41, 219, 112); \n$add-col-2: rgb(23, 156, 76); \n$view-col: rgb(75, 100, 200); \n$view-col-2: rgb(32, 57, 155); \n$complete-col: rgb(154, 200, 75); \n$complete-col-2: rgb(105, 146, 34);  \n$edit-col: rgb(200, 154, 75); \n$edit-col-2: rgb(165, 119, 39); "],sourceRoot:""}]);const c=o},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",a=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),a&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),a&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,a,r,i){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(o[s]=!0)}for(var l=0;l<t.length;l++){var f=[].concat(t[l]);a&&o[f[0]]||(void 0!==i&&(void 0===f[5]||(f[1]="@layer".concat(f[5].length>0?" ".concat(f[5]):""," {").concat(f[1],"}")),f[5]=i),n&&(f[2]?(f[1]="@media ".concat(f[2]," {").concat(f[1],"}"),f[2]=n):f[2]=n),r&&(f[4]?(f[1]="@supports (".concat(f[4],") {").concat(f[1],"}"),f[4]=r):f[4]="".concat(r)),e.push(f))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(r," */"),o=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(o).concat([i]).join("\n")}return[e].join("\n")}},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,a=0;a<e.length;a++)if(e[a].identifier===t){n=a;break}return n}function a(t,a){for(var i={},o=[],c=0;c<t.length;c++){var s=t[c],l=a.base?s[0]+a.base:s[0],f=i[l]||0,u="".concat(l," ").concat(f);i[l]=f+1;var m=n(u),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(d);else{var p=r(d,a);a.byIndex=c,e.splice(c,0,{identifier:u,updater:p,references:1})}o.push(u)}return o}function r(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,r){var i=a(t=t||[],r=r||{});return function(t){t=t||[];for(var o=0;o<i.length;o++){var c=n(i[o]);e[c].references--}for(var s=a(t,r),l=0;l<i.length;l++){var f=n(i[l]);0===e[f].references&&(e[f].updater(),e.splice(f,1))}i=s}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var a=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,r&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(a,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(a){var r=e[a];if(void 0!==r)return r.exports;var i=e[a]={id:a,exports:{}};return t[a](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var a in e)n.o(e,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";n(287);var t=n(379),e=n.n(t),a=n(795),r=n.n(a),i=n(569),o=n.n(i),c=n(565),s=n.n(c),l=n(216),f=n.n(l),u=n(589),m=n.n(u),d=n(151),p={};function A(t){let e=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];if("home"==t)return e.filter((t=>0==t.complete));if("today"==t)return e.filter((t=>t.date==(new Date).toISOString().substring(0,10)&&0==t.complete));if("week"==t){const t=new Date;let n=new Date(t.getFullYear(),t.getMonth(),t.getDate()-7).toISOString().substring(0,10);return e.filter((t=>t.date>=n&&0==t.complete))}return"completed"==t?e.filter((t=>1==t.complete)):"late"==t?e.filter((t=>t.date<(new Date).toISOString().substring(0,10)&&0==t.complete)):e.filter((e=>e.project.toLowerCase()==t.toLowerCase()&&0==e.complete))}function g(t){const e=document.createElement("div");e.className="overlay",e.id="overlay";const n=document.createElement("div"),a=document.createElement("h2"),r=document.createElement("form"),i=document.createElement("div"),o=document.createElement("div"),c=document.createElement("div");let s=(JSON.parse(localStorage.getItem("TOP-todo-items"))||[]).filter((e=>e.title===t))[0]||"";const l={taskName:{id:"task-name",label:"Task Name:",type:"text",el:"input",values:s.title||""},taskDesc:{id:"task-desc",label:"Task Description:",type:"text",el:"input",values:s.description||""},taskDate:{id:"task-date",label:"Task Date:",type:"date",el:"input",values:s.date||""},taskPriorty:{id:"task-priorty",label:"Task Priority:",type:"select",el:"select",option:["low","medium","high","DO IT NOW!"],values:s.priority||""},taskNotes:{id:"task-notes",label:"Task Notes:",type:"text",el:"input",values:s.notes||""},taskChecklist:{id:"task-checklist",label:"Task checklist (comma separated):",type:"text",el:"input",values:s.checklist||""},taskProject:{id:"task-project",label:"Task Project:",type:"select",el:"select",option:JSON.parse(localStorage.getItem("TOP-project-nav"))||"",values:s.project||""}};if(a.innerText="Add new item",""==l.taskProject.option)return alert("Add a project before adding a task."),n;if(null!=t){for(let t in l){let e=b(l[t].id,l[t].el,l[t].label,l[t].type,l[t].option,l[t].values);r.append(e)}let t=b("task-complete","select","Completed?","select",[!1,!0],!1);r.append(t)}else for(let t in l){let e=b(l[t].id,l[t].el,l[t].label,l[t].type,l[t].option);r.append(e)}return i.innerHTML='<i class="fa-solid fa-check"></i>',i.addEventListener("click",(()=>{null!=t?function(t){let e=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];e.map((e=>{e.title===t&&(e.title=document.getElementById("task-name").value,e.description=document.getElementById("task-desc").value,e.date=document.getElementById("task-date").value,e.priorty=document.getElementById("task-priorty").value,e.notes=document.getElementById("task-notes").value,e.checklist=document.getElementById("task-checklist").value,e.project=document.getElementById("task-project").value,e.complete=1==document.getElementById("task-complete").value)})),localStorage.setItem("TOP-todo-items",JSON.stringify(e)),v(),E()}(t):(function(){let t=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];const e={title:document.getElementById("task-name").value,description:document.getElementById("task-desc").value,date:document.getElementById("task-date").value,priority:document.getElementById("task-priorty").value,notes:document.getElementById("task-notes").value,checklist:document.getElementById("task-checklist").value,project:document.getElementById("task-project").value,complete:!1};t.push(e),localStorage.setItem("TOP-todo-items",JSON.stringify(t))}(),v(),E())})),o.innerHTML='<i class="fa-solid fa-xmark"></i>',o.addEventListener("click",v),i.className="completeBtn",o.className="closeBtn",c.append(i),c.append(o),c.className="btn-group",n.append(a),n.append(r),n.append(c),n.className="add-item",n.id="add-item-form",{div:n,overlay:e}}function v(){document.querySelector("#add-item-form").remove(),document.getElementById("overlay").remove()}function b(t,e,n,a,r="",i=""){const o=document.createElement("label"),c=document.createElement(e);return o.for=t,o.append(n),"input"==e&&(c.type=a),"date"==a&&(c.defaultValue=new Date,c.value=(new Date).toISOString().substring(0,10)),r.length>0&&r.forEach((t=>{const e=document.createElement("option");e.innerText=t,e.value=t,c.append(e)})),c.id=t,""!=i&&(c.value=i),o.append(c),o}function h(t){let e=JSON.parse(localStorage.getItem("TOP-todo-items"));e.map((e=>{e.title===t&&(e.complete=!0)})),localStorage.setItem("TOP-todo-items",JSON.stringify(e))}function y(){h(document.querySelector("#single-item-display h2").innerText),k(),E()}function C(){!function(t){let e=JSON.parse(localStorage.getItem("TOP-todo-items")).filter((e=>e.title!=t));localStorage.setItem("TOP-todo-items",JSON.stringify(e))}(document.querySelector("#single-item-display h2").innerText),k(),E()}function k(){document.getElementById("single-item-display").remove(),document.getElementById("overlay").remove()}function x(t){const e=document.createElement("div"),n=JSON.parse(localStorage.getItem("TOP-project-colors"))||[],a=document.createElement("div");return a.innerHTML='<i class="fa-solid fa-circle-plus" aria-hidden="true"></i>',a.className="new-item-btn",a.addEventListener("click",(function(){const{div:t,overlay:e}=g();document.body.append(e),document.body.append(t),E()})),0==t.length?(e.append(a),e):(t.sort(((t,e)=>t.date>e.date?1:-1)),t.forEach((t=>{const a=document.createElement("div"),r=document.createElement("h3"),i=document.createElement("span"),o=document.createElement("div"),c=document.createElement("div"),s=document.createElement("div"),l=document.createElement("div");o.innerHTML='<i class="fa-solid fa-check"></i>',o.className="complete-btn",c.innerHTML='<i class="fa-solid fa-eye"></i>',c.className="view-btn",s.innerHTML='<i class="fa-solid fa-pencil"></i>',s.className="edit-btn",r.innerText=t.title,i.innerText=t.date,o.addEventListener("click",(t=>{t.stopPropagation(),function(t){h(t),E()}(r.innerText),E()})),c.addEventListener("click",(function(t){t.stopPropagation(),function(t){let e=JSON.parse(localStorage.getItem("TOP-todo-items")).filter((e=>e.title==t.innerText))[0];const{container:n,overlay:a}=function(t){const e=document.createElement("div");e.className="overlay",e.id="overlay";const n=document.createElement("div"),a=document.createElement("h2"),r=document.createElement("span"),i=document.createElement("div"),o=document.createElement("div"),c=document.createElement("ul"),s=document.createElement("div"),l=document.createElement("div"),f=document.createElement("div"),u=document.createElement("div"),m=document.createElement("div");a.innerText=t.title,r.innerText=t.date,i.innerText=`Priority: ${t.priority}`,o.innerText=t.description,s.innerText=t.notes;const d=t.checklist.split(",")||[];return""!=d[0]&&(c.append("Checklist:"),d.forEach((t=>{const e=document.createElement("li");e.innerText=t,e.addEventListener("click",(function(){console.log(this.innerText)})),c.append(e)}))),l.innerHTML='<i class="fa-solid fa-check"></i>',l.addEventListener("click",y),f.innerHTML='<i class="fa-solid fa-trash-can"></i>',f.addEventListener("click",C),u.innerHTML='<i class="fa-solid fa-xmark"></i>',u.addEventListener("click",k),m.append(l),m.append(f),m.append(u),m.className="btn-group",a.className="title",r.className="date",i.className="priority",o.className="desc",c.className="checklist",l.className="completeBtn",f.className="deleteBtn",u.className="closeBtn",n.append(a),n.append(r),n.append(i),n.append(o),n.append(c),n.append(s),n.append(m),n.id="single-item-display",n.classList.add("single-item-display"),{container:n,overlay:e}}(e);document.body.append(a),document.body.append(n)}(r)}),!0),s.addEventListener("click",(function(t){t.stopPropagation(),function(t){const e=g(t.innerText);document.body.append(e),E()}(r)}),!0),a.append(i),a.append(r),a.append(o),a.append(c),a.append(s),a.className="item-container",t.complete&&a.classList.add("completed-task"),l.classList.add("color-bar"),null==n.find((e=>Object.keys(e)==t.project))&&n.push({[t.project]:`rgb(${Math.floor(255*Math.random())},${Math.floor(255*Math.random())},${Math.floor(255*Math.random())})`}),localStorage.setItem("TOP-project-colors",JSON.stringify(n));let f="";n.forEach((e=>{for(let n of Object.keys(e))t.project==n&&(f=e[t.project])})),l.style.backgroundColor=f,a.append(l),e.append(a)})),e.append(a),e)}function w(t,e){const n=document.createElement("div"),a=document.createElement("h2"),r=new x(e);return a.innerText=t,n.id="content-page",n.className="content",n.append(a),n.append(r),n}function E(){const t=JSON.parse(localStorage.getItem("TOP-current-page"))||"Home";document.querySelector("#content-page").remove(),document.querySelector("#root .container").append(w(t,A(t.toLowerCase())))}function O(){document.querySelectorAll("nav li").forEach((t=>{t.removeEventListener("click",(function(){})),t.addEventListener("click",(function(){var e,n;e=t.innerText,localStorage.setItem("TOP-current-page",JSON.stringify(e)),E(),n=t,document.querySelectorAll("nav li").forEach((t=>{t.classList.remove("active")})),n.className="active"}))}))}function S(){console.log("add item to projects");let t=document.createElement("li");t.innerText=document.querySelector("#project-popup input").value;const e=document.querySelectorAll("#project-nav li");let n=!0;e.forEach((e=>{e.innerText.toLowerCase()==t.innerText.toLowerCase()&&(n=!1)})),n?(document.querySelector("#project-nav").append(t),document.querySelector("#project-popup").remove(),function(){const t=document.querySelectorAll("#project-nav li");let e=[];t.forEach((t=>{e.push(t.innerText)})),localStorage.removeItem("TOP-project-nav"),localStorage.setItem("TOP-project-nav",JSON.stringify(e))}(),O()):alert("project name already exists")}function I(){document.querySelector("#project-popup").remove()}function B(){const t=document.createElement("nav"),e=document.createElement("ul"),n=document.createElement("li"),a=document.createElement("li"),r=document.createElement("li"),i=document.createElement("li"),o=document.createElement("li"),c=document.createElement("ul"),s=document.createElement("div"),l=document.createElement("h2"),f=document.createElement("button");return s.innerHTML='<i class="fa-solid fa-circle-plus" aria-hidden="true"></i>',s.className="new-item-btn",l.innerText="Projects",n.innerText="Home",n.classList.add("active"),a.innerText="Today",r.innerText="Week",i.innerText="Completed",o.innerText="Late",e.append(n),e.append(a),e.append(r),e.append(i),e.append(o),c.append(l),c.id="project-nav",localStorage.getItem("TOP-project-nav")&&JSON.parse(localStorage.getItem("TOP-project-nav")).forEach((t=>{const e=document.createElement("li");e.innerText=t,c.append(e)})),s.addEventListener("click",(()=>{document.querySelector("#root").append(function(){const t=document.createElement("div"),e=document.createElement("h2"),n=document.createElement("label"),a=document.createElement("input"),r=document.createElement("button"),i=document.createElement("button");return a.type="text",n.append("Project name:"),n.append(a),r.innerText="add project",i.innerText="close",r.addEventListener("click",S),i.addEventListener("click",I),e.innerText="Add new project",t.append(e),t.append(n),t.append(r),t.append(i),t.id="project-popup",t}())})),f.innerText="warning: delete all stroage?",f.addEventListener("click",(function(){localStorage.removeItem("TOP-project-nav"),localStorage.removeItem("TOP-todo-project"),localStorage.removeItem("TOP-todo-items"),localStorage.removeItem("TOP-project-colors"),localStorage.removeItem("TOP-current-page"),location.reload()})),f.className="warning-btn",t.append(e),t.append(c),t.append(s),t.append(f),t}p.styleTagTransform=m(),p.setAttributes=s(),p.insert=o().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=f(),e()(d.Z,p),d.Z&&d.Z.locals&&d.Z.locals,localStorage.setItem("TOP-current-page",JSON.stringify("Home")),function(t,e,n){const a=document.querySelector("#root"),r=document.createElement("div"),i=document.createElement("header"),o=document.createElement("h1"),c=new B,s=new t(e,A(e));o.innerText="To Do List | The Odin Project",i.append(o),r.className="container",c.className="navigation",r.append(i),r.append(c),r.append(s),a.textContent="",a.append(r),O()}(w,"home")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,