(()=>{"use strict";var e={151:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,'*{margin:0;padding:0;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}.container{min-height:100vh;display:grid;grid-template-columns:1fr 4fr;grid-template-rows:.5fr 4fr;grid-template-areas:"nav header" "nav content"}.container header{grid-area:header}.container header h1{text-align:center}.container .navigation{font-size:2rem;height:100%;background-color:#3f3e49;color:#fff;grid-area:nav;padding:1.5rem;align-self:center;display:flex;flex-direction:column;gap:25px}.container .navigation button{border-radius:5px;border:1px solid transparent;cursor:pointer;text-transform:capitalize}.container .navigation button:hover{border:1px solid #000;font-weight:bold}.container .navigation .warning-btn{background-color:#c30;color:#fff;font-weight:bold;justify-self:flex-end;text-transform:uppercase}.container .navigation .warning-btn:hover{background-color:#e95827}.container .content{grid-area:content;display:grid;justify-items:center;gap:2rem;grid-template-rows:max-content 1fr}.container .content>div{width:90%}.container ul{display:flex;flex-direction:column;gap:10px}.container li{list-style-type:none;cursor:pointer;position:relative;margin-left:1rem}.container li:hover:before{position:absolute;content:"//";font-weight:bold;left:-1rem;top:0}.container .active{font-weight:bold}.container .active:before{position:absolute;content:"//";font-weight:bold;left:-1rem;top:0}.add-item,#project-popup{position:absolute;top:1rem;left:1rem;right:1rem;bottom:1rem;background-color:#fff;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);padding:2rem}.add-item form,#project-popup form{margin:1rem 0;display:grid;gap:20px}.add-item form label,#project-popup form label{display:grid}.add-item button,#project-popup button{margin:1rem 1rem 1rem 0}.item-container{display:grid;grid-template-columns:1fr 3fr 1fr;padding:1rem;margin-bottom:1rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25)}.single-item-display{padding:2rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);width:80%;margin:1rem auto;display:grid;grid-template-areas:"title . date" "priority . . " "desc desc desc" "checklist . . " "notes . . " "btns btns btns";gap:20px}.single-item-display .title{grid-area:title}.single-item-display .date{grid-area:date}.single-item-display .priority{grid-area:priority}.single-item-display .desc{grid-area:desc}.single-item-display .checklist{grid-area:checklist}.single-item-display .notes{grid-area:notes}.single-item-display .btn-group{grid-area:btns;justify-self:center;display:flex;gap:20px}',"",{version:3,sources:["webpack://./src/sass/main.scss","webpack://./src/sass/variables.scss"],names:[],mappings:"AAEA,EACI,QAAA,CACA,SAAA,CACA,0BAAA,CACA,6BAAA,CACA,qBAAA,CAIJ,WAEI,gBAAA,CACA,YAAA,CACA,6BAAA,CACA,2BAAA,CACA,8CAAA,CAGA,kBACI,gBAAA,CACA,qBACI,iBAAA,CAIR,uBACI,cAAA,CACA,WAAA,CACA,wBC9BQ,CD+BR,UC9BQ,CD+BR,aAAA,CACA,cAAA,CACA,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,QAAA,CAGA,8BACI,iBAAA,CACA,4BAAA,CACA,cAAA,CACA,yBAAA,CAEA,oCACI,qBAAA,CACA,gBAAA,CAKR,oCACI,qBCpDE,CDqDF,UAAA,CACA,gBAAA,CACA,qBAAA,CACA,wBAAA,CAEA,0CACI,wBC1DA,CDiEZ,oBACI,iBAAA,CACA,YAAA,CACA,oBAAA,CACA,QAAA,CACA,kCAAA,CAEA,wBACI,SAAA,CAIR,cACI,YAAA,CACA,qBAAA,CACA,QAAA,CAGJ,cACI,oBAAA,CACA,cAAA,CACA,iBAAA,CACA,gBAAA,CAGI,2BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,UAAA,CACA,KAAA,CAMZ,mBACI,gBAAA,CACA,0BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,UAAA,CACA,KAAA,CASZ,yBACI,iBAAA,CACA,QAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,qBC7HY,CD8HZ,uCAAA,CACA,YAAA,CAGA,mCACI,aAAA,CACA,YAAA,CACA,QAAA,CACA,+CACI,YAAA,CAIR,uCACI,uBAAA,CAIR,gBACI,YAAA,CACA,iCAAA,CACA,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,uCAAA,CAGJ,qBACI,YAAA,CACA,kBAAA,CACA,uCAAA,CACA,SAAA,CACA,gBAAA,CAEA,YAAA,CACA,kHAAA,CAOA,QAAA,CAEA,4BACI,eAAA,CAGJ,2BACI,cAAA,CAGJ,+BACI,kBAAA,CAEJ,2BACI,cAAA,CAEJ,gCACI,mBAAA,CAEJ,4BACI,eAAA,CAEJ,gCACI,cAAA,CACA,mBAAA,CACA,YAAA,CACA,QAAA",sourcesContent:['@import \'./variables.scss\'; \n\n* {\n    margin: 0; \n    padding: 0; \n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box; \n    box-sizing: border-box;\n}\n\n\n.container {\n\n    min-height: 100vh; \n    display: grid; \n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 0.5fr 4fr;\n    grid-template-areas: "nav header"\n        "nav content"\n    ;\n    header {\n        grid-area: header;\n        h1 {\n            text-align: center;\n        }\n    }\n\n    .navigation {\n        font-size: 2rem;\n        height: 100%; \n        background-color:$primary-col-1; \n        color: $primary-col-2; \n        grid-area: nav;\n        padding: 1.5rem;\n        align-self: center;\n        display: flex; \n        flex-direction: column;\n        gap: 25px;\n\n\n        button {\n            border-radius: 5px; \n            border: 1px solid transparent; \n            cursor: pointer;\n            text-transform: capitalize;\n\n            &:hover {\n                border: 1px solid black;\n                font-weight: bold;\n            }\n        }\n\n\n        .warning-btn {\n            background-color: $warning-col;\n            color: white; \n            font-weight: bold;  \n            justify-self: flex-end;\n            text-transform: uppercase;\n\n            &:hover {\n                background-color: $warning-col-2;\n            }\n        }\n    }\n\n    \n\n    .content {\n        grid-area: content;\n        display: grid; \n        justify-items: center;\n        gap: 2rem;\n        grid-template-rows: max-content 1fr;\n\n        >div {\n            width: 90%;\n        }\n    }\n\n    ul {\n        display: flex; \n        flex-direction: column;\n        gap: 10px; \n    }\n\n    li {\n        list-style-type: none;\n        cursor: pointer;\n        position: relative;\n        margin-left: 1rem; \n\n        &:hover {\n            &:before {\n                position: absolute; \n                content: \'//\'; \n                font-weight: bold;\n                left: -1rem; \n                top: 0; \n\n            }\n        }\n    }\n\n    .active {\n        font-weight: bold;\n        &:before {\n            position: absolute; \n            content: \'//\'; \n            font-weight: bold;\n            left: -1rem; \n            top: 0; \n\n        }\n    }\n\n\n}\n\n\n.add-item, #project-popup  {\n    position: absolute; \n    top: 1rem; \n    left: 1rem; \n    right: 1rem; \n    bottom: 1rem; \n    background-color: $primary-col-2;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    padding: 2rem;\n\n\n    form {\n        margin: 1rem 0;\n        display: grid; \n        gap: 20px; \n        label {\n            display: grid; \n        }\n    }\n\n    button {\n        margin: 1rem 1rem 1rem 0;\n    }\n}\n\n.item-container {\n    display: grid; \n    grid-template-columns: 1fr 3fr 1fr;\n    padding: 1rem; \n    margin-bottom: 1rem; \n    border-radius: 10px;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n}\n\n.single-item-display {\n    padding: 2rem; \n    border-radius: 10px; \n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    width: 80%; \n    margin: 1rem auto;\n\n    display: grid;\n    grid-template-areas: "title . date"\n        "priority . . "\n        "desc desc desc"\n        "checklist . . "\n        "notes . . "\n        "btns btns btns"\n    ;\n    gap: 20px; \n\n    .title {\n        grid-area: title; \n    }\n\n    .date {\n        grid-area: date;\n\n    }\n    .priority {\n        grid-area: priority;\n    }\n    .desc {\n        grid-area: desc; \n    }\n    .checklist {\n        grid-area: checklist; \n    }\n    .notes {\n        grid-area: notes;\n    }\n    .btn-group {\n        grid-area: btns; \n        justify-self: center;\n        display: flex; \n        gap: 20px; \n    }\n    \n}',"$primary-col-1: rgb(63, 62, 73); \n$primary-col-2: rgb(255,255,255); \n$warning-col: rgb(204, 51, 0); \n$warning-col-2: rgb(233, 88, 39); "],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var A=e[c],d=r.base?A[0]+r.base:A[0],l=a[d]||0,s="".concat(d," ").concat(l);a[d]=l+1;var p=n(s),m={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var u=o(m,r);r.byIndex=c,t.splice(c,0,{identifier:s,updater:u,references:1})}i.push(s)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var A=r(e,o),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=A}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),i=n.n(a),c=n(565),A=n.n(c),d=n(216),l=n.n(d),s=n(589),p=n.n(s),m=n(151),u={};function g(e){let t=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];if("home"==e)return t;if("today"==e)return t.filter((e=>e.date==(new Date).toISOString().substring(0,10)));if("week"==e){const e=new Date;let n=new Date(e.getFullYear(),e.getMonth(),e.getDate()-7).toISOString().substring(0,10);return t.filter((e=>e.date>=n))}return"complete"==e?t.filter((e=>1==e.complete)):t.filter((t=>t.project.toLowerCase()==e))}function C(e,t,n,r,o,a,i){return{title:e,description:t,date:n,priority:r,notes:o,checklist:a,project:i,complete:!1}}function f(){document.querySelector("#add-item-form").remove()}function b(e,t,n,r,o=[]){const a=document.createElement("label"),i=document.createElement(t);return a.for=e,a.append(n),"input"==t&&(i.type=r),"date"==r&&(i.defaultValue=new Date,i.value=(new Date).toISOString().substring(0,10)),o.length>0&&o.forEach((e=>{const t=document.createElement("option");t.innerText=e,t.value=e,i.append(t)})),i.id=e,a.append(i),a}function v(e){const t=document.createElement("div"),n=document.createElement("button");return n.innerText="+",0==e.length?(t.append(n),t):(e.forEach((e=>{const n=document.createElement("div"),r=document.createElement("h3"),o=document.createElement("span"),a=document.createElement("button");a.innerText="complete",a.classNam="complete-btn",r.innerText=e.title,o.innerText=e.date,a.addEventListener("click",(function(){!function(e){e.complete=!0}(this)})),n.append(o),n.append(r),n.append(a),n.className="item-container",t.append(n)})),n.className="new-item-btn",n.addEventListener("click",(function(){const e=function(){const e=document.createElement("div"),t=document.createElement("h2"),n=document.createElement("form"),r=document.createElement("button"),o=document.createElement("button"),a={taskName:{id:"task-name",label:"Task Name:",type:"text",el:"input"},taskDesc:{id:"task-desc",label:"Task Description:",type:"text",el:"input"},taskDate:{id:"task-date",label:"Task Date:",type:"date",el:"input"},taskPriorty:{id:"task-priorty",label:"Task Priority:",type:"select",el:"select",option:["low","medium","high","DO IT NOW!"]},taskNotes:{id:"task-notes",label:"Task Notes:",type:"text",el:"input"},taskChecklist:{id:"task-checklist",label:"Task checklist (comma separated):",type:"text",el:"input"},taskProject:{id:"task-project",label:"Task Project:",type:"select",el:"select",option:JSON.parse(localStorage.getItem("TOP-project-nav"))}};t.innerText="Add new item";for(let e in a){let t=b(a[e].id,a[e].el,a[e].label,a[e].type,a[e].option);n.append(t)}return r.innerText="Add",r.addEventListener("click",(()=>{(function(){let e=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];const t=C(document.getElementById("task-name").value,document.getElementById("task-desc").value,document.getElementById("task-date").value,document.getElementById("task-priorty").value,document.getElementById("task-notes").value,document.getElementById("task-checklist").value,document.getElementById("task-project").value);console.log(t),e.push(t),localStorage.setItem("TOP-todo-items",JSON.stringify(e)),console.log(localStorage.getItem("TOP-todo-items"))})(),document.querySelector("#add-item-form").remove()})),o.innerText="Close",o.addEventListener("click",f),e.append(t),e.append(n),e.append(r),e.append(o),e.className="add-item",e.id="add-item-form",e}();document.body.append(e)})),t.append(n),t)}function h(e,t){const n=document.createElement("div"),r=document.createElement("h2"),o=new v(t);return r.innerText=e,n.id="content-page",n.className="content",n.append(r),n.append(o),n}function y(){document.querySelectorAll("nav li").forEach((e=>{e.removeEventListener("click",(function(){})),e.addEventListener("click",(function(){var t,n;t=e.innerText,document.querySelector("#content-page").remove(),document.querySelector("#root .container").append(h(t,g(t.toLowerCase()))),n=e,document.querySelectorAll("nav li").forEach((e=>{e.classList.remove("active")})),n.className="active"}))}))}function x(){console.log("add item to projects");let e=document.createElement("li");e.innerText=document.querySelector("#project-popup input").value,document.querySelector("#project-nav").append(e),document.querySelector("#project-popup").remove(),function(){const e=document.querySelectorAll("#project-nav li");let t=[];e.forEach((e=>{t.push(e.innerText)})),localStorage.getItem("TOP-project-nav")&&JSON.parse(localStorage.getItem("TOP-project-nav")).forEach((e=>{-1==t.indexOf(e)&&t.push(e)})),localStorage.removeItem("TOP-project-nav"),localStorage.setItem("TOP-project-nav",JSON.stringify(t))}(),y()}function E(){document.querySelector("#project-popup").remove()}function k(){const e=document.createElement("nav"),t=document.createElement("ul"),n=document.createElement("li"),r=document.createElement("li"),o=document.createElement("li"),a=document.createElement("li"),i=document.createElement("ul"),c=document.createElement("button"),A=document.createElement("h2"),d=document.createElement("button");return A.innerText="Projects",n.innerText="Home",r.innerText="Today",o.innerText="Week",a.innerText="Completed",t.append(n),t.append(r),t.append(o),t.append(a),i.append(A),i.id="project-nav",localStorage.getItem("TOP-project-nav")&&JSON.parse(localStorage.getItem("TOP-project-nav")).forEach((e=>{const t=document.createElement("li");t.innerText=e,i.append(t)})),c.innerText="add project",c.addEventListener("click",(()=>{document.querySelector("#root").append(function(){const e=document.createElement("div"),t=document.createElement("h2"),n=document.createElement("label"),r=document.createElement("input"),o=document.createElement("button"),a=document.createElement("button");return r.type="text",n.append("Project name:"),n.append(r),o.innerText="add project",a.innerText="close",o.addEventListener("click",x),a.addEventListener("click",E),t.innerText="Add new project",e.append(t),e.append(n),e.append(o),e.append(a),e.id="project-popup",e}())})),d.innerText="warning: delete all stroage?",d.addEventListener("click",(function(){localStorage.removeItem("TOP-project-nav"),location.reload()})),d.className="warning-btn",e.append(t),e.append(i),e.append(c),e.append(d),e}u.styleTagTransform=p(),u.setAttributes=A(),u.insert=i().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=l(),t()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals,C("randomTitle1","blah desc","date","1","",["item1","item2"]),C("randomTitle2","blah desc","date","1","",["item1","item2"]),C("randomTitle3","blah desc","date","1","",["item1","item2"]),C("randomTitle4","blah desc","date","1","",["item1","item2"]),function(e,t,n){const r=document.querySelector("#root"),o=document.createElement("div"),a=document.createElement("header"),i=document.createElement("h1"),c=new k,A=new e(t,g(t));i.innerText="To Do List | The Odin Project",a.append(i),o.className="container",c.className="navigation",o.append(a),o.append(c),o.append(A),r.textContent="",r.append(o),y()}(h,"home")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU8vSSxHQUVab04sRUFBS0csWUFBYyxHQUNuQkgsRUFBS3JFLE9BQU91QyxHQUNaRSxJQ3ZCSmdDLENBQVlwQyxFQUFtQixTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9zYXNzL21haW4uc2NzcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvcC10b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvc2Fzcy9tYWluLnNjc3M/NmExNyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL2ZpbHRlckl0ZW1zLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvVG9Eb0l0ZW0uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9BZGROZXdJdGVtLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvcmVuZGVyUGFnZUl0ZW0uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9tYW5hZ2VOZXdJdGVtLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvcmVuZGVyUGFnZUNvbnRlbnQuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9uYXZpZ2F0aW9uL25hdmlnYXRlU2VjdGlvbnMuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9uYXZpZ2F0aW9uL05ld1Byb2plY3QuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9uYXZpZ2F0aW9uL25hdmlnYXRpb25ET00uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9HZW5lcmljUGFnZS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKnttYXJnaW46MDtwYWRkaW5nOjA7LW1vei1ib3gtc2l6aW5nOmJvcmRlci1ib3g7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94fS5jb250YWluZXJ7bWluLWhlaWdodDoxMDB2aDtkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmciA0ZnI7Z3JpZC10ZW1wbGF0ZS1yb3dzOi41ZnIgNGZyO2dyaWQtdGVtcGxhdGUtYXJlYXM6XFxcIm5hdiBoZWFkZXJcXFwiIFxcXCJuYXYgY29udGVudFxcXCJ9LmNvbnRhaW5lciBoZWFkZXJ7Z3JpZC1hcmVhOmhlYWRlcn0uY29udGFpbmVyIGhlYWRlciBoMXt0ZXh0LWFsaWduOmNlbnRlcn0uY29udGFpbmVyIC5uYXZpZ2F0aW9ue2ZvbnQtc2l6ZToycmVtO2hlaWdodDoxMDAlO2JhY2tncm91bmQtY29sb3I6IzNmM2U0OTtjb2xvcjojZmZmO2dyaWQtYXJlYTpuYXY7cGFkZGluZzoxLjVyZW07YWxpZ24tc2VsZjpjZW50ZXI7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtnYXA6MjVweH0uY29udGFpbmVyIC5uYXZpZ2F0aW9uIGJ1dHRvbntib3JkZXItcmFkaXVzOjVweDtib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50O2N1cnNvcjpwb2ludGVyO3RleHQtdHJhbnNmb3JtOmNhcGl0YWxpemV9LmNvbnRhaW5lciAubmF2aWdhdGlvbiBidXR0b246aG92ZXJ7Ym9yZGVyOjFweCBzb2xpZCAjMDAwO2ZvbnQtd2VpZ2h0OmJvbGR9LmNvbnRhaW5lciAubmF2aWdhdGlvbiAud2FybmluZy1idG57YmFja2dyb3VuZC1jb2xvcjojYzMwO2NvbG9yOiNmZmY7Zm9udC13ZWlnaHQ6Ym9sZDtqdXN0aWZ5LXNlbGY6ZmxleC1lbmQ7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlfS5jb250YWluZXIgLm5hdmlnYXRpb24gLndhcm5pbmctYnRuOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2U5NTgyN30uY29udGFpbmVyIC5jb250ZW50e2dyaWQtYXJlYTpjb250ZW50O2Rpc3BsYXk6Z3JpZDtqdXN0aWZ5LWl0ZW1zOmNlbnRlcjtnYXA6MnJlbTtncmlkLXRlbXBsYXRlLXJvd3M6bWF4LWNvbnRlbnQgMWZyfS5jb250YWluZXIgLmNvbnRlbnQ+ZGl2e3dpZHRoOjkwJX0uY29udGFpbmVyIHVse2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47Z2FwOjEwcHh9LmNvbnRhaW5lciBsaXtsaXN0LXN0eWxlLXR5cGU6bm9uZTtjdXJzb3I6cG9pbnRlcjtwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW4tbGVmdDoxcmVtfS5jb250YWluZXIgbGk6aG92ZXI6YmVmb3Jle3Bvc2l0aW9uOmFic29sdXRlO2NvbnRlbnQ6XFxcIi8vXFxcIjtmb250LXdlaWdodDpib2xkO2xlZnQ6LTFyZW07dG9wOjB9LmNvbnRhaW5lciAuYWN0aXZle2ZvbnQtd2VpZ2h0OmJvbGR9LmNvbnRhaW5lciAuYWN0aXZlOmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTtjb250ZW50OlxcXCIvL1xcXCI7Zm9udC13ZWlnaHQ6Ym9sZDtsZWZ0Oi0xcmVtO3RvcDowfS5hZGQtaXRlbSwjcHJvamVjdC1wb3B1cHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MXJlbTtsZWZ0OjFyZW07cmlnaHQ6MXJlbTtib3R0b206MXJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym94LXNoYWRvdzowIDVweCAxMHB4IDAgcmdiYSgwLDAsMCwuMjUpO3BhZGRpbmc6MnJlbX0uYWRkLWl0ZW0gZm9ybSwjcHJvamVjdC1wb3B1cCBmb3Jte21hcmdpbjoxcmVtIDA7ZGlzcGxheTpncmlkO2dhcDoyMHB4fS5hZGQtaXRlbSBmb3JtIGxhYmVsLCNwcm9qZWN0LXBvcHVwIGZvcm0gbGFiZWx7ZGlzcGxheTpncmlkfS5hZGQtaXRlbSBidXR0b24sI3Byb2plY3QtcG9wdXAgYnV0dG9ue21hcmdpbjoxcmVtIDFyZW0gMXJlbSAwfS5pdGVtLWNvbnRhaW5lcntkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjFmciAzZnIgMWZyO3BhZGRpbmc6MXJlbTttYXJnaW4tYm90dG9tOjFyZW07Ym9yZGVyLXJhZGl1czoxMHB4O2JveC1zaGFkb3c6MCA1cHggMTBweCAwIHJnYmEoMCwwLDAsLjI1KX0uc2luZ2xlLWl0ZW0tZGlzcGxheXtwYWRkaW5nOjJyZW07Ym9yZGVyLXJhZGl1czoxMHB4O2JveC1zaGFkb3c6MCA1cHggMTBweCAwIHJnYmEoMCwwLDAsLjI1KTt3aWR0aDo4MCU7bWFyZ2luOjFyZW0gYXV0bztkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1hcmVhczpcXFwidGl0bGUgLiBkYXRlXFxcIiBcXFwicHJpb3JpdHkgLiAuIFxcXCIgXFxcImRlc2MgZGVzYyBkZXNjXFxcIiBcXFwiY2hlY2tsaXN0IC4gLiBcXFwiIFxcXCJub3RlcyAuIC4gXFxcIiBcXFwiYnRucyBidG5zIGJ0bnNcXFwiO2dhcDoyMHB4fS5zaW5nbGUtaXRlbS1kaXNwbGF5IC50aXRsZXtncmlkLWFyZWE6dGl0bGV9LnNpbmdsZS1pdGVtLWRpc3BsYXkgLmRhdGV7Z3JpZC1hcmVhOmRhdGV9LnNpbmdsZS1pdGVtLWRpc3BsYXkgLnByaW9yaXR5e2dyaWQtYXJlYTpwcmlvcml0eX0uc2luZ2xlLWl0ZW0tZGlzcGxheSAuZGVzY3tncmlkLWFyZWE6ZGVzY30uc2luZ2xlLWl0ZW0tZGlzcGxheSAuY2hlY2tsaXN0e2dyaWQtYXJlYTpjaGVja2xpc3R9LnNpbmdsZS1pdGVtLWRpc3BsYXkgLm5vdGVze2dyaWQtYXJlYTpub3Rlc30uc2luZ2xlLWl0ZW0tZGlzcGxheSAuYnRuLWdyb3Vwe2dyaWQtYXJlYTpidG5zO2p1c3RpZnktc2VsZjpjZW50ZXI7ZGlzcGxheTpmbGV4O2dhcDoyMHB4fVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zYXNzL21haW4uc2Nzc1wiLFwid2VicGFjazovLy4vc3JjL3Nhc3MvdmFyaWFibGVzLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUEsRUFDSSxRQUFBLENBQ0EsU0FBQSxDQUNBLDBCQUFBLENBQ0EsNkJBQUEsQ0FDQSxxQkFBQSxDQUlKLFdBRUksZ0JBQUEsQ0FDQSxZQUFBLENBQ0EsNkJBQUEsQ0FDQSwyQkFBQSxDQUNBLDhDQUFBLENBR0Esa0JBQ0ksZ0JBQUEsQ0FDQSxxQkFDSSxpQkFBQSxDQUlSLHVCQUNJLGNBQUEsQ0FDQSxXQUFBLENBQ0Esd0JDOUJRLENEK0JSLFVDOUJRLENEK0JSLGFBQUEsQ0FDQSxjQUFBLENBQ0EsaUJBQUEsQ0FDQSxZQUFBLENBQ0EscUJBQUEsQ0FDQSxRQUFBLENBR0EsOEJBQ0ksaUJBQUEsQ0FDQSw0QkFBQSxDQUNBLGNBQUEsQ0FDQSx5QkFBQSxDQUVBLG9DQUNJLHFCQUFBLENBQ0EsZ0JBQUEsQ0FLUixvQ0FDSSxxQkNwREUsQ0RxREYsVUFBQSxDQUNBLGdCQUFBLENBQ0EscUJBQUEsQ0FDQSx3QkFBQSxDQUVBLDBDQUNJLHdCQzFEQSxDRGlFWixvQkFDSSxpQkFBQSxDQUNBLFlBQUEsQ0FDQSxvQkFBQSxDQUNBLFFBQUEsQ0FDQSxrQ0FBQSxDQUVBLHdCQUNJLFNBQUEsQ0FJUixjQUNJLFlBQUEsQ0FDQSxxQkFBQSxDQUNBLFFBQUEsQ0FHSixjQUNJLG9CQUFBLENBQ0EsY0FBQSxDQUNBLGlCQUFBLENBQ0EsZ0JBQUEsQ0FHSSwyQkFDSSxpQkFBQSxDQUNBLFlBQUEsQ0FDQSxnQkFBQSxDQUNBLFVBQUEsQ0FDQSxLQUFBLENBTVosbUJBQ0ksZ0JBQUEsQ0FDQSwwQkFDSSxpQkFBQSxDQUNBLFlBQUEsQ0FDQSxnQkFBQSxDQUNBLFVBQUEsQ0FDQSxLQUFBLENBU1oseUJBQ0ksaUJBQUEsQ0FDQSxRQUFBLENBQ0EsU0FBQSxDQUNBLFVBQUEsQ0FDQSxXQUFBLENBQ0EscUJDN0hZLENEOEhaLHVDQUFBLENBQ0EsWUFBQSxDQUdBLG1DQUNJLGFBQUEsQ0FDQSxZQUFBLENBQ0EsUUFBQSxDQUNBLCtDQUNJLFlBQUEsQ0FJUix1Q0FDSSx1QkFBQSxDQUlSLGdCQUNJLFlBQUEsQ0FDQSxpQ0FBQSxDQUNBLFlBQUEsQ0FDQSxrQkFBQSxDQUNBLGtCQUFBLENBQ0EsdUNBQUEsQ0FHSixxQkFDSSxZQUFBLENBQ0Esa0JBQUEsQ0FDQSx1Q0FBQSxDQUNBLFNBQUEsQ0FDQSxnQkFBQSxDQUVBLFlBQUEsQ0FDQSxrSEFBQSxDQU9BLFFBQUEsQ0FFQSw0QkFDSSxlQUFBLENBR0osMkJBQ0ksY0FBQSxDQUdKLCtCQUNJLGtCQUFBLENBRUosMkJBQ0ksY0FBQSxDQUVKLGdDQUNJLG1CQUFBLENBRUosNEJBQ0ksZUFBQSxDQUVKLGdDQUNJLGNBQUEsQ0FDQSxtQkFBQSxDQUNBLFlBQUEsQ0FDQSxRQUFBXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgJy4vdmFyaWFibGVzLnNjc3MnOyBcXG5cXG4qIHtcXG4gICAgbWFyZ2luOiAwOyBcXG4gICAgcGFkZGluZzogMDsgXFxuICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94OyBcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuXFxuLmNvbnRhaW5lciB7XFxuXFxuICAgIG1pbi1oZWlnaHQ6IDEwMHZoOyBcXG4gICAgZGlzcGxheTogZ3JpZDsgXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDRmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAwLjVmciA0ZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFxcXCJuYXYgaGVhZGVyXFxcIlxcbiAgICAgICAgXFxcIm5hdiBjb250ZW50XFxcIlxcbiAgICA7XFxuICAgIGhlYWRlciB7XFxuICAgICAgICBncmlkLWFyZWE6IGhlYWRlcjtcXG4gICAgICAgIGgxIHtcXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgLm5hdmlnYXRpb24ge1xcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xcbiAgICAgICAgaGVpZ2h0OiAxMDAlOyBcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6JHByaW1hcnktY29sLTE7IFxcbiAgICAgICAgY29sb3I6ICRwcmltYXJ5LWNvbC0yOyBcXG4gICAgICAgIGdyaWQtYXJlYTogbmF2O1xcbiAgICAgICAgcGFkZGluZzogMS41cmVtO1xcbiAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICAgICAgZGlzcGxheTogZmxleDsgXFxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICAgICAgZ2FwOiAyNXB4O1xcblxcblxcbiAgICAgICAgYnV0dG9uIHtcXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7IFxcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50OyBcXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuXFxuICAgICAgICAgICAgJjpob3ZlciB7XFxuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuXFxuXFxuICAgICAgICAud2FybmluZy1idG4ge1xcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3YXJuaW5nLWNvbDtcXG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7IFxcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOyAgXFxuICAgICAgICAgICAganVzdGlmeS1zZWxmOiBmbGV4LWVuZDtcXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcblxcbiAgICAgICAgICAgICY6aG92ZXIge1xcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2FybmluZy1jb2wtMjtcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgXFxuXFxuICAgIC5jb250ZW50IHtcXG4gICAgICAgIGdyaWQtYXJlYTogY29udGVudDtcXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7IFxcbiAgICAgICAganVzdGlmeS1pdGVtczogY2VudGVyO1xcbiAgICAgICAgZ2FwOiAycmVtO1xcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBtYXgtY29udGVudCAxZnI7XFxuXFxuICAgICAgICA+ZGl2IHtcXG4gICAgICAgICAgICB3aWR0aDogOTAlO1xcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIHVsIHtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IFxcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgICAgIGdhcDogMTBweDsgXFxuICAgIH1cXG5cXG4gICAgbGkge1xcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07IFxcblxcbiAgICAgICAgJjpob3ZlciB7XFxuICAgICAgICAgICAgJjpiZWZvcmUge1xcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IFxcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnLy8nOyBcXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgICAgICAgICAgICAgIGxlZnQ6IC0xcmVtOyBcXG4gICAgICAgICAgICAgICAgdG9wOiAwOyBcXG5cXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgIH1cXG5cXG4gICAgLmFjdGl2ZSB7XFxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgICAgICY6YmVmb3JlIHtcXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IFxcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcvLyc7IFxcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICAgICAgICAgIGxlZnQ6IC0xcmVtOyBcXG4gICAgICAgICAgICB0b3A6IDA7IFxcblxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuXFxufVxcblxcblxcbi5hZGQtaXRlbSwgI3Byb2plY3QtcG9wdXAgIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlOyBcXG4gICAgdG9wOiAxcmVtOyBcXG4gICAgbGVmdDogMXJlbTsgXFxuICAgIHJpZ2h0OiAxcmVtOyBcXG4gICAgYm90dG9tOiAxcmVtOyBcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktY29sLTI7XFxuICAgIGJveC1zaGFkb3c6IDAgNXB4IDEwcHggMCByZ2JhKDAsMCwwLDAuMjUpO1xcbiAgICBwYWRkaW5nOiAycmVtO1xcblxcblxcbiAgICBmb3JtIHtcXG4gICAgICAgIG1hcmdpbjogMXJlbSAwO1xcbiAgICAgICAgZGlzcGxheTogZ3JpZDsgXFxuICAgICAgICBnYXA6IDIwcHg7IFxcbiAgICAgICAgbGFiZWwge1xcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7IFxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIGJ1dHRvbiB7XFxuICAgICAgICBtYXJnaW46IDFyZW0gMXJlbSAxcmVtIDA7XFxuICAgIH1cXG59XFxuXFxuLml0ZW0tY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDsgXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDNmciAxZnI7XFxuICAgIHBhZGRpbmc6IDFyZW07IFxcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOyBcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgYm94LXNoYWRvdzogMCA1cHggMTBweCAwIHJnYmEoMCwwLDAsMC4yNSk7XFxufVxcblxcbi5zaW5nbGUtaXRlbS1kaXNwbGF5IHtcXG4gICAgcGFkZGluZzogMnJlbTsgXFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7IFxcbiAgICBib3gtc2hhZG93OiAwIDVweCAxMHB4IDAgcmdiYSgwLDAsMCwwLjI1KTtcXG4gICAgd2lkdGg6IDgwJTsgXFxuICAgIG1hcmdpbjogMXJlbSBhdXRvO1xcblxcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcXFwidGl0bGUgLiBkYXRlXFxcIlxcbiAgICAgICAgXFxcInByaW9yaXR5IC4gLiBcXFwiXFxuICAgICAgICBcXFwiZGVzYyBkZXNjIGRlc2NcXFwiXFxuICAgICAgICBcXFwiY2hlY2tsaXN0IC4gLiBcXFwiXFxuICAgICAgICBcXFwibm90ZXMgLiAuIFxcXCJcXG4gICAgICAgIFxcXCJidG5zIGJ0bnMgYnRuc1xcXCJcXG4gICAgO1xcbiAgICBnYXA6IDIwcHg7IFxcblxcbiAgICAudGl0bGUge1xcbiAgICAgICAgZ3JpZC1hcmVhOiB0aXRsZTsgXFxuICAgIH1cXG5cXG4gICAgLmRhdGUge1xcbiAgICAgICAgZ3JpZC1hcmVhOiBkYXRlO1xcblxcbiAgICB9XFxuICAgIC5wcmlvcml0eSB7XFxuICAgICAgICBncmlkLWFyZWE6IHByaW9yaXR5O1xcbiAgICB9XFxuICAgIC5kZXNjIHtcXG4gICAgICAgIGdyaWQtYXJlYTogZGVzYzsgXFxuICAgIH1cXG4gICAgLmNoZWNrbGlzdCB7XFxuICAgICAgICBncmlkLWFyZWE6IGNoZWNrbGlzdDsgXFxuICAgIH1cXG4gICAgLm5vdGVzIHtcXG4gICAgICAgIGdyaWQtYXJlYTogbm90ZXM7XFxuICAgIH1cXG4gICAgLmJ0bi1ncm91cCB7XFxuICAgICAgICBncmlkLWFyZWE6IGJ0bnM7IFxcbiAgICAgICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICAgICAgICBkaXNwbGF5OiBmbGV4OyBcXG4gICAgICAgIGdhcDogMjBweDsgXFxuICAgIH1cXG4gICAgXFxufVwiLFwiJHByaW1hcnktY29sLTE6IHJnYig2MywgNjIsIDczKTsgXFxuJHByaW1hcnktY29sLTI6IHJnYigyNTUsMjU1LDI1NSk7IFxcbiR3YXJuaW5nLWNvbDogcmdiKDIwNCwgNTEsIDApOyBcXG4kd2FybmluZy1jb2wtMjogcmdiKDIzMywgODgsIDM5KTsgXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLnNjc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLnNjc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmaWx0ZXJJdGVtcyhwcm9qZWN0KSB7XG5cbiAgICBsZXQgaXRlbXNTdG9yZWQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdUT1AtdG9kby1pdGVtcycpKSB8fCBbXTsgXG4gICAgXG5cbiAgICBpZiAocHJvamVjdCA9PSAnaG9tZScpIHtcbiAgICAgICAgcmV0dXJuIGl0ZW1zU3RvcmVkOyBcbiAgICB9XG5cbiAgICBpZiAocHJvamVjdCA9PSAndG9kYXknKSB7XG4gICAgICAgIHJldHVybiBpdGVtc1N0b3JlZC5maWx0ZXIoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBpdGVtLmRhdGUgPT0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLCAxMCk7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgaWYgKHByb2plY3QgPT0gJ3dlZWsnKSB7XG4gICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7ICAgICAgICAgXG4gICAgICAgIGxldCBsYXN0V2VlayA9IG5ldyBEYXRlKG5vdy5nZXRGdWxsWWVhcigpLCBub3cuZ2V0TW9udGgoKSwgbm93LmdldERhdGUoKSAtIDcpLnRvSVNPU3RyaW5nKCkuc3Vic3RyaW5nKDAsIDEwKTtcbiAgICAgICAgcmV0dXJuIGl0ZW1zU3RvcmVkLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW0uZGF0ZSA+PSAgbGFzdFdlZWs7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgaWYgKHByb2plY3QgPT0gJ2NvbXBsZXRlJykge1xuICAgICAgICByZXR1cm4gaXRlbXNTdG9yZWQuZmlsdGVyKChpdGVtKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbS5jb21wbGV0ZSA9PSAgdHJ1ZTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gaXRlbXNTdG9yZWQuZmlsdGVyKChpdGVtKSA9PiB7XG4gICAgICAgIHJldHVybiBpdGVtLnByb2plY3QudG9Mb3dlckNhc2UoKSA9PSBwcm9qZWN0O1xuICAgIH0pXG5cbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUb0RvSXRlbSh0aXRsZSwgZGVzY3JpcHRpb24sIGRhdGUsIHByaW9yaXR5LCBub3RlcywgY2hlY2tsaXN0LCBwcm9qZWN0KSB7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aXRsZSxcbiAgICAgICAgZGVzY3JpcHRpb24sIFxuICAgICAgICBkYXRlLCBcbiAgICAgICAgcHJpb3JpdHksIFxuICAgICAgICBub3RlcywgXG4gICAgICAgIGNoZWNrbGlzdCwgXG4gICAgICAgIHByb2plY3QsXG4gICAgICAgIGNvbXBsZXRlOiBmYWxzZVxuICAgIH1cbn0iLCJpbXBvcnQgbWFuYWdlTmV3SXRlbSBmcm9tIFwiLi9tYW5hZ2VOZXdJdGVtXCI7XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWRkTmV3SXRlbURPTSgpIHtcblxuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgICBjb25zdCBhZGRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBjb25zdCBjbG9zZUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNvbnN0IG9iaiA9IHtcbiAgICAgICAgdGFza05hbWU6IHtcbiAgICAgICAgICAgIGlkOiAndGFzay1uYW1lJywgXG4gICAgICAgICAgICBsYWJlbDogJ1Rhc2sgTmFtZTonLFxuICAgICAgICAgICAgdHlwZTogJ3RleHQnLCBcbiAgICAgICAgICAgIGVsOiAnaW5wdXQnXG4gICAgICAgIH0sXG4gICAgICAgIHRhc2tEZXNjOiB7XG4gICAgICAgICAgICBpZDogJ3Rhc2stZGVzYycsIFxuICAgICAgICAgICAgbGFiZWw6ICdUYXNrIERlc2NyaXB0aW9uOicsXG4gICAgICAgICAgICB0eXBlOiAndGV4dCcsIFxuICAgICAgICAgICAgZWw6ICdpbnB1dCdcbiAgICAgICAgfSxcbiAgICAgICAgdGFza0RhdGU6IHtcbiAgICAgICAgICAgIGlkOiAndGFzay1kYXRlJywgXG4gICAgICAgICAgICBsYWJlbDogJ1Rhc2sgRGF0ZTonLFxuICAgICAgICAgICAgdHlwZTogJ2RhdGUnLCBcbiAgICAgICAgICAgIGVsOiAnaW5wdXQnXG4gICAgICAgIH0sXG4gICAgICAgIHRhc2tQcmlvcnR5OiB7XG4gICAgICAgICAgICBpZDogJ3Rhc2stcHJpb3J0eScsIFxuICAgICAgICAgICAgbGFiZWw6ICdUYXNrIFByaW9yaXR5OicsXG4gICAgICAgICAgICB0eXBlOiAnc2VsZWN0JyxcbiAgICAgICAgICAgIGVsOiAnc2VsZWN0JyxcbiAgICAgICAgICAgIG9wdGlvbjogWydsb3cnLCAnbWVkaXVtJywgJ2hpZ2gnLCAnRE8gSVQgTk9XISddXG4gICAgICAgIH0sXG4gICAgICAgIHRhc2tOb3Rlczoge1xuICAgICAgICAgICAgaWQ6ICd0YXNrLW5vdGVzJywgXG4gICAgICAgICAgICBsYWJlbDogJ1Rhc2sgTm90ZXM6JyxcbiAgICAgICAgICAgIHR5cGU6ICd0ZXh0JywgXG4gICAgICAgICAgICBlbDogJ2lucHV0J1xuICAgICAgICB9LFxuICAgICAgICB0YXNrQ2hlY2tsaXN0OiB7XG4gICAgICAgICAgICBpZDogJ3Rhc2stY2hlY2tsaXN0JywgXG4gICAgICAgICAgICBsYWJlbDogJ1Rhc2sgY2hlY2tsaXN0IChjb21tYSBzZXBhcmF0ZWQpOicsXG4gICAgICAgICAgICB0eXBlOiAndGV4dCcsIFxuICAgICAgICAgICAgZWw6ICdpbnB1dCdcbiAgICAgICAgfSxcbiAgICAgICAgdGFza1Byb2plY3Q6IHtcbiAgICAgICAgICAgIGlkOiAndGFzay1wcm9qZWN0JywgXG4gICAgICAgICAgICBsYWJlbDogJ1Rhc2sgUHJvamVjdDonLFxuICAgICAgICAgICAgdHlwZTogJ3NlbGVjdCcsIC8vcHJvYmFibHkgc2hvdWxkIGJlIHNlbGVjdFxuICAgICAgICAgICAgZWw6ICdzZWxlY3QnLCBcbiAgICAgICAgICAgIG9wdGlvbjogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnVE9QLXByb2plY3QtbmF2JykpXG4gICAgICAgIH0sXG4gICAgfVxuICAgIFxuICAgIHRpdGxlLmlubmVyVGV4dCA9ICdBZGQgbmV3IGl0ZW0nOyBcblxuXG5cblxuICAgIGZvciAobGV0IHRhc2sgaW4gb2JqKSB7XG4gICAgICAgIGxldCBpbnB1dCA9IGNyZWF0ZUlucHV0KG9ialt0YXNrXS5pZCwgb2JqW3Rhc2tdLmVsLG9ialt0YXNrXS5sYWJlbCwgb2JqW3Rhc2tdLnR5cGUsIG9ialt0YXNrXS5vcHRpb24pOyBcbiAgICAgICAgZm9ybS5hcHBlbmQoaW5wdXQpXG4gICAgfVxuICAgIFxuICAgIGFkZEJ0bi5pbm5lclRleHQgPSAnQWRkJzsgXG4gICAgYWRkQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBtYW5hZ2VBZGQoKTsgXG4gICAgfSk7XG4gICAgY2xvc2VCdG4uaW5uZXJUZXh0ID0gJ0Nsb3NlJzsgXG4gICAgY2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbG9zZUZvcm0pO1xuXG4gICAgZGl2LmFwcGVuZCh0aXRsZSk7IFxuICAgIGRpdi5hcHBlbmQoZm9ybSk7IFxuICAgIGRpdi5hcHBlbmQoYWRkQnRuKTsgXG4gICAgZGl2LmFwcGVuZChjbG9zZUJ0bik7IFxuICAgIGRpdi5jbGFzc05hbWUgPSAnYWRkLWl0ZW0nOyBcbiAgICBkaXYuaWQgPSAnYWRkLWl0ZW0tZm9ybSdcbiAgICByZXR1cm4gZGl2OyBcbn1cblxuZnVuY3Rpb24gY2xvc2VGb3JtKCkge1xuICAgIGxldCByZW1vdmVJdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZC1pdGVtLWZvcm0nKTtcbiAgICByZW1vdmVJdGVtLnJlbW92ZSgpOyBcbn1cblxuZnVuY3Rpb24gY3JlYXRlSW5wdXQoaWQsZWwsIGxhYmVsVGV4dCwgdHlwZSwgb3B0aW9ucz1bXSApIHtcbiAgICBjb25zdCBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGVsKTsgXG5cbiAgICBsYWJlbC5mb3IgPSBpZDsgXG4gICAgbGFiZWwuYXBwZW5kKGxhYmVsVGV4dCk7IFxuICAgIGlmIChlbCA9PSAnaW5wdXQnKSB7XG4gICAgICAgIGlucHV0LnR5cGUgPSB0eXBlO1xuICAgIH1cblxuICAgIC8vIGhhbmRsZSBkYXRlcyAtIGRlZmF1bHQgdmFsdWVcbiAgICBpZiAodHlwZT09J2RhdGUnKSB7XG4gICAgICAgIGlucHV0LmRlZmF1bHRWYWx1ZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgIGlucHV0LnZhbHVlID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLCAxMCk7XG4gICAgfTtcblxuICAgIGlmIChvcHRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgb3B0aW9ucy5mb3JFYWNoKG9wdGlvbiA9PiB7XG4gICAgICAgICAgICBjb25zdCBvcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTsgXG4gICAgICAgICAgICBvcHQuaW5uZXJUZXh0ID0gb3B0aW9uOyBcbiAgICAgICAgICAgIG9wdC52YWx1ZSA9IG9wdGlvbjsgXG4gICAgICAgICAgICBpbnB1dC5hcHBlbmQob3B0KTsgXG4gICAgICAgIH0pXG4gICAgfVxuICAgIGlucHV0LmlkID0gaWQ7IFxuICAgIGxhYmVsLmFwcGVuZChpbnB1dCk7IFxuXG4gICAgcmV0dXJuIGxhYmVsO1xufVxuXG5mdW5jdGlvbiBtYW5hZ2VBZGQoKSB7XG4gICAgbWFuYWdlTmV3SXRlbSgpOyBcbiAgICAvLyBjbG9zZSBmb3JtIGFmdGVyd2FyZHNcbiAgICBsZXQgcmVtb3ZlSXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtaXRlbS1mb3JtJyk7XG4gICAgcmVtb3ZlSXRlbS5yZW1vdmUoKTsgXG59OyAiLCJpbXBvcnQgQWRkTmV3SXRlbSBmcm9tICcuL0FkZE5ld0l0ZW0nOyBcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbmRlclBhZ2VJdGVtKGl0ZW1zKSB7XG5cbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsgXG4gICAgY29uc3QgbmV3SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOyBcbiAgICBuZXdJdGVtLmlubmVyVGV4dCA9ICcrJ1xuXG4gICAgLy9pZiBpdGVtcyBhcmUgYmxhbmsgcmV0dXJuIG5vdGhpbmc7IFxuICAgIGlmIChpdGVtcy5sZW5ndGggPT0gMCApIHtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZChuZXdJdGVtKTsgXG4gICAgICAgIHJldHVybiBjb250YWluZXJcbiAgICB9ICAgIFxuICAgIFxuICAgIC8vIG5lZWQgdG8gZG8gc29tZXRoaW5nIHRvIG9ubHkgc2hvdyB0YXNrcyB0byBkb1xuICAgIGl0ZW1zLmZvckVhY2goaXRlbT0+IHtcbiAgICAgICAgY29uc3QgaXRlbUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICAgICAgY29uc3QgaXRlbVRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKTsgXG4gICAgICAgIGNvbnN0IGl0ZW1EYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOyBcbiAgICAgICAgY29uc3QgY29tcGxldGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTsgXG5cblxuICAgICAgICBjb21wbGV0ZS5pbm5lclRleHQgPSAnY29tcGxldGUnO1xuICAgICAgICBjb21wbGV0ZS5jbGFzc05hbSA9ICdjb21wbGV0ZS1idG4nOyBcbiAgICAgICAgaXRlbVRpdGxlLmlubmVyVGV4dCA9IGl0ZW0udGl0bGU7XG4gICAgICAgIGl0ZW1EYXRlLmlubmVyVGV4dCA9IGl0ZW0uZGF0ZTsgXG5cbiAgICAgICAgLy8gYnV0dG9uIGV2ZW50IGxpc3RlbmVyXG4gICAgICAgIGNvbXBsZXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb21wbGV0ZVRhc2sodGhpcyk7IFxuICAgICAgICB9KVxuXG5cbiAgICAgICAgaXRlbUNvbnRhaW5lci5hcHBlbmQoaXRlbURhdGUpO1xuICAgICAgICBpdGVtQ29udGFpbmVyLmFwcGVuZChpdGVtVGl0bGUpO1xuICAgICAgICBpdGVtQ29udGFpbmVyLmFwcGVuZChjb21wbGV0ZSk7XG5cblxuICAgICAgICBpdGVtQ29udGFpbmVyLmNsYXNzTmFtZSA9ICdpdGVtLWNvbnRhaW5lcidcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZChpdGVtQ29udGFpbmVyKTsgXG4gICAgfSlcblxuICAgIG5ld0l0ZW0uY2xhc3NOYW1lPVwibmV3LWl0ZW0tYnRuXCJcbiAgICBuZXdJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnN0IG5ld0l0ZW1Qb3BVcCA9IG5ld0l0ZW1CdG4oKTsgXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kKG5ld0l0ZW1Qb3BVcCk7IFxuICAgIH0pO1xuICAgIFxuICAgIGNvbnRhaW5lci5hcHBlbmQobmV3SXRlbSk7IFxuXG4gICAgcmV0dXJuIGNvbnRhaW5lcjsgXG59XG5cbmZ1bmN0aW9uIGNvbXBsZXRlVGFzayhpdGVtKSB7XG4gICAgcmV0dXJuIGl0ZW0uY29tcGxldGUgPSB0cnVlO1xufVxuXG5mdW5jdGlvbiBuZXdJdGVtQnRuKCl7XG4gICAgcmV0dXJuIEFkZE5ld0l0ZW0oKTsgXG59IiwiaW1wb3J0IFRvRG9JdGVtIGZyb20gXCIuL1RvRG9JdGVtXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtYW5hZ2VOZXdJdGVtKCkge1xuXG5cbiAgICBsZXQgaXRlbXNTdG9yZWQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdUT1AtdG9kby1pdGVtcycpKSB8fCBbXTsgXG4gICAgY29uc3QgdGFza1RpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stbmFtZScpLnZhbHVlO1xuICAgIGNvbnN0IHRhc2tEZXNjID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stZGVzYycpLnZhbHVlO1xuICAgIGNvbnN0IHRhc2tEYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stZGF0ZScpLnZhbHVlO1xuICAgIGNvbnN0IHRhc2tQcmlvcnR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stcHJpb3J0eScpLnZhbHVlO1xuICAgIGNvbnN0IHRhc2tOb3RlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLW5vdGVzJykudmFsdWU7XG4gICAgY29uc3QgdGFza0NoZWNrbGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLWNoZWNrbGlzdCcpLnZhbHVlO1xuICAgIGNvbnN0IHRhc2tQcm9qZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stcHJvamVjdCcpLnZhbHVlO1xuXG5cbiAgICBjb25zdCB0YXNrID0gVG9Eb0l0ZW0odGFza1RpdGxlLCB0YXNrRGVzYywgdGFza0RhdGUsIHRhc2tQcmlvcnR5LCB0YXNrTm90ZXMsIHRhc2tDaGVja2xpc3QsIHRhc2tQcm9qZWN0KTsgXG4gICAgY29uc29sZS5sb2codGFzayk7IFxuXG4gICAgLy9nZXQgbG9jYWwgc3RvcmFnZSBvZiBpdGVtc1xuICAgIGl0ZW1zU3RvcmVkLnB1c2godGFzayk7IFxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdUT1AtdG9kby1pdGVtcycsIEpTT04uc3RyaW5naWZ5KGl0ZW1zU3RvcmVkKSk7IFxuICAgIGNvbnNvbGUubG9nKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdUT1AtdG9kby1pdGVtcycpKTsgXG5cbn0iLCJpbXBvcnQgcmVuZGVyUGFnZUl0ZW0gZnJvbSBcIi4vcmVuZGVyUGFnZUl0ZW1cIjtcbmltcG9ydCBUb0RvSXRlbSBmcm9tIFwiLi9Ub0RvSXRlbVwiOyAvLyBmb3IgdGVzdGluZyBwdXJwb3Nlc1xuXG5cbi8vIGZvciB0ZXN0aW5nIHB1cnBvc2VzXG5cbmNvbnN0IGl0ZW1zVGVtcCA9IFtcbiAgICBUb0RvSXRlbSgncmFuZG9tVGl0bGUxJywgJ2JsYWggZGVzYycsICdkYXRlJywgJzEnLCcnLCBbJ2l0ZW0xJywgJ2l0ZW0yJ10pLCBcbiAgICBUb0RvSXRlbSgncmFuZG9tVGl0bGUyJywgJ2JsYWggZGVzYycsICdkYXRlJywgJzEnLCcnLCBbJ2l0ZW0xJywgJ2l0ZW0yJ10pLCBcbiAgICBUb0RvSXRlbSgncmFuZG9tVGl0bGUzJywgJ2JsYWggZGVzYycsICdkYXRlJywgJzEnLCcnLCBbJ2l0ZW0xJywgJ2l0ZW0yJ10pLCBcbiAgICBUb0RvSXRlbSgncmFuZG9tVGl0bGU0JywgJ2JsYWggZGVzYycsICdkYXRlJywgJzEnLCcnLCBbJ2l0ZW0xJywgJ2l0ZW0yJ10pXG5dXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbmRlclBhZ2VDb250ZW50KG5hbWUsIGl0ZW1zKSB7XG5cbiAgICBjb25zdCBwYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IFxuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTsgXG4gICAgY29uc3QgcGFnZUl0ZW1zID0gbmV3IHJlbmRlclBhZ2VJdGVtKGl0ZW1zKTsgXG4gICAgXG4gICAgdGl0bGUuaW5uZXJUZXh0ID0gbmFtZTsgXG4gICAgcGFnZS5pZCA9IFwiY29udGVudC1wYWdlXCI7IFxuICAgIHBhZ2UuY2xhc3NOYW1lID0gJ2NvbnRlbnQnO1xuXG5cbiAgICBwYWdlLmFwcGVuZCh0aXRsZSk7IFxuICAgIHBhZ2UuYXBwZW5kKHBhZ2VJdGVtcyk7XG4gICAgcmV0dXJuIHBhZ2U7IFxufVxuXG5cbiIsImltcG9ydCBHZW5lcmljUGFnZSBmcm9tICcuLi9HZW5lcmljUGFnZS5qcyc7IFxuaW1wb3J0IGZpbHRlckl0ZW1zIGZyb20gJy4uL2ZpbHRlckl0ZW1zLmpzJztcbmltcG9ydCByZW5kZXJQYWdlQ29udGVudCBmcm9tICcuLi9yZW5kZXJQYWdlQ29udGVudCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5hdmlnYXRhdGVTZWN0aW9ucygpIHtcblxuICAgIGxldCBsaXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCduYXYgbGknKTsgXG4gICAgbGlzLmZvckVhY2gobGkgPT4ge1xuICAgICAgICBsaS5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge30pOyBcbiAgICAgICAgbGkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIG5hdlRvTmV3UGFnZShsaS5pbm5lclRleHQpXG4gICAgICAgICAgICBjbGVhckFjdGl2ZShsaSk7XG4gICAgICAgIH0pOyBcbiAgICAgICAgXG4gICAgfSlcblxuXG59XG5cblxuZnVuY3Rpb24gY2xlYXJBY3RpdmUoaXRlbSkge1xuICAgIGxldCBsaXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCduYXYgbGknKTsgXG4gICAgbGlzLmZvckVhY2gobGkgPT4ge1xuICAgICAgICBsaS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKVxuICAgIH0pOyBcbiAgICBpdGVtLmNsYXNzTmFtZSA9ICdhY3RpdmUnO1xufVxuXG5mdW5jdGlvbiBuYXZUb05ld1BhZ2UocGFnZSkge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb250ZW50LXBhZ2UnKS5yZW1vdmUoKTsgXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Jvb3QgLmNvbnRhaW5lcicpLmFwcGVuZChyZW5kZXJQYWdlQ29udGVudChwYWdlLCBmaWx0ZXJJdGVtcyhwYWdlLnRvTG93ZXJDYXNlKCkpKSk7IFxufSIsImltcG9ydCBuYXZpZ2F0YXRlU2VjdGlvbnMgZnJvbSBcIi4vbmF2aWdhdGVTZWN0aW9uc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTmV3UHJvamVjdCgpIHtcbiAgICBjb25zdCBwb3B1cCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7IFxuICAgIGNvbnN0IGxhYmVsU3RyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBjb25zdCBpbnB1dFN0ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7IFxuICAgIGNvbnN0IGFkZEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNvbnN0IGNsb3NlQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcblxuICAgIGlucHV0U3RyLnR5cGUgPSAndGV4dCc7IFxuICAgIGxhYmVsU3RyLmFwcGVuZCgnUHJvamVjdCBuYW1lOicpOyBcbiAgICBsYWJlbFN0ci5hcHBlbmQoaW5wdXRTdHIpOyBcblxuXG4gICAgYWRkQnRuLmlubmVyVGV4dCA9ICdhZGQgcHJvamVjdCc7XG4gICAgY2xvc2VCdG4uaW5uZXJUZXh0ID0gJ2Nsb3NlJztcblxuICAgIGFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFkZEl0ZW0pOyBcbiAgICBjbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsb3NlUG9wdXApOyBcblxuICAgIHRpdGxlLmlubmVyVGV4dCA9ICdBZGQgbmV3IHByb2plY3QnXG5cbiAgICBwb3B1cC5hcHBlbmQodGl0bGUpO1xuICAgIHBvcHVwLmFwcGVuZChsYWJlbFN0cik7IFxuICAgIHBvcHVwLmFwcGVuZChhZGRCdG4pOyBcbiAgICBwb3B1cC5hcHBlbmQoY2xvc2VCdG4pOyBcbiAgICBwb3B1cC5pZCA9ICdwcm9qZWN0LXBvcHVwJ1xuICAgIFxuXG4gICAgcmV0dXJuIHBvcHVwOyBcblxufVxuXG5cbmZ1bmN0aW9uIGFkZEl0ZW0oKSB7XG4gICAgY29uc29sZS5sb2coJ2FkZCBpdGVtIHRvIHByb2plY3RzJyk7IFxuICAgIGxldCBpdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTsgXG4gICAgaXRlbS5pbm5lclRleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdC1wb3B1cCBpbnB1dCcpLnZhbHVlOyBcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdC1uYXYnKS5hcHBlbmQoaXRlbSk7IFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0LXBvcHVwJykucmVtb3ZlKCk7IFxuICAgIHVwZGF0ZUxvY2FsU3RvcmFnZSgpOyBcbiAgICBuYXZpZ2F0YXRlU2VjdGlvbnMoKTsgXG59XG5cbmZ1bmN0aW9uIGNsb3NlUG9wdXAoKSB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2plY3QtcG9wdXAnKS5yZW1vdmUoKTsgXG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUxvY2FsU3RvcmFnZSgpIHtcbiAgICBjb25zdCBsaXMgPSAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI3Byb2plY3QtbmF2IGxpJyk7XG4gICAgbGV0IGxpVG9TdG9yYWdlID0gW107IFxuICAgIGxpcy5mb3JFYWNoKGxpID0+IHtcbiAgICAgICAgbGlUb1N0b3JhZ2UucHVzaChsaS5pbm5lclRleHQpOyBcbiAgICB9KSBcbiAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ1RPUC1wcm9qZWN0LW5hdicpKSB7XG4gICAgICAgIGNvbnN0IGFscmVhZHlTdG9yZWQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdUT1AtcHJvamVjdC1uYXYnKSk7IFxuICAgICAgICBhbHJlYWR5U3RvcmVkLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICBpZiAobGlUb1N0b3JhZ2UuaW5kZXhPZihpdGVtKSA9PSAtMSkge1xuICAgICAgICAgICAgICAgIGxpVG9TdG9yYWdlLnB1c2goaXRlbSk7XG4gICAgICAgICAgICB9IFxuICAgICAgICB9KVxuICAgIH1cbiAgICBcbiAgICAvL2NsZWFyIHRoZSBzdG9yYWdlIHRvIHN0b3AgZHVwaW5nXG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ1RPUC1wcm9qZWN0LW5hdicpOyBcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnVE9QLXByb2plY3QtbmF2JyxKU09OLnN0cmluZ2lmeShsaVRvU3RvcmFnZSkpXG59IiwiaW1wb3J0IE5ld1Byb2plY3QgZnJvbSBcIi4vTmV3UHJvamVjdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOYXZpZ2F0aW9uRE9NKCkge1xuICAgIGNvbnN0IG5hdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ25hdicpO1xuICAgIGNvbnN0IHVsU3RhdGljID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKSBcbiAgICBjb25zdCBob21lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTsgXG4gICAgY29uc3QgdG9kYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgIGNvbnN0IHdlZWsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgIGNvbnN0IGNvbXBsZXRlVGFza3MgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgIGNvbnN0IHVsUHJvamVjdHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpOyBcbiAgICBjb25zdCBhZGRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTsgXG4gICAgY29uc3QgcHJvamVjdFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTsgXG4gICAgY29uc3QgZGVsZXRlU3RvcmFnZUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOyBcblxuXG4gICAgcHJvamVjdFRpdGxlLmlubmVyVGV4dCA9ICdQcm9qZWN0cydcblxuICAgIC8vIHN0YXRpYyB1bCBcbiAgICBob21lLmlubmVyVGV4dCA9ICdIb21lJztcbiAgICB0b2RheS5pbm5lclRleHQgPSAnVG9kYXknO1xuICAgIHdlZWsuaW5uZXJUZXh0ID0gJ1dlZWsnO1xuICAgIGNvbXBsZXRlVGFza3MuaW5uZXJUZXh0ID0gJ0NvbXBsZXRlZCc7XG4gICAgXG5cbiAgICB1bFN0YXRpYy5hcHBlbmQoaG9tZSk7XG4gICAgdWxTdGF0aWMuYXBwZW5kKHRvZGF5KTtcbiAgICB1bFN0YXRpYy5hcHBlbmQod2Vlayk7XG4gICAgdWxTdGF0aWMuYXBwZW5kKGNvbXBsZXRlVGFza3MpO1xuXG5cbiAgICAvLyBkeW5hbWljIHByb2plY3RzXG4gICAgLy93aWxsIG5lZWQgdG8gbG9vayBmb3IgbG9jYWwgc3RvcmFnZSBoZXJlIGxhdGVyXG5cbiAgICB1bFByb2plY3RzLmFwcGVuZChwcm9qZWN0VGl0bGUpOyBcbiAgICB1bFByb2plY3RzLmlkID0gJ3Byb2plY3QtbmF2J1xuXG4gICAgLy9jaGVjayBsb2NhbCBzdG9yYWdlIGZvciBwcm9qZWN0c1xuICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnVE9QLXByb2plY3QtbmF2JykpIHtcbiAgICAgICAgY29uc3QgYWxyZWFkeVN0b3JlZCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ1RPUC1wcm9qZWN0LW5hdicpKTtcblxuICAgICAgICBhbHJlYWR5U3RvcmVkLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7IFxuICAgICAgICAgICAgbGkuaW5uZXJUZXh0ID0gaXRlbTsgXG4gICAgICAgICAgICB1bFByb2plY3RzLmFwcGVuZChsaSk7IFxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGFkZEJ0bi5pbm5lclRleHQgPSAnYWRkIHByb2plY3QnO1xuICAgIGFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgYWRkSXRlbSgpXG4gICAgfSlcblxuICAgIGRlbGV0ZVN0b3JhZ2VCdG4uaW5uZXJUZXh0ID0gJ3dhcm5pbmc6IGRlbGV0ZSBhbGwgc3Ryb2FnZT8nOyBcbiAgICBkZWxldGVTdG9yYWdlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdUT1AtcHJvamVjdC1uYXYnKTsgXG4gICAgICAgIC8vIHJlZnJlc2ggcGFnZSAtIGlzIHRoaXMgYSBnb29kIGlkZWE/IFxuICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsgXG4gICAgfSlcbiAgICBkZWxldGVTdG9yYWdlQnRuLmNsYXNzTmFtZT0nd2FybmluZy1idG4nXG5cbiAgICBuYXYuYXBwZW5kKHVsU3RhdGljKVxuICAgIG5hdi5hcHBlbmQodWxQcm9qZWN0cyk7IFxuICAgIG5hdi5hcHBlbmQoYWRkQnRuKTtcbiAgICBuYXYuYXBwZW5kKGRlbGV0ZVN0b3JhZ2VCdG4pOyBcbiAgICBcbiAgICByZXR1cm4gbmF2OyBcbn1cblxuZnVuY3Rpb24gYWRkSXRlbSgpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcm9vdCcpLmFwcGVuZChOZXdQcm9qZWN0KCkpOyBcbn1cbiIsImltcG9ydCBOYXZpZ2F0aW9uRE9NIGZyb20gXCIuL25hdmlnYXRpb24vbmF2aWdhdGlvbkRPTVwiO1xuaW1wb3J0IG5hdmlnYXRhdGVTZWN0aW9ucyBmcm9tIFwiLi9uYXZpZ2F0aW9uL25hdmlnYXRlU2VjdGlvbnNcIjtcbmltcG9ydCBmaWx0ZXJJdGVtcyBmcm9tIFwiLi9maWx0ZXJJdGVtc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2VuZXJpY1BhZ2UocHJvamVjdCwgbmFtZSwgaXRlbXMpIHtcblxuXG4gICAgY29uc3Qgcm9vdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyb290Jyk7XG4gICAgY29uc3QgcGFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoZWFkZXInKTsgXG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpOyBcbiAgICBjb25zdCBzaWRlYmFyID0gbmV3IE5hdmlnYXRpb25ET00oKTsgXG4gICAgY29uc3QgY29udGVudCA9IG5ldyBwcm9qZWN0KG5hbWUsIGZpbHRlckl0ZW1zKG5hbWUpKTsgXG5cbiAgICB0aXRsZS5pbm5lclRleHQgPSAnVG8gRG8gTGlzdCB8IFRoZSBPZGluIFByb2plY3QnXG5cbiAgICBoZWFkZXIuYXBwZW5kKHRpdGxlKTsgXG4gICAgcGFnZS5jbGFzc05hbWUgPSAnY29udGFpbmVyJzsgXG5cblxuICAgIHNpZGViYXIuY2xhc3NOYW1lID0gJ25hdmlnYXRpb24nOyBcblxuICAgIHBhZ2UuYXBwZW5kKGhlYWRlcik7XG4gICAgcGFnZS5hcHBlbmQoc2lkZWJhcik7IFxuICAgIHBhZ2UuYXBwZW5kKGNvbnRlbnQpOyBcblxuICAgIHJvb3QudGV4dENvbnRlbnQgPSAnJzsgXG4gICAgcm9vdC5hcHBlbmQocGFnZSk7IFxuICAgIG5hdmlnYXRhdGVTZWN0aW9ucygpOyBcbn0iLCJpbXBvcnQgJy4vc2Fzcy9tYWluLnNjc3MnOyBcbmltcG9ydCBHZW5lcmljUGFnZSBmcm9tICcuL0dlbmVyaWNQYWdlLmpzJzsgXG5pbXBvcnQgcmVuZGVyUGFnZUNvbnRlbnQgZnJvbSAnLi9yZW5kZXJQYWdlQ29udGVudCc7XG5cbkdlbmVyaWNQYWdlKHJlbmRlclBhZ2VDb250ZW50LCAnaG9tZScpXG5cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZmlsdGVySXRlbXMiLCJwcm9qZWN0IiwiaXRlbXNTdG9yZWQiLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJmaWx0ZXIiLCJkYXRlIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic3Vic3RyaW5nIiwibm93IiwibGFzdFdlZWsiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImNvbXBsZXRlIiwidG9Mb3dlckNhc2UiLCJUb0RvSXRlbSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJwcmlvcml0eSIsIm5vdGVzIiwiY2hlY2tsaXN0IiwiY2xvc2VGb3JtIiwiY3JlYXRlSW5wdXQiLCJlbCIsImxhYmVsVGV4dCIsInR5cGUiLCJsYWJlbCIsImlucHV0IiwiZm9yIiwiYXBwZW5kIiwiZGVmYXVsdFZhbHVlIiwidmFsdWUiLCJmb3JFYWNoIiwib3B0aW9uIiwib3B0IiwiaW5uZXJUZXh0IiwicmVuZGVyUGFnZUl0ZW0iLCJpdGVtcyIsImNvbnRhaW5lciIsIm5ld0l0ZW0iLCJpdGVtQ29udGFpbmVyIiwiaXRlbVRpdGxlIiwiaXRlbURhdGUiLCJjbGFzc05hbSIsImFkZEV2ZW50TGlzdGVuZXIiLCJjb21wbGV0ZVRhc2siLCJjbGFzc05hbWUiLCJuZXdJdGVtUG9wVXAiLCJkaXYiLCJmb3JtIiwiYWRkQnRuIiwiY2xvc2VCdG4iLCJ0YXNrTmFtZSIsInRhc2tEZXNjIiwidGFza0RhdGUiLCJ0YXNrUHJpb3J0eSIsInRhc2tOb3RlcyIsInRhc2tDaGVja2xpc3QiLCJ0YXNrUHJvamVjdCIsInRhc2siLCJnZXRFbGVtZW50QnlJZCIsImNvbnNvbGUiLCJsb2ciLCJzZXRJdGVtIiwibWFuYWdlTmV3SXRlbSIsImJvZHkiLCJyZW5kZXJQYWdlQ29udGVudCIsIm5hbWUiLCJwYWdlIiwicGFnZUl0ZW1zIiwibmF2aWdhdGF0ZVNlY3Rpb25zIiwicXVlcnlTZWxlY3RvckFsbCIsImxpIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImNsYXNzTGlzdCIsImFkZEl0ZW0iLCJsaXMiLCJsaVRvU3RvcmFnZSIsImluZGV4T2YiLCJyZW1vdmVJdGVtIiwidXBkYXRlTG9jYWxTdG9yYWdlIiwiY2xvc2VQb3B1cCIsIk5hdmlnYXRpb25ET00iLCJuYXYiLCJ1bFN0YXRpYyIsImhvbWUiLCJ0b2RheSIsIndlZWsiLCJjb21wbGV0ZVRhc2tzIiwidWxQcm9qZWN0cyIsInByb2plY3RUaXRsZSIsImRlbGV0ZVN0b3JhZ2VCdG4iLCJwb3B1cCIsImxhYmVsU3RyIiwiaW5wdXRTdHIiLCJOZXdQcm9qZWN0IiwibG9jYXRpb24iLCJyZWxvYWQiLCJyb290IiwiaGVhZGVyIiwic2lkZWJhciIsInRleHRDb250ZW50IiwiR2VuZXJpY1BhZ2UiXSwic291cmNlUm9vdCI6IiJ9