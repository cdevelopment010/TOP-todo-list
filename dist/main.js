(()=>{"use strict";var e={151:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,'*{margin:0;padding:0;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}.container{min-height:100vh;display:grid;grid-template-columns:1fr 4fr;grid-template-rows:.5fr 4fr;grid-template-areas:"nav header" "nav content"}.container header{grid-area:header}.container header h1{text-align:center}.container .navigation{font-size:2rem;height:100%;background-color:#3f3e49;color:#fff;grid-area:nav;padding:1.5rem;align-self:center;display:flex;flex-direction:column;gap:25px}.container .navigation button{border-radius:5px;border:1px solid transparent;cursor:pointer;text-transform:capitalize}.container .navigation button:hover{border:1px solid #000;font-weight:bold}.container .navigation .warning-btn{background-color:#c30;color:#fff;font-weight:bold;justify-self:flex-end;text-transform:uppercase}.container .navigation .warning-btn:hover{background-color:#e95827}.container .content{grid-area:content;display:grid;justify-items:center;gap:2rem;grid-template-rows:max-content 1fr}.container .content>div{width:90%}.container ul{display:flex;flex-direction:column;gap:10px}.container li{list-style-type:none;cursor:pointer;position:relative;margin-left:1rem}.container li:hover:before{position:absolute;content:"//";font-weight:bold;left:-1rem;top:0}.container .active{font-weight:bold}.container .active:before{position:absolute;content:"//";font-weight:bold;left:-1rem;top:0}.add-item,#project-popup{position:absolute;top:1rem;left:1rem;right:1rem;bottom:1rem;background-color:#fff;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);padding:2rem}.add-item form,#project-popup form{margin:1rem 0;display:grid;gap:20px}.add-item form label,#project-popup form label{display:grid}.add-item button,#project-popup button{margin:1rem 1rem 1rem 0}.item-container{display:grid;grid-template-columns:1fr 3fr 1fr 1fr;gap:3px;padding:1rem;margin-bottom:1rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25)}.completed-task{background-color:rgba(63,62,73,.25);text-decoration:line-through}.single-item-display{padding:2rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);width:80%;margin:1rem auto;display:grid;grid-template-areas:"title . date" "priority . . " "desc desc desc" "checklist . . " "notes . . " "btns btns btns";gap:20px}.single-item-display .title{grid-area:title}.single-item-display .date{grid-area:date}.single-item-display .priority{grid-area:priority}.single-item-display .desc{grid-area:desc}.single-item-display .checklist{grid-area:checklist}.single-item-display .notes{grid-area:notes}.single-item-display .btn-group{grid-area:btns;justify-self:center;display:flex;gap:20px}',"",{version:3,sources:["webpack://./src/sass/main.scss","webpack://./src/sass/variables.scss"],names:[],mappings:"AAEA,EACI,QAAA,CACA,SAAA,CACA,0BAAA,CACA,6BAAA,CACA,qBAAA,CAIJ,WAEI,gBAAA,CACA,YAAA,CACA,6BAAA,CACA,2BAAA,CACA,8CAAA,CAGA,kBACI,gBAAA,CACA,qBACI,iBAAA,CAIR,uBACI,cAAA,CACA,WAAA,CACA,wBC9BQ,CD+BR,UC9BQ,CD+BR,aAAA,CACA,cAAA,CACA,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,QAAA,CAGA,8BACI,iBAAA,CACA,4BAAA,CACA,cAAA,CACA,yBAAA,CAEA,oCACI,qBAAA,CACA,gBAAA,CAKR,oCACI,qBCpDE,CDqDF,UAAA,CACA,gBAAA,CACA,qBAAA,CACA,wBAAA,CAEA,0CACI,wBC1DA,CDiEZ,oBACI,iBAAA,CACA,YAAA,CACA,oBAAA,CACA,QAAA,CACA,kCAAA,CAEA,wBACI,SAAA,CAIR,cACI,YAAA,CACA,qBAAA,CACA,QAAA,CAGJ,cACI,oBAAA,CACA,cAAA,CACA,iBAAA,CACA,gBAAA,CAGI,2BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,UAAA,CACA,KAAA,CAMZ,mBACI,gBAAA,CACA,0BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,UAAA,CACA,KAAA,CASZ,yBACI,iBAAA,CACA,QAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,qBC7HY,CD8HZ,uCAAA,CACA,YAAA,CAGA,mCACI,aAAA,CACA,YAAA,CACA,QAAA,CACA,+CACI,YAAA,CAIR,uCACI,uBAAA,CAIR,gBACI,YAAA,CACA,qCAAA,CACA,OAAA,CACA,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,uCAAA,CAGJ,gBACI,mCAAA,CACA,4BAAA,CAGJ,qBACI,YAAA,CACA,kBAAA,CACA,uCAAA,CACA,SAAA,CACA,gBAAA,CAEA,YAAA,CACA,kHAAA,CAOA,QAAA,CAEA,4BACI,eAAA,CAGJ,2BACI,cAAA,CAGJ,+BACI,kBAAA,CAEJ,2BACI,cAAA,CAEJ,gCACI,mBAAA,CAEJ,4BACI,eAAA,CAEJ,gCACI,cAAA,CACA,mBAAA,CACA,YAAA,CACA,QAAA",sourcesContent:['@import \'./variables.scss\'; \n\n* {\n    margin: 0; \n    padding: 0; \n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box; \n    box-sizing: border-box;\n}\n\n\n.container {\n\n    min-height: 100vh; \n    display: grid; \n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 0.5fr 4fr;\n    grid-template-areas: "nav header"\n        "nav content"\n    ;\n    header {\n        grid-area: header;\n        h1 {\n            text-align: center;\n        }\n    }\n\n    .navigation {\n        font-size: 2rem;\n        height: 100%; \n        background-color:$primary-col-1; \n        color: $primary-col-2; \n        grid-area: nav;\n        padding: 1.5rem;\n        align-self: center;\n        display: flex; \n        flex-direction: column;\n        gap: 25px;\n\n\n        button {\n            border-radius: 5px; \n            border: 1px solid transparent; \n            cursor: pointer;\n            text-transform: capitalize;\n\n            &:hover {\n                border: 1px solid black;\n                font-weight: bold;\n            }\n        }\n\n\n        .warning-btn {\n            background-color: $warning-col;\n            color: white; \n            font-weight: bold;  \n            justify-self: flex-end;\n            text-transform: uppercase;\n\n            &:hover {\n                background-color: $warning-col-2;\n            }\n        }\n    }\n\n    \n\n    .content {\n        grid-area: content;\n        display: grid; \n        justify-items: center;\n        gap: 2rem;\n        grid-template-rows: max-content 1fr;\n\n        >div {\n            width: 90%;\n        }\n    }\n\n    ul {\n        display: flex; \n        flex-direction: column;\n        gap: 10px; \n    }\n\n    li {\n        list-style-type: none;\n        cursor: pointer;\n        position: relative;\n        margin-left: 1rem; \n\n        &:hover {\n            &:before {\n                position: absolute; \n                content: \'//\'; \n                font-weight: bold;\n                left: -1rem; \n                top: 0; \n\n            }\n        }\n    }\n\n    .active {\n        font-weight: bold;\n        &:before {\n            position: absolute; \n            content: \'//\'; \n            font-weight: bold;\n            left: -1rem; \n            top: 0; \n\n        }\n    }\n\n\n}\n\n\n.add-item, #project-popup  {\n    position: absolute; \n    top: 1rem; \n    left: 1rem; \n    right: 1rem; \n    bottom: 1rem; \n    background-color: $primary-col-2;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    padding: 2rem;\n\n\n    form {\n        margin: 1rem 0;\n        display: grid; \n        gap: 20px; \n        label {\n            display: grid; \n        }\n    }\n\n    button {\n        margin: 1rem 1rem 1rem 0;\n    }\n}\n\n.item-container {\n    display: grid; \n    grid-template-columns: 1fr 3fr 1fr 1fr;\n    gap: 3px;\n    padding: 1rem; \n    margin-bottom: 1rem; \n    border-radius: 10px;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n}\n\n.completed-task {\n    background-color: rgba($primary-col-1,0.25);\n    text-decoration: line-through;\n}\n\n.single-item-display {\n    padding: 2rem; \n    border-radius: 10px; \n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    width: 80%; \n    margin: 1rem auto;\n\n    display: grid;\n    grid-template-areas: "title . date"\n        "priority . . "\n        "desc desc desc"\n        "checklist . . "\n        "notes . . "\n        "btns btns btns"\n    ;\n    gap: 20px; \n\n    .title {\n        grid-area: title; \n    }\n\n    .date {\n        grid-area: date;\n\n    }\n    .priority {\n        grid-area: priority;\n    }\n    .desc {\n        grid-area: desc; \n    }\n    .checklist {\n        grid-area: checklist; \n    }\n    .notes {\n        grid-area: notes;\n    }\n    .btn-group {\n        grid-area: btns; \n        justify-self: center;\n        display: flex; \n        gap: 20px; \n    }\n    \n}',"$primary-col-1: rgb(63, 62, 73); \n$primary-col-2: rgb(255,255,255); \n$warning-col: rgb(204, 51, 0); \n$warning-col-2: rgb(233, 88, 39); "],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var d=0;d<e.length;d++){var A=[].concat(e[d]);o&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),t.push(A))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var l=e[c],d=o.base?l[0]+o.base:l[0],A=a[d]||0,s="".concat(d," ").concat(A);a[d]=A+1;var p=n(s),m={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var u=r(m,o);o.byIndex=c,t.splice(c,0,{identifier:s,updater:u,references:1})}i.push(s)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var l=o(e,r),d=0;d<a.length;d++){var A=n(a[d]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}a=l}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),c=n(565),l=n.n(c),d=n(216),A=n.n(d),s=n(589),p=n.n(s),m=n(151),u={};function g(e){let t=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];if("home"==e)return t.filter((e=>0==e.complete));if("today"==e)return t.filter((e=>e.date==(new Date).toISOString().substring(0,10)&&0==e.complete));if("week"==e){const e=new Date;let n=new Date(e.getFullYear(),e.getMonth(),e.getDate()-7).toISOString().substring(0,10);return t.filter((e=>e.date>=n&&0==e.complete))}return"completed"==e?t.filter((e=>1==e.complete)):"late"==e?t.filter((e=>e.date<(new Date).toISOString().substring(0,10)&&0==e.complete)):t.filter((t=>t.project.toLowerCase()==e&&0==t.complete))}function C(e,t,n,o,r,a,i){return{title:e,description:t,date:n,priority:o,notes:r,checklist:a,project:i,complete:!1}}function f(e){const t=document.createElement("div"),n=document.createElement("h2"),o=document.createElement("form"),r=document.createElement("button"),a=document.createElement("button");let i=(JSON.parse(localStorage.getItem("TOP-todo-items"))||[]).filter((t=>t.title===e))[0]||"";const c={taskName:{id:"task-name",label:"Task Name:",type:"text",el:"input",values:i.title||""},taskDesc:{id:"task-desc",label:"Task Description:",type:"text",el:"input",values:i.description||""},taskDate:{id:"task-date",label:"Task Date:",type:"date",el:"input",values:i.date||""},taskPriorty:{id:"task-priorty",label:"Task Priority:",type:"select",el:"select",option:["low","medium","high","DO IT NOW!"],values:i.priority||""},taskNotes:{id:"task-notes",label:"Task Notes:",type:"text",el:"input",values:i.notes||""},taskChecklist:{id:"task-checklist",label:"Task checklist (comma separated):",type:"text",el:"input",values:i.checklist||""},taskProject:{id:"task-project",label:"Task Project:",type:"select",el:"select",option:JSON.parse(localStorage.getItem("TOP-project-nav")),values:i.project||""}};if(n.innerText="Add new item",null!=e){for(let e in c){let t=v(c[e].id,c[e].el,c[e].label,c[e].type,c[e].option,c[e].values);o.append(t)}let e=v("task-complete","select","Completed?","select",[!1,!0],!1);o.append(e),console.log(o)}else for(let e in c){let t=v(c[e].id,c[e].el,c[e].label,c[e].type,c[e].option);o.append(t)}return r.innerText="Add",r.addEventListener("click",(()=>{null!=e?function(e){let t=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];t.map((t=>{t.title===e&&(t.title=document.getElementById("task-name").value,t.description=document.getElementById("task-desc").value,t.date=document.getElementById("task-date").value,t.priorty=document.getElementById("task-priorty").value,t.notes=document.getElementById("task-notes").value,t.checklist=document.getElementById("task-checklist").value,t.project=document.getElementById("task-project").value,t.complete=1==document.getElementById("task-complete").value),console.log(t.title,"|",t.complete)})),localStorage.setItem("TOP-todo-items",JSON.stringify(t)),document.querySelector("#add-item-form").remove()}(e):(function(){let e=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];const t=C(document.getElementById("task-name").value,document.getElementById("task-desc").value,document.getElementById("task-date").value,document.getElementById("task-priorty").value,document.getElementById("task-notes").value,document.getElementById("task-checklist").value,document.getElementById("task-project").value);console.log(t),e.push(t),localStorage.setItem("TOP-todo-items",JSON.stringify(e)),console.log(localStorage.getItem("TOP-todo-items"))}(),document.querySelector("#add-item-form").remove())})),a.innerText="Close",a.addEventListener("click",b),t.append(n),t.append(o),t.append(r),t.append(a),t.className="add-item",t.id="add-item-form",t}function b(){document.querySelector("#add-item-form").remove()}function v(e,t,n,o,r=[],a=""){const i=document.createElement("label"),c=document.createElement(t);return i.for=e,i.append(n),"input"==t&&(c.type=o),"date"==o&&(c.defaultValue=new Date,c.value=(new Date).toISOString().substring(0,10)),r.length>0&&r.forEach((e=>{const t=document.createElement("option");t.innerText=e,t.value=e,c.append(t)})),c.id=e,""!=a&&(c.value=a),i.append(c),i}function y(e){const t=document.createElement("div"),n=document.createElement("button");return n.innerText="+",0==e.length?(t.append(n),t):(e.forEach((e=>{const n=document.createElement("div"),o=document.createElement("h3"),r=document.createElement("span"),a=document.createElement("button"),i=document.createElement("button");a.innerText="complete",a.classNam="complete-btn",i.innerText="View Task",i.classNam="view-btn",o.innerText=e.title,r.innerText=e.date,a.addEventListener("click",(e=>{e.stopPropagation(),function(e){console.log(e),function(e){let t=JSON.parse(localStorage.getItem("TOP-todo-items"));t.map((t=>{t.title===e&&(t.complete=!0)})),localStorage.setItem("TOP-todo-items",JSON.stringify(t))}(e),location.reload()}(o.innerText)})),i.addEventListener("click",(function(e){e.stopPropagation(),console.log("view btn clicked")}),!0),n.append(r),n.append(o),n.append(a),n.append(i),n.className="item-container",e.complete&&n.classList.add("completed-task"),n.addEventListener("click",h),t.append(n)})),n.className="new-item-btn",n.addEventListener("click",(function(){const e=f();document.body.append(e)})),t.append(n),t)}function h(){const e=f(this.querySelector("h3").innerText);document.body.append(e)}function x(e,t){const n=document.createElement("div"),o=document.createElement("h2"),r=new y(t);return o.innerText=e,n.id="content-page",n.className="content",n.append(o),n.append(r),n}function k(){document.querySelectorAll("nav li").forEach((e=>{e.removeEventListener("click",(function(){})),e.addEventListener("click",(function(){var t,n;t=e.innerText,document.querySelector("#content-page").remove(),document.querySelector("#root .container").append(x(t,g(t.toLowerCase()))),n=e,document.querySelectorAll("nav li").forEach((e=>{e.classList.remove("active")})),n.className="active"}))}))}function E(){console.log("add item to projects");let e=document.createElement("li");e.innerText=document.querySelector("#project-popup input").value;const t=document.querySelectorAll("#project-nav li");let n=!0;t.forEach((t=>{t.innerText.toLowerCase()==e.innerText.toLowerCase()&&(n=!1)})),n?(document.querySelector("#project-nav").append(e),document.querySelector("#project-popup").remove(),function(){const e=document.querySelectorAll("#project-nav li");let t=[];e.forEach((e=>{t.push(e.innerText)})),localStorage.removeItem("TOP-project-nav"),localStorage.setItem("TOP-project-nav",JSON.stringify(t))}(),k()):alert("project name already exists")}function B(){document.querySelector("#project-popup").remove()}function I(){const e=document.createElement("nav"),t=document.createElement("ul"),n=document.createElement("li"),o=document.createElement("li"),r=document.createElement("li"),a=document.createElement("li"),i=document.createElement("li"),c=document.createElement("ul"),l=document.createElement("button"),d=document.createElement("h2"),A=document.createElement("button");return d.innerText="Projects",n.innerText="Home",o.innerText="Today",r.innerText="Week",a.innerText="Completed",i.innerText="Late",t.append(n),t.append(o),t.append(r),t.append(a),t.append(i),c.append(d),c.id="project-nav",localStorage.getItem("TOP-project-nav")&&JSON.parse(localStorage.getItem("TOP-project-nav")).forEach((e=>{const t=document.createElement("li");t.innerText=e,c.append(t)})),l.innerText="add project",l.addEventListener("click",(()=>{document.querySelector("#root").append(function(){const e=document.createElement("div"),t=document.createElement("h2"),n=document.createElement("label"),o=document.createElement("input"),r=document.createElement("button"),a=document.createElement("button");return o.type="text",n.append("Project name:"),n.append(o),r.innerText="add project",a.innerText="close",r.addEventListener("click",E),a.addEventListener("click",B),t.innerText="Add new project",e.append(t),e.append(n),e.append(r),e.append(a),e.id="project-popup",e}())})),A.innerText="warning: delete all stroage?",A.addEventListener("click",(function(){localStorage.removeItem("TOP-project-nav"),localStorage.removeItem("TOP-todo-project"),location.reload()})),A.className="warning-btn",e.append(t),e.append(c),e.append(l),e.append(A),e}u.styleTagTransform=p(),u.setAttributes=l(),u.insert=i().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=A(),t()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals,C("randomTitle1","blah desc","date","1","",["item1","item2"]),C("randomTitle2","blah desc","date","1","",["item1","item2"]),C("randomTitle3","blah desc","date","1","",["item1","item2"]),C("randomTitle4","blah desc","date","1","",["item1","item2"]),function(e,t,n){const o=document.querySelector("#root"),r=document.createElement("div"),a=document.createElement("header"),i=document.createElement("h1"),c=new I,l=new e(t,g(t));i.innerText="To Do List | The Odin Project",a.append(i),r.className="container",c.className="navigation",r.append(a),r.append(c),r.append(l),o.textContent="",o.append(r),k()}(x,"home")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,