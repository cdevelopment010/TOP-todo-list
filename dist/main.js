(()=>{"use strict";var e={151:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,'*{margin:0;padding:0;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}.container{min-height:100vh;display:grid;grid-template-columns:1fr 4fr;grid-template-rows:.5fr 4fr;grid-template-areas:"nav header" "nav content"}.container header{grid-area:header}.container header h1{text-align:center}.container .navigation{font-size:2rem;height:100%;background-color:#3f3e49;color:#fff;grid-area:nav;padding:1.5rem;align-self:center;display:flex;flex-direction:column;gap:25px}.container .navigation button{border-radius:5px;border:1px solid transparent;cursor:pointer;text-transform:capitalize}.container .navigation button:hover{border:1px solid #000;font-weight:bold}.container .navigation .warning-btn{background-color:#c30;color:#fff;font-weight:bold;justify-self:flex-end;text-transform:uppercase}.container .navigation .warning-btn:hover{background-color:#e95827}.container .content{grid-area:content;display:grid;justify-items:center;gap:2rem;grid-template-rows:max-content 1fr}.container .content>div{width:90%}.container ul{display:flex;flex-direction:column;gap:10px}.container li{list-style-type:none;cursor:pointer;position:relative;margin-left:1rem}.container li:hover:before{position:absolute;content:"//";font-weight:bold;left:-1rem;top:0}.container .active{font-weight:bold}.container .active:before{position:absolute;content:"//";font-weight:bold;left:-1rem;top:0}.add-item,#project-popup{position:absolute;top:1rem;left:1rem;right:1rem;bottom:1rem;background-color:#fff;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);padding:2rem}.add-item form,#project-popup form{margin:1rem 0;display:grid;gap:20px}.add-item form label,#project-popup form label{display:grid}.add-item button,#project-popup button{margin:1rem 1rem 1rem 0}.item-container{display:grid;grid-template-columns:1fr 3fr 1fr;padding:1rem;margin-bottom:1rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25)}.completed-task{background-color:rgba(63,62,73,.25);text-decoration:line-through}.single-item-display{padding:2rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);width:80%;margin:1rem auto;display:grid;grid-template-areas:"title . date" "priority . . " "desc desc desc" "checklist . . " "notes . . " "btns btns btns";gap:20px}.single-item-display .title{grid-area:title}.single-item-display .date{grid-area:date}.single-item-display .priority{grid-area:priority}.single-item-display .desc{grid-area:desc}.single-item-display .checklist{grid-area:checklist}.single-item-display .notes{grid-area:notes}.single-item-display .btn-group{grid-area:btns;justify-self:center;display:flex;gap:20px}',"",{version:3,sources:["webpack://./src/sass/main.scss","webpack://./src/sass/variables.scss"],names:[],mappings:"AAEA,EACI,QAAA,CACA,SAAA,CACA,0BAAA,CACA,6BAAA,CACA,qBAAA,CAIJ,WAEI,gBAAA,CACA,YAAA,CACA,6BAAA,CACA,2BAAA,CACA,8CAAA,CAGA,kBACI,gBAAA,CACA,qBACI,iBAAA,CAIR,uBACI,cAAA,CACA,WAAA,CACA,wBC9BQ,CD+BR,UC9BQ,CD+BR,aAAA,CACA,cAAA,CACA,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,QAAA,CAGA,8BACI,iBAAA,CACA,4BAAA,CACA,cAAA,CACA,yBAAA,CAEA,oCACI,qBAAA,CACA,gBAAA,CAKR,oCACI,qBCpDE,CDqDF,UAAA,CACA,gBAAA,CACA,qBAAA,CACA,wBAAA,CAEA,0CACI,wBC1DA,CDiEZ,oBACI,iBAAA,CACA,YAAA,CACA,oBAAA,CACA,QAAA,CACA,kCAAA,CAEA,wBACI,SAAA,CAIR,cACI,YAAA,CACA,qBAAA,CACA,QAAA,CAGJ,cACI,oBAAA,CACA,cAAA,CACA,iBAAA,CACA,gBAAA,CAGI,2BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,UAAA,CACA,KAAA,CAMZ,mBACI,gBAAA,CACA,0BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,UAAA,CACA,KAAA,CASZ,yBACI,iBAAA,CACA,QAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,qBC7HY,CD8HZ,uCAAA,CACA,YAAA,CAGA,mCACI,aAAA,CACA,YAAA,CACA,QAAA,CACA,+CACI,YAAA,CAIR,uCACI,uBAAA,CAIR,gBACI,YAAA,CACA,iCAAA,CACA,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,uCAAA,CAGJ,gBACI,mCAAA,CACA,4BAAA,CAGJ,qBACI,YAAA,CACA,kBAAA,CACA,uCAAA,CACA,SAAA,CACA,gBAAA,CAEA,YAAA,CACA,kHAAA,CAOA,QAAA,CAEA,4BACI,eAAA,CAGJ,2BACI,cAAA,CAGJ,+BACI,kBAAA,CAEJ,2BACI,cAAA,CAEJ,gCACI,mBAAA,CAEJ,4BACI,eAAA,CAEJ,gCACI,cAAA,CACA,mBAAA,CACA,YAAA,CACA,QAAA",sourcesContent:['@import \'./variables.scss\'; \n\n* {\n    margin: 0; \n    padding: 0; \n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box; \n    box-sizing: border-box;\n}\n\n\n.container {\n\n    min-height: 100vh; \n    display: grid; \n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 0.5fr 4fr;\n    grid-template-areas: "nav header"\n        "nav content"\n    ;\n    header {\n        grid-area: header;\n        h1 {\n            text-align: center;\n        }\n    }\n\n    .navigation {\n        font-size: 2rem;\n        height: 100%; \n        background-color:$primary-col-1; \n        color: $primary-col-2; \n        grid-area: nav;\n        padding: 1.5rem;\n        align-self: center;\n        display: flex; \n        flex-direction: column;\n        gap: 25px;\n\n\n        button {\n            border-radius: 5px; \n            border: 1px solid transparent; \n            cursor: pointer;\n            text-transform: capitalize;\n\n            &:hover {\n                border: 1px solid black;\n                font-weight: bold;\n            }\n        }\n\n\n        .warning-btn {\n            background-color: $warning-col;\n            color: white; \n            font-weight: bold;  \n            justify-self: flex-end;\n            text-transform: uppercase;\n\n            &:hover {\n                background-color: $warning-col-2;\n            }\n        }\n    }\n\n    \n\n    .content {\n        grid-area: content;\n        display: grid; \n        justify-items: center;\n        gap: 2rem;\n        grid-template-rows: max-content 1fr;\n\n        >div {\n            width: 90%;\n        }\n    }\n\n    ul {\n        display: flex; \n        flex-direction: column;\n        gap: 10px; \n    }\n\n    li {\n        list-style-type: none;\n        cursor: pointer;\n        position: relative;\n        margin-left: 1rem; \n\n        &:hover {\n            &:before {\n                position: absolute; \n                content: \'//\'; \n                font-weight: bold;\n                left: -1rem; \n                top: 0; \n\n            }\n        }\n    }\n\n    .active {\n        font-weight: bold;\n        &:before {\n            position: absolute; \n            content: \'//\'; \n            font-weight: bold;\n            left: -1rem; \n            top: 0; \n\n        }\n    }\n\n\n}\n\n\n.add-item, #project-popup  {\n    position: absolute; \n    top: 1rem; \n    left: 1rem; \n    right: 1rem; \n    bottom: 1rem; \n    background-color: $primary-col-2;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    padding: 2rem;\n\n\n    form {\n        margin: 1rem 0;\n        display: grid; \n        gap: 20px; \n        label {\n            display: grid; \n        }\n    }\n\n    button {\n        margin: 1rem 1rem 1rem 0;\n    }\n}\n\n.item-container {\n    display: grid; \n    grid-template-columns: 1fr 3fr 1fr;\n    padding: 1rem; \n    margin-bottom: 1rem; \n    border-radius: 10px;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n}\n\n.completed-task {\n    background-color: rgba($primary-col-1,0.25);\n    text-decoration: line-through;\n}\n\n.single-item-display {\n    padding: 2rem; \n    border-radius: 10px; \n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    width: 80%; \n    margin: 1rem auto;\n\n    display: grid;\n    grid-template-areas: "title . date"\n        "priority . . "\n        "desc desc desc"\n        "checklist . . "\n        "notes . . "\n        "btns btns btns"\n    ;\n    gap: 20px; \n\n    .title {\n        grid-area: title; \n    }\n\n    .date {\n        grid-area: date;\n\n    }\n    .priority {\n        grid-area: priority;\n    }\n    .desc {\n        grid-area: desc; \n    }\n    .checklist {\n        grid-area: checklist; \n    }\n    .notes {\n        grid-area: notes;\n    }\n    .btn-group {\n        grid-area: btns; \n        justify-self: center;\n        display: flex; \n        gap: 20px; \n    }\n    \n}',"$primary-col-1: rgb(63, 62, 73); \n$primary-col-2: rgb(255,255,255); \n$warning-col: rgb(204, 51, 0); \n$warning-col-2: rgb(233, 88, 39); "],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var A=e[c],l=r.base?A[0]+r.base:A[0],d=a[l]||0,s="".concat(l," ").concat(d);a[l]=d+1;var p=n(s),m={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var u=o(m,r);r.byIndex=c,t.splice(c,0,{identifier:s,updater:u,references:1})}i.push(s)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var A=r(e,o),l=0;l<a.length;l++){var d=n(a[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=A}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),i=n.n(a),c=n(565),A=n.n(c),l=n(216),d=n.n(l),s=n(589),p=n.n(s),m=n(151),u={};function g(e){let t=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];if("home"==e)return t.filter((e=>0==e.complete));if("today"==e)return t.filter((e=>e.date==(new Date).toISOString().substring(0,10)&&0==e.complete));if("week"==e){const e=new Date;let n=new Date(e.getFullYear(),e.getMonth(),e.getDate()-7).toISOString().substring(0,10);return t.filter((e=>e.date>=n&&0==e.complete))}return"completed"==e?t.filter((e=>1==e.complete)):t.filter((t=>t.project.toLowerCase()==e&&0==t.complete))}function C(e,t,n,r,o,a,i){return{title:e,description:t,date:n,priority:r,notes:o,checklist:a,project:i,complete:!1}}function f(){document.querySelector("#add-item-form").remove()}function b(e,t,n,r,o=[]){const a=document.createElement("label"),i=document.createElement(t);return a.for=e,a.append(n),"input"==t&&(i.type=r),"date"==r&&(i.defaultValue=new Date,i.value=(new Date).toISOString().substring(0,10)),o.length>0&&o.forEach((e=>{const t=document.createElement("option");t.innerText=e,t.value=e,i.append(t)})),i.id=e,a.append(i),a}function v(e){const t=document.createElement("div"),n=document.createElement("button");return n.innerText="+",0==e.length?(t.append(n),t):(e.forEach((e=>{const n=document.createElement("div"),r=document.createElement("h3"),o=document.createElement("span"),a=document.createElement("button");a.innerText="complete",a.classNam="complete-btn",r.innerText=e.title,o.innerText=e.date,a.addEventListener("click",(()=>{!function(e){console.log(e),function(e){let t=JSON.parse(localStorage.getItem("TOP-todo-items"));t.map((t=>{t.title===e&&(t.complete=!0)})),localStorage.setItem("TOP-todo-items",JSON.stringify(t))}(e)}(r.innerText)})),n.append(o),n.append(r),n.append(a),n.className="item-container",e.complete&&n.classList.add("completed-task"),t.append(n)})),n.className="new-item-btn",n.addEventListener("click",(function(){const e=function(){const e=document.createElement("div"),t=document.createElement("h2"),n=document.createElement("form"),r=document.createElement("button"),o=document.createElement("button"),a={taskName:{id:"task-name",label:"Task Name:",type:"text",el:"input"},taskDesc:{id:"task-desc",label:"Task Description:",type:"text",el:"input"},taskDate:{id:"task-date",label:"Task Date:",type:"date",el:"input"},taskPriorty:{id:"task-priorty",label:"Task Priority:",type:"select",el:"select",option:["low","medium","high","DO IT NOW!"]},taskNotes:{id:"task-notes",label:"Task Notes:",type:"text",el:"input"},taskChecklist:{id:"task-checklist",label:"Task checklist (comma separated):",type:"text",el:"input"},taskProject:{id:"task-project",label:"Task Project:",type:"select",el:"select",option:JSON.parse(localStorage.getItem("TOP-project-nav"))}};t.innerText="Add new item";for(let e in a){let t=b(a[e].id,a[e].el,a[e].label,a[e].type,a[e].option);n.append(t)}return r.innerText="Add",r.addEventListener("click",(()=>{(function(){let e=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];const t=C(document.getElementById("task-name").value,document.getElementById("task-desc").value,document.getElementById("task-date").value,document.getElementById("task-priorty").value,document.getElementById("task-notes").value,document.getElementById("task-checklist").value,document.getElementById("task-project").value);console.log(t),e.push(t),localStorage.setItem("TOP-todo-items",JSON.stringify(e)),console.log(localStorage.getItem("TOP-todo-items"))})(),document.querySelector("#add-item-form").remove()})),o.innerText="Close",o.addEventListener("click",f),e.append(t),e.append(n),e.append(r),e.append(o),e.className="add-item",e.id="add-item-form",e}();document.body.append(e)})),t.append(n),t)}function h(e,t){const n=document.createElement("div"),r=document.createElement("h2"),o=new v(t);return r.innerText=e,n.id="content-page",n.className="content",n.append(r),n.append(o),n}function y(){document.querySelectorAll("nav li").forEach((e=>{e.removeEventListener("click",(function(){})),e.addEventListener("click",(function(){var t,n;t=e.innerText,document.querySelector("#content-page").remove(),document.querySelector("#root .container").append(h(t,g(t.toLowerCase()))),n=e,document.querySelectorAll("nav li").forEach((e=>{e.classList.remove("active")})),n.className="active"}))}))}function x(){console.log("add item to projects");let e=document.createElement("li");e.innerText=document.querySelector("#project-popup input").value,document.querySelector("#project-nav").append(e),document.querySelector("#project-popup").remove(),function(){const e=document.querySelectorAll("#project-nav li");let t=[];e.forEach((e=>{t.push(e.innerText)})),localStorage.getItem("TOP-project-nav")&&JSON.parse(localStorage.getItem("TOP-project-nav")).forEach((e=>{-1==t.indexOf(e)&&t.push(e)})),localStorage.removeItem("TOP-project-nav"),localStorage.setItem("TOP-project-nav",JSON.stringify(t))}(),y()}function E(){document.querySelector("#project-popup").remove()}function k(){const e=document.createElement("nav"),t=document.createElement("ul"),n=document.createElement("li"),r=document.createElement("li"),o=document.createElement("li"),a=document.createElement("li"),i=document.createElement("ul"),c=document.createElement("button"),A=document.createElement("h2"),l=document.createElement("button");return A.innerText="Projects",n.innerText="Home",r.innerText="Today",o.innerText="Week",a.innerText="Completed",t.append(n),t.append(r),t.append(o),t.append(a),i.append(A),i.id="project-nav",localStorage.getItem("TOP-project-nav")&&JSON.parse(localStorage.getItem("TOP-project-nav")).forEach((e=>{const t=document.createElement("li");t.innerText=e,i.append(t)})),c.innerText="add project",c.addEventListener("click",(()=>{document.querySelector("#root").append(function(){const e=document.createElement("div"),t=document.createElement("h2"),n=document.createElement("label"),r=document.createElement("input"),o=document.createElement("button"),a=document.createElement("button");return r.type="text",n.append("Project name:"),n.append(r),o.innerText="add project",a.innerText="close",o.addEventListener("click",x),a.addEventListener("click",E),t.innerText="Add new project",e.append(t),e.append(n),e.append(o),e.append(a),e.id="project-popup",e}())})),l.innerText="warning: delete all stroage?",l.addEventListener("click",(function(){localStorage.removeItem("TOP-project-nav"),location.reload()})),l.className="warning-btn",e.append(t),e.append(i),e.append(c),e.append(l),e}u.styleTagTransform=p(),u.setAttributes=A(),u.insert=i().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=d(),t()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals,C("randomTitle1","blah desc","date","1","",["item1","item2"]),C("randomTitle2","blah desc","date","1","",["item1","item2"]),C("randomTitle3","blah desc","date","1","",["item1","item2"]),C("randomTitle4","blah desc","date","1","",["item1","item2"]),function(e,t,n){const r=document.querySelector("#root"),o=document.createElement("div"),a=document.createElement("header"),i=document.createElement("h1"),c=new k,A=new e(t,g(t));i.innerText="To Do List | The Odin Project",a.append(i),o.className="container",c.className="navigation",o.append(a),o.append(c),o.append(A),r.textContent="",r.append(o),y()}(h,"home")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,