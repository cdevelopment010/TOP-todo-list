(()=>{"use strict";var e={151:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,'*{margin:0;padding:0;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}.container{min-height:100vh;display:grid;grid-template-columns:1fr 4fr;grid-template-rows:.5fr 4fr;grid-template-areas:"nav header" "nav content"}.container header{grid-area:header}.container header h1{text-align:center}.container .navigation{font-size:2rem;height:100%;background-color:#3f3e49;color:#fff;grid-area:nav;padding:1.5rem;align-self:center;display:flex;flex-direction:column;gap:25px}.container .navigation button{border-radius:5px;border:1px solid transparent;cursor:pointer;text-transform:capitalize}.container .navigation button:hover{border:1px solid #000;font-weight:bold}.container .navigation .warning-btn{background-color:#c30;color:#fff;font-weight:bold;justify-self:flex-end;text-transform:uppercase}.container .navigation .warning-btn:hover{background-color:#e95827}.container .content{grid-area:content;display:grid;justify-items:center;gap:2rem;grid-template-rows:max-content 1fr}.container .content>div{width:90%}.container ul{display:flex;flex-direction:column;gap:10px}.container li{list-style-type:none;cursor:pointer;position:relative;margin-left:1rem}.container li:hover:before{position:absolute;content:"//";font-weight:bold;left:-1rem;top:0}.container .active{font-weight:bold}.container .active:before{position:absolute;content:"//";font-weight:bold;left:-1rem;top:0}.add-item,#project-popup{position:absolute;top:1rem;left:1rem;right:1rem;bottom:1rem;background-color:#fff;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);padding:2rem}.add-item form,#project-popup form{margin:1rem 0;display:grid;gap:20px}.add-item form label,#project-popup form label{display:grid}.add-item button,#project-popup button{margin:1rem 1rem 1rem 0}.item-container{display:grid;grid-template-columns:1fr 3fr 1fr 1fr;gap:3px;padding:1rem;margin-bottom:1rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25)}.completed-task{background-color:rgba(63,62,73,.25);text-decoration:line-through}.single-item-display{padding:2rem;border-radius:10px;box-shadow:0 5px 10px 0 rgba(0,0,0,.25);width:80%;margin:1rem auto;display:grid;grid-template-areas:"title . date" "priority . . " "desc desc desc" "checklist . . " "notes . . " "btns btns btns";gap:20px}.single-item-display .title{grid-area:title}.single-item-display .date{grid-area:date}.single-item-display .priority{grid-area:priority}.single-item-display .desc{grid-area:desc}.single-item-display .checklist{grid-area:checklist}.single-item-display .notes{grid-area:notes}.single-item-display .btn-group{grid-area:btns;justify-self:center;display:flex;gap:20px}',"",{version:3,sources:["webpack://./src/sass/main.scss","webpack://./src/sass/variables.scss"],names:[],mappings:"AAEA,EACI,QAAA,CACA,SAAA,CACA,0BAAA,CACA,6BAAA,CACA,qBAAA,CAIJ,WAEI,gBAAA,CACA,YAAA,CACA,6BAAA,CACA,2BAAA,CACA,8CAAA,CAGA,kBACI,gBAAA,CACA,qBACI,iBAAA,CAIR,uBACI,cAAA,CACA,WAAA,CACA,wBC9BQ,CD+BR,UC9BQ,CD+BR,aAAA,CACA,cAAA,CACA,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,QAAA,CAGA,8BACI,iBAAA,CACA,4BAAA,CACA,cAAA,CACA,yBAAA,CAEA,oCACI,qBAAA,CACA,gBAAA,CAKR,oCACI,qBCpDE,CDqDF,UAAA,CACA,gBAAA,CACA,qBAAA,CACA,wBAAA,CAEA,0CACI,wBC1DA,CDiEZ,oBACI,iBAAA,CACA,YAAA,CACA,oBAAA,CACA,QAAA,CACA,kCAAA,CAEA,wBACI,SAAA,CAIR,cACI,YAAA,CACA,qBAAA,CACA,QAAA,CAGJ,cACI,oBAAA,CACA,cAAA,CACA,iBAAA,CACA,gBAAA,CAGI,2BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,UAAA,CACA,KAAA,CAMZ,mBACI,gBAAA,CACA,0BACI,iBAAA,CACA,YAAA,CACA,gBAAA,CACA,UAAA,CACA,KAAA,CASZ,yBACI,iBAAA,CACA,QAAA,CACA,SAAA,CACA,UAAA,CACA,WAAA,CACA,qBC7HY,CD8HZ,uCAAA,CACA,YAAA,CAGA,mCACI,aAAA,CACA,YAAA,CACA,QAAA,CACA,+CACI,YAAA,CAIR,uCACI,uBAAA,CAIR,gBACI,YAAA,CACA,qCAAA,CACA,OAAA,CACA,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,uCAAA,CAGJ,gBACI,mCAAA,CACA,4BAAA,CAGJ,qBACI,YAAA,CACA,kBAAA,CACA,uCAAA,CACA,SAAA,CACA,gBAAA,CAEA,YAAA,CACA,kHAAA,CAOA,QAAA,CAEA,4BACI,eAAA,CAGJ,2BACI,cAAA,CAGJ,+BACI,kBAAA,CAEJ,2BACI,cAAA,CAEJ,gCACI,mBAAA,CAEJ,4BACI,eAAA,CAEJ,gCACI,cAAA,CACA,mBAAA,CACA,YAAA,CACA,QAAA",sourcesContent:['@import \'./variables.scss\'; \n\n* {\n    margin: 0; \n    padding: 0; \n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box; \n    box-sizing: border-box;\n}\n\n\n.container {\n\n    min-height: 100vh; \n    display: grid; \n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 0.5fr 4fr;\n    grid-template-areas: "nav header"\n        "nav content"\n    ;\n    header {\n        grid-area: header;\n        h1 {\n            text-align: center;\n        }\n    }\n\n    .navigation {\n        font-size: 2rem;\n        height: 100%; \n        background-color:$primary-col-1; \n        color: $primary-col-2; \n        grid-area: nav;\n        padding: 1.5rem;\n        align-self: center;\n        display: flex; \n        flex-direction: column;\n        gap: 25px;\n\n\n        button {\n            border-radius: 5px; \n            border: 1px solid transparent; \n            cursor: pointer;\n            text-transform: capitalize;\n\n            &:hover {\n                border: 1px solid black;\n                font-weight: bold;\n            }\n        }\n\n\n        .warning-btn {\n            background-color: $warning-col;\n            color: white; \n            font-weight: bold;  \n            justify-self: flex-end;\n            text-transform: uppercase;\n\n            &:hover {\n                background-color: $warning-col-2;\n            }\n        }\n    }\n\n    \n\n    .content {\n        grid-area: content;\n        display: grid; \n        justify-items: center;\n        gap: 2rem;\n        grid-template-rows: max-content 1fr;\n\n        >div {\n            width: 90%;\n        }\n    }\n\n    ul {\n        display: flex; \n        flex-direction: column;\n        gap: 10px; \n    }\n\n    li {\n        list-style-type: none;\n        cursor: pointer;\n        position: relative;\n        margin-left: 1rem; \n\n        &:hover {\n            &:before {\n                position: absolute; \n                content: \'//\'; \n                font-weight: bold;\n                left: -1rem; \n                top: 0; \n\n            }\n        }\n    }\n\n    .active {\n        font-weight: bold;\n        &:before {\n            position: absolute; \n            content: \'//\'; \n            font-weight: bold;\n            left: -1rem; \n            top: 0; \n\n        }\n    }\n\n\n}\n\n\n.add-item, #project-popup  {\n    position: absolute; \n    top: 1rem; \n    left: 1rem; \n    right: 1rem; \n    bottom: 1rem; \n    background-color: $primary-col-2;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    padding: 2rem;\n\n\n    form {\n        margin: 1rem 0;\n        display: grid; \n        gap: 20px; \n        label {\n            display: grid; \n        }\n    }\n\n    button {\n        margin: 1rem 1rem 1rem 0;\n    }\n}\n\n.item-container {\n    display: grid; \n    grid-template-columns: 1fr 3fr 1fr 1fr;\n    gap: 3px;\n    padding: 1rem; \n    margin-bottom: 1rem; \n    border-radius: 10px;\n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n}\n\n.completed-task {\n    background-color: rgba($primary-col-1,0.25);\n    text-decoration: line-through;\n}\n\n.single-item-display {\n    padding: 2rem; \n    border-radius: 10px; \n    box-shadow: 0 5px 10px 0 rgba(0,0,0,0.25);\n    width: 80%; \n    margin: 1rem auto;\n\n    display: grid;\n    grid-template-areas: "title . date"\n        "priority . . "\n        "desc desc desc"\n        "checklist . . "\n        "notes . . "\n        "btns btns btns"\n    ;\n    gap: 20px; \n\n    .title {\n        grid-area: title; \n    }\n\n    .date {\n        grid-area: date;\n\n    }\n    .priority {\n        grid-area: priority;\n    }\n    .desc {\n        grid-area: desc; \n    }\n    .checklist {\n        grid-area: checklist; \n    }\n    .notes {\n        grid-area: notes;\n    }\n    .btn-group {\n        grid-area: btns; \n        justify-self: center;\n        display: flex; \n        gap: 20px; \n    }\n    \n}',"$primary-col-1: rgb(63, 62, 73); \n$primary-col-2: rgb(255,255,255); \n$warning-col: rgb(204, 51, 0); \n$warning-col-2: rgb(233, 88, 39); "],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var d=0;d<e.length;d++){var A=[].concat(e[d]);o&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),t.push(A))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var l=e[c],d=o.base?l[0]+o.base:l[0],A=a[d]||0,s="".concat(d," ").concat(A);a[d]=A+1;var p=n(s),m={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var u=r(m,o);o.byIndex=c,t.splice(c,0,{identifier:s,updater:u,references:1})}i.push(s)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var l=o(e,r),d=0;d<a.length;d++){var A=n(a[d]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}a=l}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),c=n(565),l=n.n(c),d=n(216),A=n.n(d),s=n(589),p=n.n(s),m=n(151),u={};function g(e){let t=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];if("home"==e)return t.filter((e=>0==e.complete));if("today"==e)return t.filter((e=>e.date==(new Date).toISOString().substring(0,10)&&0==e.complete));if("week"==e){const e=new Date;let n=new Date(e.getFullYear(),e.getMonth(),e.getDate()-7).toISOString().substring(0,10);return t.filter((e=>e.date>=n&&0==e.complete))}return"completed"==e?t.filter((e=>1==e.complete)):"late"==e?t.filter((e=>e.date<(new Date).toISOString().substring(0,10)&&0==e.complete)):t.filter((t=>t.project.toLowerCase()==e&&0==t.complete))}function C(e,t,n,o,r,a,i){return{title:e,description:t,date:n,priority:o,notes:r,checklist:a,project:i,complete:!1}}function f(e){const t=document.createElement("div"),n=document.createElement("h2"),o=document.createElement("form"),r=document.createElement("button"),a=document.createElement("button");let i=(JSON.parse(localStorage.getItem("TOP-todo-items"))||[]).filter((t=>t.title===e))[0]||"";const c={taskName:{id:"task-name",label:"Task Name:",type:"text",el:"input",values:i.title||""},taskDesc:{id:"task-desc",label:"Task Description:",type:"text",el:"input",values:i.description||""},taskDate:{id:"task-date",label:"Task Date:",type:"date",el:"input",values:i.date||""},taskPriorty:{id:"task-priorty",label:"Task Priority:",type:"select",el:"select",option:["low","medium","high","DO IT NOW!"],values:i.priority||""},taskNotes:{id:"task-notes",label:"Task Notes:",type:"text",el:"input",values:i.notes||""},taskChecklist:{id:"task-checklist",label:"Task checklist (comma separated):",type:"text",el:"input",values:i.checklist||""},taskProject:{id:"task-project",label:"Task Project:",type:"select",el:"select",option:JSON.parse(localStorage.getItem("TOP-project-nav")),values:i.project||""}};if(n.innerText="Add new item",null!=e){for(let e in c){let t=v(c[e].id,c[e].el,c[e].label,c[e].type,c[e].option,c[e].values);o.append(t)}let e=v("task-complete","select","Completed?","select",[!1,!0],!1);o.append(e),console.log(o)}else for(let e in c){let t=v(c[e].id,c[e].el,c[e].label,c[e].type,c[e].option);o.append(t)}return r.innerText="Add",r.addEventListener("click",(()=>{null!=e?function(e){let t=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];t.map((t=>{t.title===e&&(t.title=document.getElementById("task-name").value,t.description=document.getElementById("task-desc").value,t.date=document.getElementById("task-date").value,t.priorty=document.getElementById("task-priorty").value,t.notes=document.getElementById("task-notes").value,t.checklist=document.getElementById("task-checklist").value,t.project=document.getElementById("task-project").value,t.complete=1==document.getElementById("task-complete").value),console.log(t.title,"|",t.complete)})),localStorage.setItem("TOP-todo-items",JSON.stringify(t)),document.querySelector("#add-item-form").remove()}(e):(function(){let e=JSON.parse(localStorage.getItem("TOP-todo-items"))||[];const t=C(document.getElementById("task-name").value,document.getElementById("task-desc").value,document.getElementById("task-date").value,document.getElementById("task-priorty").value,document.getElementById("task-notes").value,document.getElementById("task-checklist").value,document.getElementById("task-project").value);console.log(t),e.push(t),localStorage.setItem("TOP-todo-items",JSON.stringify(e)),console.log(localStorage.getItem("TOP-todo-items"))}(),document.querySelector("#add-item-form").remove())})),a.innerText="Close",a.addEventListener("click",b),t.append(n),t.append(o),t.append(r),t.append(a),t.className="add-item",t.id="add-item-form",t}function b(){document.querySelector("#add-item-form").remove()}function v(e,t,n,o,r=[],a=""){const i=document.createElement("label"),c=document.createElement(t);return i.for=e,i.append(n),"input"==t&&(c.type=o),"date"==o&&(c.defaultValue=new Date,c.value=(new Date).toISOString().substring(0,10)),r.length>0&&r.forEach((e=>{const t=document.createElement("option");t.innerText=e,t.value=e,c.append(t)})),c.id=e,""!=a&&(c.value=a),i.append(c),i}function y(e){const t=document.createElement("div"),n=document.createElement("button");return n.innerText="+",0==e.length?(t.append(n),t):(e.forEach((e=>{const n=document.createElement("div"),o=document.createElement("h3"),r=document.createElement("span"),a=document.createElement("button"),i=document.createElement("button");a.innerText="complete",a.classNam="complete-btn",i.innerText="View Task",i.classNam="view-btn",o.innerText=e.title,r.innerText=e.date,a.addEventListener("click",(e=>{e.stopPropagation(),function(e){console.log(e),function(e){let t=JSON.parse(localStorage.getItem("TOP-todo-items"));t.map((t=>{t.title===e&&(t.complete=!0)})),localStorage.setItem("TOP-todo-items",JSON.stringify(t))}(e),location.reload()}(o.innerText)})),i.addEventListener("click",(function(e){e.stopPropagation(),console.log("view btn clicked")}),!0),n.append(r),n.append(o),n.append(a),n.append(i),n.className="item-container",e.complete&&n.classList.add("completed-task"),n.addEventListener("click",h),t.append(n)})),n.className="new-item-btn",n.addEventListener("click",(function(){const e=f();document.body.append(e)})),t.append(n),t)}function h(){const e=f(this.querySelector("h3").innerText);document.body.append(e)}function x(e,t){const n=document.createElement("div"),o=document.createElement("h2"),r=new y(t);return o.innerText=e,n.id="content-page",n.className="content",n.append(o),n.append(r),n}function k(){document.querySelectorAll("nav li").forEach((e=>{e.removeEventListener("click",(function(){})),e.addEventListener("click",(function(){var t,n;t=e.innerText,document.querySelector("#content-page").remove(),document.querySelector("#root .container").append(x(t,g(t.toLowerCase()))),n=e,document.querySelectorAll("nav li").forEach((e=>{e.classList.remove("active")})),n.className="active"}))}))}function E(){console.log("add item to projects");let e=document.createElement("li");e.innerText=document.querySelector("#project-popup input").value,document.querySelector("#project-nav").append(e),document.querySelector("#project-popup").remove(),function(){const e=document.querySelectorAll("#project-nav li");let t=[];e.forEach((e=>{t.push(e.innerText)})),localStorage.getItem("TOP-project-nav")&&JSON.parse(localStorage.getItem("TOP-project-nav")).forEach((e=>{-1==t.indexOf(e)&&t.push(e)})),localStorage.removeItem("TOP-project-nav"),localStorage.setItem("TOP-project-nav",JSON.stringify(t))}(),k()}function B(){document.querySelector("#project-popup").remove()}function I(){const e=document.createElement("nav"),t=document.createElement("ul"),n=document.createElement("li"),o=document.createElement("li"),r=document.createElement("li"),a=document.createElement("li"),i=document.createElement("li"),c=document.createElement("ul"),l=document.createElement("button"),d=document.createElement("h2"),A=document.createElement("button");return d.innerText="Projects",n.innerText="Home",o.innerText="Today",r.innerText="Week",a.innerText="Completed",i.innerText="Late",t.append(n),t.append(o),t.append(r),t.append(a),t.append(i),c.append(d),c.id="project-nav",localStorage.getItem("TOP-project-nav")&&JSON.parse(localStorage.getItem("TOP-project-nav")).forEach((e=>{const t=document.createElement("li");t.innerText=e,c.append(t)})),l.innerText="add project",l.addEventListener("click",(()=>{document.querySelector("#root").append(function(){const e=document.createElement("div"),t=document.createElement("h2"),n=document.createElement("label"),o=document.createElement("input"),r=document.createElement("button"),a=document.createElement("button");return o.type="text",n.append("Project name:"),n.append(o),r.innerText="add project",a.innerText="close",r.addEventListener("click",E),a.addEventListener("click",B),t.innerText="Add new project",e.append(t),e.append(n),e.append(r),e.append(a),e.id="project-popup",e}())})),A.innerText="warning: delete all stroage?",A.addEventListener("click",(function(){localStorage.removeItem("TOP-project-nav"),location.reload()})),A.className="warning-btn",e.append(t),e.append(c),e.append(l),e.append(A),e}u.styleTagTransform=p(),u.setAttributes=l(),u.insert=i().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=A(),t()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals,C("randomTitle1","blah desc","date","1","",["item1","item2"]),C("randomTitle2","blah desc","date","1","",["item1","item2"]),C("randomTitle3","blah desc","date","1","",["item1","item2"]),C("randomTitle4","blah desc","date","1","",["item1","item2"]),function(e,t,n){const o=document.querySelector("#root"),r=document.createElement("div"),a=document.createElement("header"),i=document.createElement("h1"),c=new I,l=new e(t,g(t));i.innerText="To Do List | The Odin Project",a.append(i),r.className="container",c.className="navigation",r.append(a),r.append(c),r.append(l),o.textContent="",o.append(r),k()}(x,"home")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFRbkUsU0FBU1csY0FBYyxNQUMvQnlKLEVBQVUsSUFBSWpCLEVBQ2RsTixFQUFVLElBQUlnSCxFQUFRb0YsRUFBTXJGLEVBQVlxRixJQUU5Q2xFLEVBQU15QixVQUFZLGdDQUVsQnVFLEVBQU9wRSxPQUFPNUIsR0FDZG1FLEVBQUs1QixVQUFZLFlBR2pCMEQsRUFBUTFELFVBQVksYUFFcEI0QixFQUFLdkMsT0FBT29FLEdBQ1o3QixFQUFLdkMsT0FBT3FFLEdBQ1o5QixFQUFLdkMsT0FBTzlKLEdBRVppTyxFQUFLRyxZQUFjLEdBQ25CSCxFQUFLbkUsT0FBT3VDLEdBQ1pFLElDdkJKOEIsQ0FBWWxDLEVBQW1CLFMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL3Nhc3MvbWFpbi5zY3NzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9zYXNzL21haW4uc2Nzcz82YTE3Iiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvZmlsdGVySXRlbXMuanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9Ub0RvSXRlbS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL0FkZE5ld0l0ZW0uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9tYW5hZ2VOZXdJdGVtLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvcmVuZGVyUGFnZUl0ZW0uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9Db21wbGV0ZUl0ZW0uanMiLCJ3ZWJwYWNrOi8vdG9wLXRvZG8tbGlzdC8uL3NyYy9yZW5kZXJQYWdlQ29udGVudC5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL25hdmlnYXRpb24vbmF2aWdhdGVTZWN0aW9ucy5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL25hdmlnYXRpb24vTmV3UHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL25hdmlnYXRpb24vbmF2aWdhdGlvbkRPTS5qcyIsIndlYnBhY2s6Ly90b3AtdG9kby1saXN0Ly4vc3JjL0dlbmVyaWNQYWdlLmpzIiwid2VicGFjazovL3RvcC10b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqe21hcmdpbjowO3BhZGRpbmc6MDstbW96LWJveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3h9LmNvbnRhaW5lcnttaW4taGVpZ2h0OjEwMHZoO2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6MWZyIDRmcjtncmlkLXRlbXBsYXRlLXJvd3M6LjVmciA0ZnI7Z3JpZC10ZW1wbGF0ZS1hcmVhczpcXFwibmF2IGhlYWRlclxcXCIgXFxcIm5hdiBjb250ZW50XFxcIn0uY29udGFpbmVyIGhlYWRlcntncmlkLWFyZWE6aGVhZGVyfS5jb250YWluZXIgaGVhZGVyIGgxe3RleHQtYWxpZ246Y2VudGVyfS5jb250YWluZXIgLm5hdmlnYXRpb257Zm9udC1zaXplOjJyZW07aGVpZ2h0OjEwMCU7YmFja2dyb3VuZC1jb2xvcjojM2YzZTQ5O2NvbG9yOiNmZmY7Z3JpZC1hcmVhOm5hdjtwYWRkaW5nOjEuNXJlbTthbGlnbi1zZWxmOmNlbnRlcjtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2dhcDoyNXB4fS5jb250YWluZXIgLm5hdmlnYXRpb24gYnV0dG9ue2JvcmRlci1yYWRpdXM6NXB4O2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7Y3Vyc29yOnBvaW50ZXI7dGV4dC10cmFuc2Zvcm06Y2FwaXRhbGl6ZX0uY29udGFpbmVyIC5uYXZpZ2F0aW9uIGJ1dHRvbjpob3Zlcntib3JkZXI6MXB4IHNvbGlkICMwMDA7Zm9udC13ZWlnaHQ6Ym9sZH0uY29udGFpbmVyIC5uYXZpZ2F0aW9uIC53YXJuaW5nLWJ0bntiYWNrZ3JvdW5kLWNvbG9yOiNjMzA7Y29sb3I6I2ZmZjtmb250LXdlaWdodDpib2xkO2p1c3RpZnktc2VsZjpmbGV4LWVuZDt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2V9LmNvbnRhaW5lciAubmF2aWdhdGlvbiAud2FybmluZy1idG46aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZTk1ODI3fS5jb250YWluZXIgLmNvbnRlbnR7Z3JpZC1hcmVhOmNvbnRlbnQ7ZGlzcGxheTpncmlkO2p1c3RpZnktaXRlbXM6Y2VudGVyO2dhcDoycmVtO2dyaWQtdGVtcGxhdGUtcm93czptYXgtY29udGVudCAxZnJ9LmNvbnRhaW5lciAuY29udGVudD5kaXZ7d2lkdGg6OTAlfS5jb250YWluZXIgdWx7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtnYXA6MTBweH0uY29udGFpbmVyIGxpe2xpc3Qtc3R5bGUtdHlwZTpub25lO2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbi1sZWZ0OjFyZW19LmNvbnRhaW5lciBsaTpob3ZlcjpiZWZvcmV7cG9zaXRpb246YWJzb2x1dGU7Y29udGVudDpcXFwiLy9cXFwiO2ZvbnQtd2VpZ2h0OmJvbGQ7bGVmdDotMXJlbTt0b3A6MH0uY29udGFpbmVyIC5hY3RpdmV7Zm9udC13ZWlnaHQ6Ym9sZH0uY29udGFpbmVyIC5hY3RpdmU6YmVmb3Jle3Bvc2l0aW9uOmFic29sdXRlO2NvbnRlbnQ6XFxcIi8vXFxcIjtmb250LXdlaWdodDpib2xkO2xlZnQ6LTFyZW07dG9wOjB9LmFkZC1pdGVtLCNwcm9qZWN0LXBvcHVwe3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxcmVtO2xlZnQ6MXJlbTtyaWdodDoxcmVtO2JvdHRvbToxcmVtO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3gtc2hhZG93OjAgNXB4IDEwcHggMCByZ2JhKDAsMCwwLC4yNSk7cGFkZGluZzoycmVtfS5hZGQtaXRlbSBmb3JtLCNwcm9qZWN0LXBvcHVwIGZvcm17bWFyZ2luOjFyZW0gMDtkaXNwbGF5OmdyaWQ7Z2FwOjIwcHh9LmFkZC1pdGVtIGZvcm0gbGFiZWwsI3Byb2plY3QtcG9wdXAgZm9ybSBsYWJlbHtkaXNwbGF5OmdyaWR9LmFkZC1pdGVtIGJ1dHRvbiwjcHJvamVjdC1wb3B1cCBidXR0b257bWFyZ2luOjFyZW0gMXJlbSAxcmVtIDB9Lml0ZW0tY29udGFpbmVye2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWNvbHVtbnM6MWZyIDNmciAxZnIgMWZyO2dhcDozcHg7cGFkZGluZzoxcmVtO21hcmdpbi1ib3R0b206MXJlbTtib3JkZXItcmFkaXVzOjEwcHg7Ym94LXNoYWRvdzowIDVweCAxMHB4IDAgcmdiYSgwLDAsMCwuMjUpfS5jb21wbGV0ZWQtdGFza3tiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoNjMsNjIsNzMsLjI1KTt0ZXh0LWRlY29yYXRpb246bGluZS10aHJvdWdofS5zaW5nbGUtaXRlbS1kaXNwbGF5e3BhZGRpbmc6MnJlbTtib3JkZXItcmFkaXVzOjEwcHg7Ym94LXNoYWRvdzowIDVweCAxMHB4IDAgcmdiYSgwLDAsMCwuMjUpO3dpZHRoOjgwJTttYXJnaW46MXJlbSBhdXRvO2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLWFyZWFzOlxcXCJ0aXRsZSAuIGRhdGVcXFwiIFxcXCJwcmlvcml0eSAuIC4gXFxcIiBcXFwiZGVzYyBkZXNjIGRlc2NcXFwiIFxcXCJjaGVja2xpc3QgLiAuIFxcXCIgXFxcIm5vdGVzIC4gLiBcXFwiIFxcXCJidG5zIGJ0bnMgYnRuc1xcXCI7Z2FwOjIwcHh9LnNpbmdsZS1pdGVtLWRpc3BsYXkgLnRpdGxle2dyaWQtYXJlYTp0aXRsZX0uc2luZ2xlLWl0ZW0tZGlzcGxheSAuZGF0ZXtncmlkLWFyZWE6ZGF0ZX0uc2luZ2xlLWl0ZW0tZGlzcGxheSAucHJpb3JpdHl7Z3JpZC1hcmVhOnByaW9yaXR5fS5zaW5nbGUtaXRlbS1kaXNwbGF5IC5kZXNje2dyaWQtYXJlYTpkZXNjfS5zaW5nbGUtaXRlbS1kaXNwbGF5IC5jaGVja2xpc3R7Z3JpZC1hcmVhOmNoZWNrbGlzdH0uc2luZ2xlLWl0ZW0tZGlzcGxheSAubm90ZXN7Z3JpZC1hcmVhOm5vdGVzfS5zaW5nbGUtaXRlbS1kaXNwbGF5IC5idG4tZ3JvdXB7Z3JpZC1hcmVhOmJ0bnM7anVzdGlmeS1zZWxmOmNlbnRlcjtkaXNwbGF5OmZsZXg7Z2FwOjIwcHh9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3Nhc3MvbWFpbi5zY3NzXCIsXCJ3ZWJwYWNrOi8vLi9zcmMvc2Fzcy92YXJpYWJsZXMuc2Nzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQSxFQUNJLFFBQUEsQ0FDQSxTQUFBLENBQ0EsMEJBQUEsQ0FDQSw2QkFBQSxDQUNBLHFCQUFBLENBSUosV0FFSSxnQkFBQSxDQUNBLFlBQUEsQ0FDQSw2QkFBQSxDQUNBLDJCQUFBLENBQ0EsOENBQUEsQ0FHQSxrQkFDSSxnQkFBQSxDQUNBLHFCQUNJLGlCQUFBLENBSVIsdUJBQ0ksY0FBQSxDQUNBLFdBQUEsQ0FDQSx3QkM5QlEsQ0QrQlIsVUM5QlEsQ0QrQlIsYUFBQSxDQUNBLGNBQUEsQ0FDQSxpQkFBQSxDQUNBLFlBQUEsQ0FDQSxxQkFBQSxDQUNBLFFBQUEsQ0FHQSw4QkFDSSxpQkFBQSxDQUNBLDRCQUFBLENBQ0EsY0FBQSxDQUNBLHlCQUFBLENBRUEsb0NBQ0kscUJBQUEsQ0FDQSxnQkFBQSxDQUtSLG9DQUNJLHFCQ3BERSxDRHFERixVQUFBLENBQ0EsZ0JBQUEsQ0FDQSxxQkFBQSxDQUNBLHdCQUFBLENBRUEsMENBQ0ksd0JDMURBLENEaUVaLG9CQUNJLGlCQUFBLENBQ0EsWUFBQSxDQUNBLG9CQUFBLENBQ0EsUUFBQSxDQUNBLGtDQUFBLENBRUEsd0JBQ0ksU0FBQSxDQUlSLGNBQ0ksWUFBQSxDQUNBLHFCQUFBLENBQ0EsUUFBQSxDQUdKLGNBQ0ksb0JBQUEsQ0FDQSxjQUFBLENBQ0EsaUJBQUEsQ0FDQSxnQkFBQSxDQUdJLDJCQUNJLGlCQUFBLENBQ0EsWUFBQSxDQUNBLGdCQUFBLENBQ0EsVUFBQSxDQUNBLEtBQUEsQ0FNWixtQkFDSSxnQkFBQSxDQUNBLDBCQUNJLGlCQUFBLENBQ0EsWUFBQSxDQUNBLGdCQUFBLENBQ0EsVUFBQSxDQUNBLEtBQUEsQ0FTWix5QkFDSSxpQkFBQSxDQUNBLFFBQUEsQ0FDQSxTQUFBLENBQ0EsVUFBQSxDQUNBLFdBQUEsQ0FDQSxxQkM3SFksQ0Q4SFosdUNBQUEsQ0FDQSxZQUFBLENBR0EsbUNBQ0ksYUFBQSxDQUNBLFlBQUEsQ0FDQSxRQUFBLENBQ0EsK0NBQ0ksWUFBQSxDQUlSLHVDQUNJLHVCQUFBLENBSVIsZ0JBQ0ksWUFBQSxDQUNBLHFDQUFBLENBQ0EsT0FBQSxDQUNBLFlBQUEsQ0FDQSxrQkFBQSxDQUNBLGtCQUFBLENBQ0EsdUNBQUEsQ0FHSixnQkFDSSxtQ0FBQSxDQUNBLDRCQUFBLENBR0oscUJBQ0ksWUFBQSxDQUNBLGtCQUFBLENBQ0EsdUNBQUEsQ0FDQSxTQUFBLENBQ0EsZ0JBQUEsQ0FFQSxZQUFBLENBQ0Esa0hBQUEsQ0FPQSxRQUFBLENBRUEsNEJBQ0ksZUFBQSxDQUdKLDJCQUNJLGNBQUEsQ0FHSiwrQkFDSSxrQkFBQSxDQUVKLDJCQUNJLGNBQUEsQ0FFSixnQ0FDSSxtQkFBQSxDQUVKLDRCQUNJLGVBQUEsQ0FFSixnQ0FDSSxjQUFBLENBQ0EsbUJBQUEsQ0FDQSxZQUFBLENBQ0EsUUFBQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0ICcuL3ZhcmlhYmxlcy5zY3NzJzsgXFxuXFxuKiB7XFxuICAgIG1hcmdpbjogMDsgXFxuICAgIHBhZGRpbmc6IDA7IFxcbiAgICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsgXFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcblxcbi5jb250YWluZXIge1xcblxcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDsgXFxuICAgIGRpc3BsYXk6IGdyaWQ7IFxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA0ZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMC41ZnIgNGZyO1xcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcXFwibmF2IGhlYWRlclxcXCJcXG4gICAgICAgIFxcXCJuYXYgY29udGVudFxcXCJcXG4gICAgO1xcbiAgICBoZWFkZXIge1xcbiAgICAgICAgZ3JpZC1hcmVhOiBoZWFkZXI7XFxuICAgICAgICBoMSB7XFxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIC5uYXZpZ2F0aW9uIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcXG4gICAgICAgIGhlaWdodDogMTAwJTsgXFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiRwcmltYXJ5LWNvbC0xOyBcXG4gICAgICAgIGNvbG9yOiAkcHJpbWFyeS1jb2wtMjsgXFxuICAgICAgICBncmlkLWFyZWE6IG5hdjtcXG4gICAgICAgIHBhZGRpbmc6IDEuNXJlbTtcXG4gICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7IFxcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgICAgIGdhcDogMjVweDtcXG5cXG5cXG4gICAgICAgIGJ1dHRvbiB7XFxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4OyBcXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDsgXFxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcblxcbiAgICAgICAgICAgICY6aG92ZXIge1xcbiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcblxcblxcbiAgICAgICAgLndhcm5pbmctYnRuIHtcXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2FybmluZy1jb2w7XFxuICAgICAgICAgICAgY29sb3I6IHdoaXRlOyBcXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsgIFxcbiAgICAgICAgICAgIGp1c3RpZnktc2VsZjogZmxleC1lbmQ7XFxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG5cXG4gICAgICAgICAgICAmOmhvdmVyIHtcXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdhcm5pbmctY29sLTI7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIFxcblxcbiAgICAuY29udGVudCB7XFxuICAgICAgICBncmlkLWFyZWE6IGNvbnRlbnQ7XFxuICAgICAgICBkaXNwbGF5OiBncmlkOyBcXG4gICAgICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcXG4gICAgICAgIGdhcDogMnJlbTtcXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogbWF4LWNvbnRlbnQgMWZyO1xcblxcbiAgICAgICAgPmRpdiB7XFxuICAgICAgICAgICAgd2lkdGg6IDkwJTtcXG4gICAgICAgIH1cXG4gICAgfVxcblxcbiAgICB1bCB7XFxuICAgICAgICBkaXNwbGF5OiBmbGV4OyBcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgICAgICBnYXA6IDEwcHg7IFxcbiAgICB9XFxuXFxuICAgIGxpIHtcXG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtOyBcXG5cXG4gICAgICAgICY6aG92ZXIge1xcbiAgICAgICAgICAgICY6YmVmb3JlIHtcXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOyBcXG4gICAgICAgICAgICAgICAgY29udGVudDogJy8vJzsgXFxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICAgICAgICAgICAgICBsZWZ0OiAtMXJlbTsgXFxuICAgICAgICAgICAgICAgIHRvcDogMDsgXFxuXFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIC5hY3RpdmUge1xcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICAgICAgICAmOmJlZm9yZSB7XFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOyBcXG4gICAgICAgICAgICBjb250ZW50OiAnLy8nOyBcXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgICAgICAgICBsZWZ0OiAtMXJlbTsgXFxuICAgICAgICAgICAgdG9wOiAwOyBcXG5cXG4gICAgICAgIH1cXG4gICAgfVxcblxcblxcbn1cXG5cXG5cXG4uYWRkLWl0ZW0sICNwcm9qZWN0LXBvcHVwICB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgXFxuICAgIHRvcDogMXJlbTsgXFxuICAgIGxlZnQ6IDFyZW07IFxcbiAgICByaWdodDogMXJlbTsgXFxuICAgIGJvdHRvbTogMXJlbTsgXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbC0yO1xcbiAgICBib3gtc2hhZG93OiAwIDVweCAxMHB4IDAgcmdiYSgwLDAsMCwwLjI1KTtcXG4gICAgcGFkZGluZzogMnJlbTtcXG5cXG5cXG4gICAgZm9ybSB7XFxuICAgICAgICBtYXJnaW46IDFyZW0gMDtcXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7IFxcbiAgICAgICAgZ2FwOiAyMHB4OyBcXG4gICAgICAgIGxhYmVsIHtcXG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkOyBcXG4gICAgICAgIH1cXG4gICAgfVxcblxcbiAgICBidXR0b24ge1xcbiAgICAgICAgbWFyZ2luOiAxcmVtIDFyZW0gMXJlbSAwO1xcbiAgICB9XFxufVxcblxcbi5pdGVtLWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7IFxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAzZnIgMWZyIDFmcjtcXG4gICAgZ2FwOiAzcHg7XFxuICAgIHBhZGRpbmc6IDFyZW07IFxcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOyBcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgYm94LXNoYWRvdzogMCA1cHggMTBweCAwIHJnYmEoMCwwLDAsMC4yNSk7XFxufVxcblxcbi5jb21wbGV0ZWQtdGFzayB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJHByaW1hcnktY29sLTEsMC4yNSk7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xcbn1cXG5cXG4uc2luZ2xlLWl0ZW0tZGlzcGxheSB7XFxuICAgIHBhZGRpbmc6IDJyZW07IFxcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4OyBcXG4gICAgYm94LXNoYWRvdzogMCA1cHggMTBweCAwIHJnYmEoMCwwLDAsMC4yNSk7XFxuICAgIHdpZHRoOiA4MCU7IFxcbiAgICBtYXJnaW46IDFyZW0gYXV0bztcXG5cXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXFxcInRpdGxlIC4gZGF0ZVxcXCJcXG4gICAgICAgIFxcXCJwcmlvcml0eSAuIC4gXFxcIlxcbiAgICAgICAgXFxcImRlc2MgZGVzYyBkZXNjXFxcIlxcbiAgICAgICAgXFxcImNoZWNrbGlzdCAuIC4gXFxcIlxcbiAgICAgICAgXFxcIm5vdGVzIC4gLiBcXFwiXFxuICAgICAgICBcXFwiYnRucyBidG5zIGJ0bnNcXFwiXFxuICAgIDtcXG4gICAgZ2FwOiAyMHB4OyBcXG5cXG4gICAgLnRpdGxlIHtcXG4gICAgICAgIGdyaWQtYXJlYTogdGl0bGU7IFxcbiAgICB9XFxuXFxuICAgIC5kYXRlIHtcXG4gICAgICAgIGdyaWQtYXJlYTogZGF0ZTtcXG5cXG4gICAgfVxcbiAgICAucHJpb3JpdHkge1xcbiAgICAgICAgZ3JpZC1hcmVhOiBwcmlvcml0eTtcXG4gICAgfVxcbiAgICAuZGVzYyB7XFxuICAgICAgICBncmlkLWFyZWE6IGRlc2M7IFxcbiAgICB9XFxuICAgIC5jaGVja2xpc3Qge1xcbiAgICAgICAgZ3JpZC1hcmVhOiBjaGVja2xpc3Q7IFxcbiAgICB9XFxuICAgIC5ub3RlcyB7XFxuICAgICAgICBncmlkLWFyZWE6IG5vdGVzO1xcbiAgICB9XFxuICAgIC5idG4tZ3JvdXAge1xcbiAgICAgICAgZ3JpZC1hcmVhOiBidG5zOyBcXG4gICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xcbiAgICAgICAgZGlzcGxheTogZmxleDsgXFxuICAgICAgICBnYXA6IDIwcHg7IFxcbiAgICB9XFxuICAgIFxcbn1cIixcIiRwcmltYXJ5LWNvbC0xOiByZ2IoNjMsIDYyLCA3Myk7IFxcbiRwcmltYXJ5LWNvbC0yOiByZ2IoMjU1LDI1NSwyNTUpOyBcXG4kd2FybmluZy1jb2w6IHJnYigyMDQsIDUxLCAwKTsgXFxuJHdhcm5pbmctY29sLTI6IHJnYigyMzMsIDg4LCAzOSk7IFwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5zY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5zY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZmlsdGVySXRlbXMocHJvamVjdCkge1xuXG4gICAgbGV0IGl0ZW1zU3RvcmVkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnVE9QLXRvZG8taXRlbXMnKSkgfHwgW107IFxuICAgIFxuXG4gICAgaWYgKHByb2plY3QgPT0gJ2hvbWUnKSB7XG4gICAgICAgIHJldHVybiBpdGVtc1N0b3JlZC5maWx0ZXIoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBpdGVtLmNvbXBsZXRlID09ICBmYWxzZTtcbiAgICAgICAgfSk7IFxuICAgIH1cblxuICAgIGlmIChwcm9qZWN0ID09ICd0b2RheScpIHtcbiAgICAgICAgcmV0dXJuIGl0ZW1zU3RvcmVkLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW0uZGF0ZSA9PSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3Vic3RyaW5nKDAsIDEwKSAmJiBpdGVtLmNvbXBsZXRlID09ICBmYWxzZTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBpZiAocHJvamVjdCA9PSAnd2VlaycpIHtcbiAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTsgICAgICAgICBcbiAgICAgICAgbGV0IGxhc3RXZWVrID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIG5vdy5nZXRNb250aCgpLCBub3cuZ2V0RGF0ZSgpIC0gNykudG9JU09TdHJpbmcoKS5zdWJzdHJpbmcoMCwgMTApO1xuICAgICAgICByZXR1cm4gaXRlbXNTdG9yZWQuZmlsdGVyKChpdGVtKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbS5kYXRlID49ICBsYXN0V2VlayAmJiBpdGVtLmNvbXBsZXRlID09ICBmYWxzZTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBpZiAocHJvamVjdCA9PSAnY29tcGxldGVkJykge1xuICAgICAgICByZXR1cm4gaXRlbXNTdG9yZWQuZmlsdGVyKChpdGVtKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gaXRlbS5jb21wbGV0ZSA9PSAgdHJ1ZTtcbiAgICAgICAgfSlcbiAgICB9XG4gICAgaWYgKHByb2plY3QgPT0gJ2xhdGUnKSB7XG4gICAgICAgIHJldHVybiBpdGVtc1N0b3JlZC5maWx0ZXIoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgIHJldHVybiBpdGVtLmRhdGUgPCBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3Vic3RyaW5nKDAsIDEwKSAmJiBpdGVtLmNvbXBsZXRlID09ICBmYWxzZTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gaXRlbXNTdG9yZWQuZmlsdGVyKChpdGVtKSA9PiB7XG4gICAgICAgIHJldHVybiBpdGVtLnByb2plY3QudG9Mb3dlckNhc2UoKSA9PSBwcm9qZWN0ICYmIGl0ZW0uY29tcGxldGUgPT0gIGZhbHNlO1xuICAgIH0pXG5cbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUb0RvSXRlbSh0aXRsZSwgZGVzY3JpcHRpb24sIGRhdGUsIHByaW9yaXR5LCBub3RlcywgY2hlY2tsaXN0LCBwcm9qZWN0KSB7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0aXRsZSxcbiAgICAgICAgZGVzY3JpcHRpb24sIFxuICAgICAgICBkYXRlLCBcbiAgICAgICAgcHJpb3JpdHksIFxuICAgICAgICBub3RlcywgXG4gICAgICAgIGNoZWNrbGlzdCwgXG4gICAgICAgIHByb2plY3QsXG4gICAgICAgIGNvbXBsZXRlOiBmYWxzZVxuICAgIH1cbn0iLCJpbXBvcnQgbWFuYWdlTmV3SXRlbSBmcm9tIFwiLi9tYW5hZ2VOZXdJdGVtXCI7XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWRkTmV3SXRlbShlZGl0SXRlbSkge1xuXG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IFxuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuICAgIGNvbnN0IGFkZEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNvbnN0IGNsb3NlQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG5cbiAgICBsZXQgaXRlbXNTdG9yZWQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdUT1AtdG9kby1pdGVtcycpKSB8fCBbXTsgXG4gICAgbGV0IGl0ZW1Ub1VzZSA9IGl0ZW1zU3RvcmVkLmZpbHRlcigodGFzaykgPT4gdGFzay50aXRsZSA9PT0gZWRpdEl0ZW0pWzBdIHx8ICcnO1xuICAgIGNvbnN0IG9iaiA9IHtcbiAgICAgICAgdGFza05hbWU6IHtcbiAgICAgICAgICAgIGlkOiAndGFzay1uYW1lJywgXG4gICAgICAgICAgICBsYWJlbDogJ1Rhc2sgTmFtZTonLFxuICAgICAgICAgICAgdHlwZTogJ3RleHQnLCBcbiAgICAgICAgICAgIGVsOiAnaW5wdXQnLCBcbiAgICAgICAgICAgIHZhbHVlczogaXRlbVRvVXNlLnRpdGxlIHx8ICcnXG4gICAgICAgIH0sXG4gICAgICAgIHRhc2tEZXNjOiB7XG4gICAgICAgICAgICBpZDogJ3Rhc2stZGVzYycsIFxuICAgICAgICAgICAgbGFiZWw6ICdUYXNrIERlc2NyaXB0aW9uOicsXG4gICAgICAgICAgICB0eXBlOiAndGV4dCcsIFxuICAgICAgICAgICAgZWw6ICdpbnB1dCcsIFxuICAgICAgICAgICAgdmFsdWVzOiBpdGVtVG9Vc2UuZGVzY3JpcHRpb24gfHwgJydcbiAgICAgICAgfSxcbiAgICAgICAgdGFza0RhdGU6IHtcbiAgICAgICAgICAgIGlkOiAndGFzay1kYXRlJywgXG4gICAgICAgICAgICBsYWJlbDogJ1Rhc2sgRGF0ZTonLFxuICAgICAgICAgICAgdHlwZTogJ2RhdGUnLCBcbiAgICAgICAgICAgIGVsOiAnaW5wdXQnLCBcbiAgICAgICAgICAgIHZhbHVlczogaXRlbVRvVXNlLmRhdGUgfHwgJydcbiAgICAgICAgfSxcbiAgICAgICAgdGFza1ByaW9ydHk6IHtcbiAgICAgICAgICAgIGlkOiAndGFzay1wcmlvcnR5JywgXG4gICAgICAgICAgICBsYWJlbDogJ1Rhc2sgUHJpb3JpdHk6JyxcbiAgICAgICAgICAgIHR5cGU6ICdzZWxlY3QnLFxuICAgICAgICAgICAgZWw6ICdzZWxlY3QnLFxuICAgICAgICAgICAgb3B0aW9uOiBbJ2xvdycsICdtZWRpdW0nLCAnaGlnaCcsICdETyBJVCBOT1chJ10sIFxuICAgICAgICAgICAgdmFsdWVzOiBpdGVtVG9Vc2UucHJpb3JpdHkgfHwgJydcbiAgICAgICAgfSxcbiAgICAgICAgdGFza05vdGVzOiB7XG4gICAgICAgICAgICBpZDogJ3Rhc2stbm90ZXMnLCBcbiAgICAgICAgICAgIGxhYmVsOiAnVGFzayBOb3RlczonLFxuICAgICAgICAgICAgdHlwZTogJ3RleHQnLCBcbiAgICAgICAgICAgIGVsOiAnaW5wdXQnLCBcbiAgICAgICAgICAgIHZhbHVlczogaXRlbVRvVXNlLm5vdGVzIHx8ICcnXG4gICAgICAgIH0sXG4gICAgICAgIHRhc2tDaGVja2xpc3Q6IHtcbiAgICAgICAgICAgIGlkOiAndGFzay1jaGVja2xpc3QnLCBcbiAgICAgICAgICAgIGxhYmVsOiAnVGFzayBjaGVja2xpc3QgKGNvbW1hIHNlcGFyYXRlZCk6JyxcbiAgICAgICAgICAgIHR5cGU6ICd0ZXh0JywgXG4gICAgICAgICAgICBlbDogJ2lucHV0JywgXG4gICAgICAgICAgICB2YWx1ZXM6IGl0ZW1Ub1VzZS5jaGVja2xpc3QgfHwgJydcbiAgICAgICAgfSxcbiAgICAgICAgdGFza1Byb2plY3Q6IHtcbiAgICAgICAgICAgIGlkOiAndGFzay1wcm9qZWN0JywgXG4gICAgICAgICAgICBsYWJlbDogJ1Rhc2sgUHJvamVjdDonLFxuICAgICAgICAgICAgdHlwZTogJ3NlbGVjdCcsIC8vcHJvYmFibHkgc2hvdWxkIGJlIHNlbGVjdFxuICAgICAgICAgICAgZWw6ICdzZWxlY3QnLCBcbiAgICAgICAgICAgIG9wdGlvbjogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnVE9QLXByb2plY3QtbmF2JykpLCBcbiAgICAgICAgICAgIHZhbHVlczogaXRlbVRvVXNlLnByb2plY3QgfHwgJydcbiAgICAgICAgfSxcbiAgICB9XG4gICAgXG4gICAgdGl0bGUuaW5uZXJUZXh0ID0gJ0FkZCBuZXcgaXRlbSc7IFxuXG4gICAgaWYgKGVkaXRJdGVtICE9IG51bGwpIHtcbiAgICAgICAgZm9yIChsZXQgdGFzayBpbiBvYmopIHtcbiAgICAgICAgICAgIGxldCBpbnB1dCA9IGNyZWF0ZUlucHV0KG9ialt0YXNrXS5pZCwgb2JqW3Rhc2tdLmVsLG9ialt0YXNrXS5sYWJlbCwgb2JqW3Rhc2tdLnR5cGUsIG9ialt0YXNrXS5vcHRpb24sIG9ialt0YXNrXS52YWx1ZXMpOyBcbiAgICAgICAgICAgIGZvcm0uYXBwZW5kKGlucHV0KVxuICAgICAgICB9XG4gICAgICAgIGxldCBpbnB1dCA9IGNyZWF0ZUlucHV0KCd0YXNrLWNvbXBsZXRlJywgJ3NlbGVjdCcsICdDb21wbGV0ZWQ/JywgJ3NlbGVjdCcsIFtmYWxzZSwgdHJ1ZV0sIGZhbHNlKVxuICAgICAgICBmb3JtLmFwcGVuZChpbnB1dClcbiAgICAgICAgY29uc29sZS5sb2coZm9ybSk7IFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGZvciAobGV0IHRhc2sgaW4gb2JqKSB7XG4gICAgICAgICAgICBsZXQgaW5wdXQgPSBjcmVhdGVJbnB1dChvYmpbdGFza10uaWQsIG9ialt0YXNrXS5lbCxvYmpbdGFza10ubGFiZWwsIG9ialt0YXNrXS50eXBlLCBvYmpbdGFza10ub3B0aW9uKTsgXG4gICAgICAgICAgICBmb3JtLmFwcGVuZChpbnB1dClcbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgXG4gICAgXG4gICAgYWRkQnRuLmlubmVyVGV4dCA9ICdBZGQnOyBcbiAgICBhZGRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIGlmIChlZGl0SXRlbSAhPSBudWxsKSB7XG4gICAgICAgICAgICBtYW5hZ2VFZGl0KGVkaXRJdGVtKTsgXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBtYW5hZ2VBZGQoKTsgXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjbG9zZUJ0bi5pbm5lclRleHQgPSAnQ2xvc2UnOyBcbiAgICBjbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsb3NlRm9ybSk7XG5cbiAgICBkaXYuYXBwZW5kKHRpdGxlKTsgXG4gICAgZGl2LmFwcGVuZChmb3JtKTsgXG4gICAgZGl2LmFwcGVuZChhZGRCdG4pOyBcbiAgICBkaXYuYXBwZW5kKGNsb3NlQnRuKTsgXG4gICAgZGl2LmNsYXNzTmFtZSA9ICdhZGQtaXRlbSc7IFxuICAgIGRpdi5pZCA9ICdhZGQtaXRlbS1mb3JtJ1xuICAgIHJldHVybiBkaXY7IFxufVxuXG5mdW5jdGlvbiBjbG9zZUZvcm0oKSB7XG4gICAgbGV0IHJlbW92ZUl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkLWl0ZW0tZm9ybScpO1xuICAgIHJlbW92ZUl0ZW0ucmVtb3ZlKCk7IFxufVxuXG5mdW5jdGlvbiBjcmVhdGVJbnB1dChpZCxlbCwgbGFiZWxUZXh0LCB0eXBlLCBvcHRpb25zPVtdLCB2YWx1ZXM9JycgKSB7XG4gICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChlbCk7IFxuXG4gICAgbGFiZWwuZm9yID0gaWQ7IFxuICAgIGxhYmVsLmFwcGVuZChsYWJlbFRleHQpOyBcbiAgICBpZiAoZWwgPT0gJ2lucHV0Jykge1xuICAgICAgICBpbnB1dC50eXBlID0gdHlwZTtcbiAgICB9XG5cbiAgICAvLyBoYW5kbGUgZGF0ZXMgLSBkZWZhdWx0IHZhbHVlXG4gICAgaWYgKHR5cGU9PSdkYXRlJykge1xuICAgICAgICBpbnB1dC5kZWZhdWx0VmFsdWUgPSBuZXcgRGF0ZSgpO1xuICAgICAgICBpbnB1dC52YWx1ZSA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zdWJzdHJpbmcoMCwgMTApO1xuICAgIH07XG5cbiAgICBpZiAob3B0aW9ucy5sZW5ndGggPiAwKSB7XG4gICAgICAgIG9wdGlvbnMuZm9yRWFjaChvcHRpb24gPT4ge1xuICAgICAgICAgICAgY29uc3Qgb3B0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7IFxuICAgICAgICAgICAgb3B0LmlubmVyVGV4dCA9IG9wdGlvbjsgXG4gICAgICAgICAgICBvcHQudmFsdWUgPSBvcHRpb247IFxuICAgICAgICAgICAgaW5wdXQuYXBwZW5kKG9wdCk7IFxuICAgICAgICB9KVxuICAgIH1cbiAgICBpbnB1dC5pZCA9IGlkOyBcblxuICAgIGlmICh2YWx1ZXMhPScnKSB7XG4gICAgICAgIGlucHV0LnZhbHVlID0gdmFsdWVzOyBcbiAgICB9XG5cbiAgICBsYWJlbC5hcHBlbmQoaW5wdXQpOyBcblxuICAgIHJldHVybiBsYWJlbDtcbn1cblxuZnVuY3Rpb24gbWFuYWdlQWRkKCkge1xuICAgIG1hbmFnZU5ld0l0ZW0oKTsgXG4gICAgLy8gY2xvc2UgZm9ybSBhZnRlcndhcmRzXG4gICAgbGV0IHJlbW92ZUl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkLWl0ZW0tZm9ybScpO1xuICAgIHJlbW92ZUl0ZW0ucmVtb3ZlKCk7IFxufTsgXG5cbmZ1bmN0aW9uIG1hbmFnZUVkaXQoaXRlbSkge1xuXG4gICAgbGV0IGl0ZW1zU3RvcmVkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnVE9QLXRvZG8taXRlbXMnKSkgfHwgW107IFxuICAgIGl0ZW1zU3RvcmVkLm1hcCgodGFzayk9PntcbiAgICAgICAgaWYgKHRhc2sudGl0bGUgPT09IGl0ZW0pIHtcbiAgICAgICAgICAgIHRhc2sudGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFzay1uYW1lJykudmFsdWU7XG4gICAgICAgICAgICB0YXNrLmRlc2NyaXB0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stZGVzYycpLnZhbHVlO1xuICAgICAgICAgICAgdGFzay5kYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stZGF0ZScpLnZhbHVlO1xuICAgICAgICAgICAgdGFzay5wcmlvcnR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stcHJpb3J0eScpLnZhbHVlO1xuICAgICAgICAgICAgdGFzay5ub3RlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLW5vdGVzJykudmFsdWU7XG4gICAgICAgICAgICB0YXNrLmNoZWNrbGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLWNoZWNrbGlzdCcpLnZhbHVlO1xuICAgICAgICAgICAgdGFzay5wcm9qZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stcHJvamVjdCcpLnZhbHVlO1xuICAgICAgICAgICAgdGFzay5jb21wbGV0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLWNvbXBsZXRlJykudmFsdWUgPT0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZyh0YXNrLnRpdGxlLFwifFwiLHRhc2suY29tcGxldGUpOyBcbiAgICB9KVxuXG5cblxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdUT1AtdG9kby1pdGVtcycsIEpTT04uc3RyaW5naWZ5KGl0ZW1zU3RvcmVkKSk7IFxuXG4gICAgLy8gY2xvc2UgZm9ybSBhZnRlcndhcmRzXG4gICAgbGV0IHJlbW92ZUl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkLWl0ZW0tZm9ybScpO1xuICAgIHJlbW92ZUl0ZW0ucmVtb3ZlKCk7IFxuICAgIC8vIHJlbG9hZCBtb3ZlcyBiYWNrIHRvIGhvbWUgcGFnZVxuICAgIC8vIGxvY2F0aW9uLnJlbG9hZCgpO1xufSIsImltcG9ydCBUb0RvSXRlbSBmcm9tIFwiLi9Ub0RvSXRlbVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWFuYWdlTmV3SXRlbSgpIHtcblxuXG4gICAgbGV0IGl0ZW1zU3RvcmVkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnVE9QLXRvZG8taXRlbXMnKSkgfHwgW107IFxuICAgIGNvbnN0IHRhc2tUaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLW5hbWUnKS52YWx1ZTtcbiAgICBjb25zdCB0YXNrRGVzYyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLWRlc2MnKS52YWx1ZTtcbiAgICBjb25zdCB0YXNrRGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLWRhdGUnKS52YWx1ZTtcbiAgICBjb25zdCB0YXNrUHJpb3J0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLXByaW9ydHknKS52YWx1ZTtcbiAgICBjb25zdCB0YXNrTm90ZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFzay1ub3RlcycpLnZhbHVlO1xuICAgIGNvbnN0IHRhc2tDaGVja2xpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFzay1jaGVja2xpc3QnKS52YWx1ZTtcbiAgICBjb25zdCB0YXNrUHJvamVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrLXByb2plY3QnKS52YWx1ZTtcblxuXG4gICAgY29uc3QgdGFzayA9IFRvRG9JdGVtKHRhc2tUaXRsZSwgdGFza0Rlc2MsIHRhc2tEYXRlLCB0YXNrUHJpb3J0eSwgdGFza05vdGVzLCB0YXNrQ2hlY2tsaXN0LCB0YXNrUHJvamVjdCk7IFxuICAgIGNvbnNvbGUubG9nKHRhc2spOyBcblxuICAgIC8vZ2V0IGxvY2FsIHN0b3JhZ2Ugb2YgaXRlbXNcbiAgICBpdGVtc1N0b3JlZC5wdXNoKHRhc2spOyBcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnVE9QLXRvZG8taXRlbXMnLCBKU09OLnN0cmluZ2lmeShpdGVtc1N0b3JlZCkpOyBcbiAgICBjb25zb2xlLmxvZyhsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnVE9QLXRvZG8taXRlbXMnKSk7IFxuICAgIFxufSIsImltcG9ydCBBZGROZXdJdGVtIGZyb20gJy4vQWRkTmV3SXRlbSc7IFxuaW1wb3J0IENvbXBsZXRlSXRlbSBmcm9tICcuL0NvbXBsZXRlSXRlbSc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW5kZXJQYWdlSXRlbShpdGVtcykge1xuXG4gICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IFxuICAgIGNvbnN0IG5ld0l0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTsgXG4gICAgbmV3SXRlbS5pbm5lclRleHQgPSAnKydcblxuICAgIC8vaWYgaXRlbXMgYXJlIGJsYW5rIHJldHVybiBub3RoaW5nOyBcbiAgICBpZiAoaXRlbXMubGVuZ3RoID09IDAgKSB7XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmQobmV3SXRlbSk7IFxuICAgICAgICByZXR1cm4gY29udGFpbmVyXG4gICAgfSAgICBcbiAgICBcbiAgICAvLyBuZWVkIHRvIGRvIHNvbWV0aGluZyB0byBvbmx5IHNob3cgdGFza3MgdG8gZG9cbiAgICBpdGVtcy5mb3JFYWNoKGl0ZW09PiB7XG4gICAgICAgIGNvbnN0IGl0ZW1Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsgXG4gICAgICAgIGNvbnN0IGl0ZW1UaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gzJyk7IFxuICAgICAgICBjb25zdCBpdGVtRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsgXG4gICAgICAgIGNvbnN0IGNvbXBsZXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7IFxuICAgICAgICBjb25zdCB2aWV3QnRiID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7IFxuXG5cbiAgICAgICAgY29tcGxldGUuaW5uZXJUZXh0ID0gJ2NvbXBsZXRlJztcbiAgICAgICAgY29tcGxldGUuY2xhc3NOYW0gPSAnY29tcGxldGUtYnRuJzsgXG4gICAgICAgIHZpZXdCdGIuaW5uZXJUZXh0ID0gJ1ZpZXcgVGFzayc7XG4gICAgICAgIHZpZXdCdGIuY2xhc3NOYW0gPSAndmlldy1idG4nOyBcbiAgICAgICAgaXRlbVRpdGxlLmlubmVyVGV4dCA9IGl0ZW0udGl0bGU7XG4gICAgICAgIGl0ZW1EYXRlLmlubmVyVGV4dCA9IGl0ZW0uZGF0ZTsgXG5cbiAgICAgICAgLy8gYnV0dG9uIGV2ZW50IGxpc3RlbmVyXG4gICAgICAgIGNvbXBsZXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIGNvbXBsZXRlVGFzayhpdGVtVGl0bGUuaW5uZXJUZXh0KTsgXG4gICAgICAgIH0pXG5cbiAgICAgICAgdmlld0J0Yi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KXtcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ3ZpZXcgYnRuIGNsaWNrZWQnKTsgXG4gICAgICAgIH0sIHRydWUpXG5cbiAgICAgICAgaXRlbUNvbnRhaW5lci5hcHBlbmQoaXRlbURhdGUpO1xuICAgICAgICBpdGVtQ29udGFpbmVyLmFwcGVuZChpdGVtVGl0bGUpO1xuICAgICAgICBpdGVtQ29udGFpbmVyLmFwcGVuZChjb21wbGV0ZSk7XG4gICAgICAgIGl0ZW1Db250YWluZXIuYXBwZW5kKHZpZXdCdGIpO1xuXG5cbiAgICAgICAgaXRlbUNvbnRhaW5lci5jbGFzc05hbWUgPSAnaXRlbS1jb250YWluZXInXG4gICAgICAgIFxuICAgICAgICBpZiAoaXRlbS5jb21wbGV0ZSkge1xuICAgICAgICAgICAgaXRlbUNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdjb21wbGV0ZWQtdGFzaycpOyBcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaXRlbUNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICBlZGl0SXRlbSApXG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmQoaXRlbUNvbnRhaW5lcik7IFxuICAgIH0pXG5cbiAgICBuZXdJdGVtLmNsYXNzTmFtZT1cIm5ldy1pdGVtLWJ0blwiXG4gICAgbmV3SXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zdCBuZXdJdGVtUG9wVXAgPSBuZXdJdGVtQnRuKCk7IFxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZChuZXdJdGVtUG9wVXApOyBcbiAgICB9KTtcbiAgICBcbiAgICBjb250YWluZXIuYXBwZW5kKG5ld0l0ZW0pOyBcblxuICAgIHJldHVybiBjb250YWluZXI7IFxufVxuXG5mdW5jdGlvbiBjb21wbGV0ZVRhc2soaXRlbSkge1xuICAgIGNvbnNvbGUubG9nKGl0ZW0pOyBcbiAgICBDb21wbGV0ZUl0ZW0oaXRlbSk7IFxuICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xufVxuXG5mdW5jdGlvbiBuZXdJdGVtQnRuKCl7XG4gICAgcmV0dXJuIEFkZE5ld0l0ZW0oKTsgXG59XG5cbmZ1bmN0aW9uIGVkaXRJdGVtKCkge1xuICAgIGxldCB0aXRsZVRvRWRpdCA9IHRoaXMucXVlcnlTZWxlY3RvcignaDMnKS5pbm5lclRleHRcbiAgICBjb25zdCBuZXdJdGVtUG9wVXAgPSBBZGROZXdJdGVtKHRpdGxlVG9FZGl0KTsgXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmQobmV3SXRlbVBvcFVwKTsgXG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29tcGxldGVJdGVtKGl0ZW0pIHtcblxuICAgIGxldCBjdXJyZW50SXRlbSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ1RPUC10b2RvLWl0ZW1zJykpOyBcbiAgICBcbiAgICBjdXJyZW50SXRlbS5tYXAoKHRhc2spID0+IHtcbiAgICAgICAgaWYgKHRhc2sudGl0bGUgPT09IGl0ZW0pIHtcbiAgICAgICAgICAgIHRhc2suY29tcGxldGUgPSB0cnVlOyBcbiAgICAgICAgfVxuICAgIH0pOyBcblxuICAgIC8vc2V0IGJhY2sgdG8gbG9jYWxTdG9yYWdlXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ1RPUC10b2RvLWl0ZW1zJywgSlNPTi5zdHJpbmdpZnkoY3VycmVudEl0ZW0pKTsgXG4gICAgXG4gICAgXG5cblxufSIsImltcG9ydCByZW5kZXJQYWdlSXRlbSBmcm9tIFwiLi9yZW5kZXJQYWdlSXRlbVwiO1xuaW1wb3J0IFRvRG9JdGVtIGZyb20gXCIuL1RvRG9JdGVtXCI7IC8vIGZvciB0ZXN0aW5nIHB1cnBvc2VzXG5cblxuLy8gZm9yIHRlc3RpbmcgcHVycG9zZXNcblxuY29uc3QgaXRlbXNUZW1wID0gW1xuICAgIFRvRG9JdGVtKCdyYW5kb21UaXRsZTEnLCAnYmxhaCBkZXNjJywgJ2RhdGUnLCAnMScsJycsIFsnaXRlbTEnLCAnaXRlbTInXSksIFxuICAgIFRvRG9JdGVtKCdyYW5kb21UaXRsZTInLCAnYmxhaCBkZXNjJywgJ2RhdGUnLCAnMScsJycsIFsnaXRlbTEnLCAnaXRlbTInXSksIFxuICAgIFRvRG9JdGVtKCdyYW5kb21UaXRsZTMnLCAnYmxhaCBkZXNjJywgJ2RhdGUnLCAnMScsJycsIFsnaXRlbTEnLCAnaXRlbTInXSksIFxuICAgIFRvRG9JdGVtKCdyYW5kb21UaXRsZTQnLCAnYmxhaCBkZXNjJywgJ2RhdGUnLCAnMScsJycsIFsnaXRlbTEnLCAnaXRlbTInXSlcbl1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVuZGVyUGFnZUNvbnRlbnQobmFtZSwgaXRlbXMpIHtcblxuICAgIGNvbnN0IHBhZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsgXG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpOyBcbiAgICBjb25zdCBwYWdlSXRlbXMgPSBuZXcgcmVuZGVyUGFnZUl0ZW0oaXRlbXMpOyBcbiAgICBcbiAgICB0aXRsZS5pbm5lclRleHQgPSBuYW1lOyBcbiAgICBwYWdlLmlkID0gXCJjb250ZW50LXBhZ2VcIjsgXG4gICAgcGFnZS5jbGFzc05hbWUgPSAnY29udGVudCc7XG5cblxuICAgIHBhZ2UuYXBwZW5kKHRpdGxlKTsgXG4gICAgcGFnZS5hcHBlbmQocGFnZUl0ZW1zKTtcbiAgICByZXR1cm4gcGFnZTsgXG59XG5cblxuIiwiaW1wb3J0IEdlbmVyaWNQYWdlIGZyb20gJy4uL0dlbmVyaWNQYWdlLmpzJzsgXG5pbXBvcnQgZmlsdGVySXRlbXMgZnJvbSAnLi4vZmlsdGVySXRlbXMuanMnO1xuaW1wb3J0IHJlbmRlclBhZ2VDb250ZW50IGZyb20gJy4uL3JlbmRlclBhZ2VDb250ZW50JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbmF2aWdhdGF0ZVNlY3Rpb25zKCkge1xuXG4gICAgbGV0IGxpcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ25hdiBsaScpOyBcbiAgICBsaXMuZm9yRWFjaChsaSA9PiB7XG4gICAgICAgIGxpLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7fSk7IFxuICAgICAgICBsaS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgbmF2VG9OZXdQYWdlKGxpLmlubmVyVGV4dClcbiAgICAgICAgICAgIGNsZWFyQWN0aXZlKGxpKTtcbiAgICAgICAgfSk7IFxuICAgICAgICBcbiAgICB9KVxuXG5cbn1cblxuXG5mdW5jdGlvbiBjbGVhckFjdGl2ZShpdGVtKSB7XG4gICAgbGV0IGxpcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ25hdiBsaScpOyBcbiAgICBsaXMuZm9yRWFjaChsaSA9PiB7XG4gICAgICAgIGxpLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpXG4gICAgfSk7IFxuICAgIGl0ZW0uY2xhc3NOYW1lID0gJ2FjdGl2ZSc7XG59XG5cbmZ1bmN0aW9uIG5hdlRvTmV3UGFnZShwYWdlKSB7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvbnRlbnQtcGFnZScpLnJlbW92ZSgpOyBcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcm9vdCAuY29udGFpbmVyJykuYXBwZW5kKHJlbmRlclBhZ2VDb250ZW50KHBhZ2UsIGZpbHRlckl0ZW1zKHBhZ2UudG9Mb3dlckNhc2UoKSkpKTsgXG59IiwiaW1wb3J0IG5hdmlnYXRhdGVTZWN0aW9ucyBmcm9tIFwiLi9uYXZpZ2F0ZVNlY3Rpb25zXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOZXdQcm9qZWN0KCkge1xuICAgIGNvbnN0IHBvcHVwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7IFxuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTsgXG4gICAgY29uc3QgbGFiZWxTdHIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIGNvbnN0IGlucHV0U3RyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTsgXG4gICAgY29uc3QgYWRkQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgY29uc3QgY2xvc2VCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxuXG4gICAgaW5wdXRTdHIudHlwZSA9ICd0ZXh0JzsgXG4gICAgbGFiZWxTdHIuYXBwZW5kKCdQcm9qZWN0IG5hbWU6Jyk7IFxuICAgIGxhYmVsU3RyLmFwcGVuZChpbnB1dFN0cik7IFxuXG5cbiAgICBhZGRCdG4uaW5uZXJUZXh0ID0gJ2FkZCBwcm9qZWN0JztcbiAgICBjbG9zZUJ0bi5pbm5lclRleHQgPSAnY2xvc2UnO1xuXG4gICAgYWRkQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYWRkSXRlbSk7IFxuICAgIGNsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xvc2VQb3B1cCk7IFxuXG4gICAgdGl0bGUuaW5uZXJUZXh0ID0gJ0FkZCBuZXcgcHJvamVjdCdcblxuICAgIHBvcHVwLmFwcGVuZCh0aXRsZSk7XG4gICAgcG9wdXAuYXBwZW5kKGxhYmVsU3RyKTsgXG4gICAgcG9wdXAuYXBwZW5kKGFkZEJ0bik7IFxuICAgIHBvcHVwLmFwcGVuZChjbG9zZUJ0bik7IFxuICAgIHBvcHVwLmlkID0gJ3Byb2plY3QtcG9wdXAnXG4gICAgXG5cbiAgICByZXR1cm4gcG9wdXA7IFxuXG59XG5cblxuZnVuY3Rpb24gYWRkSXRlbSgpIHtcbiAgICBjb25zb2xlLmxvZygnYWRkIGl0ZW0gdG8gcHJvamVjdHMnKTsgXG4gICAgbGV0IGl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOyBcbiAgICBpdGVtLmlubmVyVGV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0LXBvcHVwIGlucHV0JykudmFsdWU7IFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0LW5hdicpLmFwcGVuZChpdGVtKTsgXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2plY3QtcG9wdXAnKS5yZW1vdmUoKTsgXG4gICAgdXBkYXRlTG9jYWxTdG9yYWdlKCk7IFxuICAgIG5hdmlnYXRhdGVTZWN0aW9ucygpOyBcbn1cblxuZnVuY3Rpb24gY2xvc2VQb3B1cCgpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdC1wb3B1cCcpLnJlbW92ZSgpOyBcbn1cblxuZnVuY3Rpb24gdXBkYXRlTG9jYWxTdG9yYWdlKCkge1xuICAgIGNvbnN0IGxpcyA9ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjcHJvamVjdC1uYXYgbGknKTtcbiAgICBsZXQgbGlUb1N0b3JhZ2UgPSBbXTsgXG4gICAgbGlzLmZvckVhY2gobGkgPT4ge1xuICAgICAgICBsaVRvU3RvcmFnZS5wdXNoKGxpLmlubmVyVGV4dCk7IFxuICAgIH0pIFxuICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnVE9QLXByb2plY3QtbmF2JykpIHtcbiAgICAgICAgY29uc3QgYWxyZWFkeVN0b3JlZCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ1RPUC1wcm9qZWN0LW5hdicpKTsgXG4gICAgICAgIGFscmVhZHlTdG9yZWQuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgIGlmIChsaVRvU3RvcmFnZS5pbmRleE9mKGl0ZW0pID09IC0xKSB7XG4gICAgICAgICAgICAgICAgbGlUb1N0b3JhZ2UucHVzaChpdGVtKTtcbiAgICAgICAgICAgIH0gXG4gICAgICAgIH0pXG4gICAgfVxuICAgIFxuICAgIC8vY2xlYXIgdGhlIHN0b3JhZ2UgdG8gc3RvcCBkdXBpbmdcbiAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnVE9QLXByb2plY3QtbmF2Jyk7IFxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdUT1AtcHJvamVjdC1uYXYnLEpTT04uc3RyaW5naWZ5KGxpVG9TdG9yYWdlKSlcbn0iLCJpbXBvcnQgTmV3UHJvamVjdCBmcm9tIFwiLi9OZXdQcm9qZWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE5hdmlnYXRpb25ET00oKSB7XG4gICAgY29uc3QgbmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbmF2Jyk7XG4gICAgY29uc3QgdWxTdGF0aWMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpIFxuICAgIGNvbnN0IGhvbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOyBcbiAgICBjb25zdCB0b2RheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgY29uc3Qgd2VlayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgY29uc3QgY29tcGxldGVUYXNrcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgY29uc3QgbGF0ZVRhc2tzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICBjb25zdCB1bFByb2plY3RzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTsgXG4gICAgY29uc3QgYWRkQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7IFxuICAgIGNvbnN0IHByb2plY3RUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7IFxuICAgIGNvbnN0IGRlbGV0ZVN0b3JhZ2VCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTsgXG5cblxuICAgIHByb2plY3RUaXRsZS5pbm5lclRleHQgPSAnUHJvamVjdHMnXG5cbiAgICAvLyBzdGF0aWMgdWwgXG4gICAgaG9tZS5pbm5lclRleHQgPSAnSG9tZSc7XG4gICAgdG9kYXkuaW5uZXJUZXh0ID0gJ1RvZGF5JztcbiAgICB3ZWVrLmlubmVyVGV4dCA9ICdXZWVrJztcbiAgICBjb21wbGV0ZVRhc2tzLmlubmVyVGV4dCA9ICdDb21wbGV0ZWQnO1xuICAgIGxhdGVUYXNrcy5pbm5lclRleHQgPSAnTGF0ZSc7XG4gICAgXG5cbiAgICB1bFN0YXRpYy5hcHBlbmQoaG9tZSk7XG4gICAgdWxTdGF0aWMuYXBwZW5kKHRvZGF5KTtcbiAgICB1bFN0YXRpYy5hcHBlbmQod2Vlayk7XG4gICAgdWxTdGF0aWMuYXBwZW5kKGNvbXBsZXRlVGFza3MpO1xuICAgIHVsU3RhdGljLmFwcGVuZChsYXRlVGFza3MpO1xuXG5cbiAgICAvLyBkeW5hbWljIHByb2plY3RzXG4gICAgLy93aWxsIG5lZWQgdG8gbG9vayBmb3IgbG9jYWwgc3RvcmFnZSBoZXJlIGxhdGVyXG5cbiAgICB1bFByb2plY3RzLmFwcGVuZChwcm9qZWN0VGl0bGUpOyBcbiAgICB1bFByb2plY3RzLmlkID0gJ3Byb2plY3QtbmF2J1xuXG4gICAgLy9jaGVjayBsb2NhbCBzdG9yYWdlIGZvciBwcm9qZWN0c1xuICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnVE9QLXByb2plY3QtbmF2JykpIHtcbiAgICAgICAgY29uc3QgYWxyZWFkeVN0b3JlZCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ1RPUC1wcm9qZWN0LW5hdicpKTtcblxuICAgICAgICBhbHJlYWR5U3RvcmVkLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7IFxuICAgICAgICAgICAgbGkuaW5uZXJUZXh0ID0gaXRlbTsgXG4gICAgICAgICAgICB1bFByb2plY3RzLmFwcGVuZChsaSk7IFxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGFkZEJ0bi5pbm5lclRleHQgPSAnYWRkIHByb2plY3QnO1xuICAgIGFkZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgYWRkSXRlbSgpXG4gICAgfSlcblxuICAgIGRlbGV0ZVN0b3JhZ2VCdG4uaW5uZXJUZXh0ID0gJ3dhcm5pbmc6IGRlbGV0ZSBhbGwgc3Ryb2FnZT8nOyBcbiAgICBkZWxldGVTdG9yYWdlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdUT1AtcHJvamVjdC1uYXYnKTsgXG4gICAgICAgIC8vIHJlZnJlc2ggcGFnZSAtIGlzIHRoaXMgYSBnb29kIGlkZWE/IFxuICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsgXG4gICAgfSlcbiAgICBkZWxldGVTdG9yYWdlQnRuLmNsYXNzTmFtZT0nd2FybmluZy1idG4nXG5cbiAgICBuYXYuYXBwZW5kKHVsU3RhdGljKVxuICAgIG5hdi5hcHBlbmQodWxQcm9qZWN0cyk7IFxuICAgIG5hdi5hcHBlbmQoYWRkQnRuKTtcbiAgICBuYXYuYXBwZW5kKGRlbGV0ZVN0b3JhZ2VCdG4pOyBcbiAgICBcbiAgICByZXR1cm4gbmF2OyBcbn1cblxuZnVuY3Rpb24gYWRkSXRlbSgpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcm9vdCcpLmFwcGVuZChOZXdQcm9qZWN0KCkpOyBcbn1cbiIsImltcG9ydCBOYXZpZ2F0aW9uRE9NIGZyb20gXCIuL25hdmlnYXRpb24vbmF2aWdhdGlvbkRPTVwiO1xuaW1wb3J0IG5hdmlnYXRhdGVTZWN0aW9ucyBmcm9tIFwiLi9uYXZpZ2F0aW9uL25hdmlnYXRlU2VjdGlvbnNcIjtcbmltcG9ydCBmaWx0ZXJJdGVtcyBmcm9tIFwiLi9maWx0ZXJJdGVtc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gR2VuZXJpY1BhZ2UocHJvamVjdCwgbmFtZSwgaXRlbXMpIHtcblxuXG4gICAgY29uc3Qgcm9vdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyb290Jyk7XG4gICAgY29uc3QgcGFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOyBcbiAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoZWFkZXInKTsgXG4gICAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpOyBcbiAgICBjb25zdCBzaWRlYmFyID0gbmV3IE5hdmlnYXRpb25ET00oKTsgXG4gICAgY29uc3QgY29udGVudCA9IG5ldyBwcm9qZWN0KG5hbWUsIGZpbHRlckl0ZW1zKG5hbWUpKTsgXG5cbiAgICB0aXRsZS5pbm5lclRleHQgPSAnVG8gRG8gTGlzdCB8IFRoZSBPZGluIFByb2plY3QnXG5cbiAgICBoZWFkZXIuYXBwZW5kKHRpdGxlKTsgXG4gICAgcGFnZS5jbGFzc05hbWUgPSAnY29udGFpbmVyJzsgXG5cblxuICAgIHNpZGViYXIuY2xhc3NOYW1lID0gJ25hdmlnYXRpb24nOyBcblxuICAgIHBhZ2UuYXBwZW5kKGhlYWRlcik7XG4gICAgcGFnZS5hcHBlbmQoc2lkZWJhcik7IFxuICAgIHBhZ2UuYXBwZW5kKGNvbnRlbnQpOyBcblxuICAgIHJvb3QudGV4dENvbnRlbnQgPSAnJzsgXG4gICAgcm9vdC5hcHBlbmQocGFnZSk7IFxuICAgIG5hdmlnYXRhdGVTZWN0aW9ucygpOyBcbn0iLCJpbXBvcnQgJy4vc2Fzcy9tYWluLnNjc3MnOyBcbmltcG9ydCBHZW5lcmljUGFnZSBmcm9tICcuL0dlbmVyaWNQYWdlLmpzJzsgXG5pbXBvcnQgcmVuZGVyUGFnZUNvbnRlbnQgZnJvbSAnLi9yZW5kZXJQYWdlQ29udGVudCc7XG5cbkdlbmVyaWNQYWdlKHJlbmRlclBhZ2VDb250ZW50LCAnaG9tZScpXG5cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZmlsdGVySXRlbXMiLCJwcm9qZWN0IiwiaXRlbXNTdG9yZWQiLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJmaWx0ZXIiLCJjb21wbGV0ZSIsImRhdGUiLCJEYXRlIiwidG9JU09TdHJpbmciLCJzdWJzdHJpbmciLCJub3ciLCJsYXN0V2VlayIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwidG9Mb3dlckNhc2UiLCJUb0RvSXRlbSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJwcmlvcml0eSIsIm5vdGVzIiwiY2hlY2tsaXN0IiwiYWRkTmV3SXRlbSIsImVkaXRJdGVtIiwiZGl2IiwiZm9ybSIsImFkZEJ0biIsImNsb3NlQnRuIiwiaXRlbVRvVXNlIiwidGFzayIsInRhc2tOYW1lIiwibGFiZWwiLCJ0eXBlIiwiZWwiLCJ2YWx1ZXMiLCJ0YXNrRGVzYyIsInRhc2tEYXRlIiwidGFza1ByaW9ydHkiLCJvcHRpb24iLCJ0YXNrTm90ZXMiLCJ0YXNrQ2hlY2tsaXN0IiwidGFza1Byb2plY3QiLCJpbm5lclRleHQiLCJpbnB1dCIsImNyZWF0ZUlucHV0IiwiYXBwZW5kIiwiY29uc29sZSIsImxvZyIsImFkZEV2ZW50TGlzdGVuZXIiLCJnZXRFbGVtZW50QnlJZCIsInZhbHVlIiwicHJpb3J0eSIsInNldEl0ZW0iLCJtYW5hZ2VFZGl0IiwibWFuYWdlTmV3SXRlbSIsImNsb3NlRm9ybSIsImNsYXNzTmFtZSIsImxhYmVsVGV4dCIsImZvciIsImRlZmF1bHRWYWx1ZSIsImZvckVhY2giLCJvcHQiLCJyZW5kZXJQYWdlSXRlbSIsIml0ZW1zIiwiY29udGFpbmVyIiwibmV3SXRlbSIsIml0ZW1Db250YWluZXIiLCJpdGVtVGl0bGUiLCJpdGVtRGF0ZSIsInZpZXdCdGIiLCJjbGFzc05hbSIsImV2ZW50Iiwic3RvcFByb3BhZ2F0aW9uIiwiY3VycmVudEl0ZW0iLCJDb21wbGV0ZUl0ZW0iLCJsb2NhdGlvbiIsInJlbG9hZCIsImNvbXBsZXRlVGFzayIsImNsYXNzTGlzdCIsImFkZCIsIm5ld0l0ZW1Qb3BVcCIsImJvZHkiLCJyZW5kZXJQYWdlQ29udGVudCIsIm5hbWUiLCJwYWdlIiwicGFnZUl0ZW1zIiwibmF2aWdhdGF0ZVNlY3Rpb25zIiwicXVlcnlTZWxlY3RvckFsbCIsImxpIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImFkZEl0ZW0iLCJsaXMiLCJsaVRvU3RvcmFnZSIsImluZGV4T2YiLCJyZW1vdmVJdGVtIiwidXBkYXRlTG9jYWxTdG9yYWdlIiwiY2xvc2VQb3B1cCIsIk5hdmlnYXRpb25ET00iLCJuYXYiLCJ1bFN0YXRpYyIsImhvbWUiLCJ0b2RheSIsIndlZWsiLCJjb21wbGV0ZVRhc2tzIiwibGF0ZVRhc2tzIiwidWxQcm9qZWN0cyIsInByb2plY3RUaXRsZSIsImRlbGV0ZVN0b3JhZ2VCdG4iLCJwb3B1cCIsImxhYmVsU3RyIiwiaW5wdXRTdHIiLCJOZXdQcm9qZWN0Iiwicm9vdCIsImhlYWRlciIsInNpZGViYXIiLCJ0ZXh0Q29udGVudCIsIkdlbmVyaWNQYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==